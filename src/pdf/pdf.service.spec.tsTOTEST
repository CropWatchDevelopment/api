// import { Test, TestingModule } from '@nestjs/testing';
// import { PdfService } from './pdf.service';
// import { DataService } from 'src/data/data.service';
// import { ReportsTemplatesService } from 'src/reports_templates/reports_templates.service';

// const mockReportsTemplatesService = {
//   getReportTemplateByDevEui: jest.fn().mockResolvedValue({
//     template: {
//       content: [
//         {},
//         {},
//         {
//           table: {
//             body: [
//               ['Header1', 'Header2', 'Header3', 'Header4'],
//             ],
//             widths: ['*', '*', '*', '*'], // Ensure column widths are defined
//           },
//         },
//       ],
//     },
//   }),
// };


// describe('PdfService', () => {
//   let pdfService: PdfService;
//   let dataService: DataService;
//   let reportsTemplatesService: ReportsTemplatesService;

//   beforeEach(async () => {
//     const mockDataService = {
//       findAll: jest.fn().mockResolvedValue([
//         {
//           id: 1,
//           created_at: '2024-11-07T00:00:00Z',
//           dewPointC: 10.5,
//           humidity: 45,
//           temperatureC: 25.3,
//           vpd: 1.2,
//           dev_eui: 'mock-dev-eui',
//           profile_id: 'mock-profile-id',
//         },
//       ]),
//     };

//     const mockReportsTemplatesService = {
//       getReportTemplateByDevEui: jest.fn().mockResolvedValue({
//         template: {
//           content: [
//             {},
//             {},
//             { table: { body: [['Header1', 'Header2', 'Header3', 'Header4']] } },
//           ],
//         },
//       }),
//     };

//     const module: TestingModule = await Test.createTestingModule({
//       providers: [
//         PdfService,
//         { provide: DataService, useValue: mockDataService },
//         { provide: ReportsTemplatesService, useValue: mockReportsTemplatesService },
//       ],
//     }).compile();

//     pdfService = module.get<PdfService>(PdfService);
//     dataService = module.get<DataService>(DataService);
//     reportsTemplatesService = module.get<ReportsTemplatesService>(
//       ReportsTemplatesService,
//     );
//   });

//   // it('should be defined', () => {
//   //   expect(pdfService).toBeDefined();
//   // });

//   // describe('createPdfBinary', () => {
//   //   it('should create a PDF binary', async () => {
//   //     const result = await pdfService.createPdfBinary('mock-user-id', 'mock-dev-eui');

//   //     expect(result).toBeInstanceOf(Buffer);
//   //     expect(result.length).toBeGreaterThan(0);
//   //     expect(dataService.findAll).toHaveBeenCalledWith(
//   //       { devEui: 'mock-dev-eui', skip: 0, take: 10, order: 'ASC' },
//   //       'mock-user-id',
//   //     );
//   //     expect(reportsTemplatesService.getReportTemplateByDevEui).toHaveBeenCalledWith('mock-dev-eui');
//   //   });
//   // });
// });
