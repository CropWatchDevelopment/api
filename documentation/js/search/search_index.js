var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.196,1,3.039]],["body/controllers/AppController.html",[0,1.804,1,4.585,2,1.344,3,0.148,4,0.148,5,0.133,6,4.216,7,0.495,8,1.136,9,1.619,10,6.463,11,1.475,12,0.012,13,4.819,14,3.819,15,0.646,16,4.819,17,0.872,18,2.772,19,0.385,20,4.819,21,0.579,22,2.772,23,2.415,24,1.572,25,4.216,26,4.819,27,3.522,28,3.522,29,5.488,30,3.522,31,2.499,32,4.819,33,4.819,34,6.273,35,4.819,36,4.819,37,0.148,38,0.137,39,1.386,40,2.415,41,3.819,42,3.8,43,3.819,44,4.216,45,1.052,46,1.264,47,0.845,48,4.216,49,4.819,50,0.009,51,0.009]],["title/modules/AppModule.html",[52,1.124,53,3.039]],["body/modules/AppModule.html",[1,3.905,2,1.239,3,0.091,4,0.091,5,0.082,12,0.012,19,0.409,21,0.354,27,2.157,28,2.157,30,2.157,37,0.091,38,0.084,41,2.339,43,3.521,50,0.006,51,0.006,52,1.445,53,6.147,54,1.176,55,1.218,56,1.311,57,1.311,58,1.218,59,2.374,60,1.311,61,2.582,62,2.582,63,2.582,64,3.854,65,4.294,66,4.059,67,4.294,68,4.568,69,4.568,70,4.568,71,4.568,72,4.568,73,4.568,74,4.294,75,3.358,76,3.358,77,1.974,78,1.311,79,1.311,80,4.443,81,2.325,82,2.951,83,2.012,84,2.582,85,2.951,86,2.951,87,2.339,88,2.951,89,2.951,90,2.951,91,4.443,92,2.951,93,5.343,94,2.339,95,2.951,96,3.905,97,2.951,98,2.951,99,2.951,100,2.951,101,2.951,102,2.951,103,2.951,104,2.951,105,2.951,106,2.951,107,2.951,108,2.951,109,2.951,110,2.951,111,4.443,112,3.029,113,2.951,114,2.951,115,2.951,116,2.951,117,2.951,118,2.339,119,2.951,120,2.951,121,2.951,122,2.951,123,0.751,124,2.339,125,2.582,126,4.443,127,4.443,128,2.951,129,2.951,130,2.157]],["title/injectables/AppService.html",[131,0.661,132,3.294]],["body/injectables/AppService.html",[3,0.18,4,0.18,5,0.162,7,0.601,8,1.282,10,6.931,12,0.012,15,0.784,17,1.059,19,0.294,21,0.702,37,0.18,38,0.166,45,1.277,50,0.01,51,0.01,131,1.126,132,5.614,133,1.97,134,5.117,135,5.848,136,1.409,137,5.848,138,5.848]],["title/controllers/AuthController.html",[0,1.196,139,3.039]],["body/controllers/AuthController.html",[0,1.253,2,0.802,3,0.088,4,0.088,5,0.079,7,0.295,8,0.789,9,1.54,11,1.333,12,0.012,14,2.278,15,0.584,17,0.789,18,2.505,19,0.346,21,0.345,22,1.654,23,1.441,24,0.938,29,3.811,30,2.101,31,1.735,37,0.088,38,0.082,40,1.441,41,2.278,42,1.742,43,2.278,44,2.515,45,0.951,46,0.754,47,0.764,50,0.006,51,0.006,76,2.635,139,3.184,140,2.515,141,1.382,142,1.96,143,3.452,144,7.529,145,2.875,146,2.875,147,5.867,148,4.149,149,4.356,150,5.133,151,5.133,152,3.811,153,5.133,154,3.811,155,5.133,156,5.133,157,3.811,158,5.133,159,4.356,160,5.867,161,3.071,162,0.705,163,4.839,164,4.356,165,2.875,166,1.079,167,0.814,168,3.025,169,2.875,170,2.875,171,2.875,172,2.875,173,2.875,174,2.875,175,2.278,176,1.575,177,1.654,178,6.755,179,1.843,180,2.875,181,2.875,182,2.101,183,2.515,184,2.875,185,2.278,186,3.025,187,2.278,188,2.278,189,2.875,190,1.145,191,1.742,192,2.875,193,2.278,194,6.677,195,4.356,196,2.792,197,3.452,198,2.639,199,3.811,200,2.875,201,2.875,202,2.875,203,2.875,204,2.875,205,2.515,206,2.875,207,2.515,208,2.875,209,2.875,210,3.452,211,2.515,212,2.875,213,2.515,214,2.875,215,2.875,216,0.968,217,2.515,218,1.069,219,2.875,220,2.875,221,2.875,222,1.843,223,2.875]],["title/modules/AuthModule.html",[52,1.124,64,2.391]],["body/modules/AuthModule.html",[2,1.842,3,0.161,4,0.161,5,0.144,12,0.012,19,0.364,21,0.627,37,0.161,38,0.149,50,0.009,51,0.009,52,1.959,54,2.08,55,2.155,56,2.321,57,2.321,58,2.155,59,3.219,60,3.219,64,4.685,76,4.247,77,2.935,78,2.321,79,2.321,139,5.295,182,3.817,224,4.569,225,4.569,226,5.222,227,5.222,228,5.222]],["title/injectables/AuthService.html",[76,2.083,131,0.661]],["body/injectables/AuthService.html",[3,0.091,4,0.091,5,0.082,7,0.303,8,0.804,9,1.699,12,0.012,15,0.854,17,0.967,19,0.268,21,0.354,37,0.091,38,0.084,39,1.278,45,1.166,47,1.042,50,0.006,51,0.006,76,2.226,83,2.012,131,0.706,133,0.994,136,1.527,161,1.545,162,0.854,166,1.22,167,1.111,186,2.555,216,2.002,217,3.887,218,1.987,222,2.847,229,2.582,230,1.834,231,3.338,232,5.579,233,4.443,234,4.443,235,4.443,236,2.582,237,5.31,238,4.443,239,4.443,240,5.31,241,2.951,242,3.81,243,1.757,244,4.443,245,2.951,246,3.521,247,4.443,248,2.951,249,4.674,250,2.339,251,2.157,252,2.339,253,2.951,254,2.951,255,2.951,256,2.582,257,2.339,258,2.157,259,4.443,260,2.582,261,2.582,262,3.887,263,2.582,264,2.582,265,2.582,266,2.012,267,2.339,268,2.157,269,3.887,270,2.582,271,3.521,272,4.443,273,1.788,274,2.582,275,3.521,276,2.374,277,3.745,278,2.951,279,2.669,280,2.5,281,4.443,282,2.951,283,3.521,284,2.951,285,2.951,286,2.582,287,2.847,288,4.053,289,2.951,290,2.951,291,2.951,292,2.582,293,2.951,294,2.951,295,4.443,296,2.951,297,1.697,298,2.951,299,2.951,300,2.951,301,1.263,302,3.521,303,2.951,304,2.951,305,4.443,306,2.951,307,2.951,308,2.951,309,2.951]],["title/classes/BaseController.html",[38,0.118,310,2.391]],["body/classes/BaseController.html",[3,0.092,4,0.092,5,0.083,7,0.307,8,0.811,9,1.839,11,2.137,12,0.012,15,0.902,17,1.16,19,0.3,21,0.359,37,0.138,38,0.085,39,0.859,45,1.305,46,1.765,47,1.123,50,0.006,51,0.006,123,1.826,124,2.366,142,3.055,162,0.859,166,1.315,167,1.197,176,2.948,177,2.577,190,1.189,243,2.06,279,1.189,280,1.934,301,2.88,310,2.577,311,0.943,312,2.366,313,1.5,314,2.08,315,2.09,316,2,317,2,318,2.985,319,3.622,320,2.985,321,3.551,322,2.035,323,3.508,324,2.035,325,3.668,326,2.985,327,2.035,328,2.035,329,2.035,330,2.985,331,2.035,332,2.035,333,2.985,334,1.148,335,3.686,336,2.035,337,3.439,338,2.985,339,1.148,340,2.035,341,2.985,342,2.872,343,2.612,344,1.717,345,4.371,346,3.275,347,3.275,348,3.275,349,3.92,350,2.612,351,3.275,352,2.182,353,1.326,354,2.948,355,1.039,356,2.612,357,2.612,358,2.612,359,3.439,360,2.182,361,2.612,362,2.366,363,2.612,364,2.612,365,2.612,366,2.612,367,2.612,368,2.612,369,2.612,370,2.612,371,2.612,372,2.612,373,2.612]],["title/classes/BaseRepository.html",[38,0.118,374,1.998]],["body/classes/BaseRepository.html",[3,0.069,4,0.069,5,0.062,7,0.23,8,0.926,9,1.785,12,0.012,15,0.841,17,1.081,19,0.112,37,0.069,38,0.191,39,1.029,40,2.564,45,1.222,46,1.982,47,1.1,50,0.005,51,0.005,123,1.825,136,1.587,148,1.119,162,0.874,166,1.226,167,1.116,205,1.954,211,1.954,216,2.012,218,2.221,231,1.169,243,1.882,276,3.131,277,4.085,279,2.38,286,3.13,297,3.22,301,2.19,311,0.706,313,0.998,314,1.557,315,1.669,316,1.33,317,1.33,334,1.376,339,1.376,344,2.058,355,1.245,359,3.75,374,1.72,375,1.954,376,3.577,377,2.439,378,5.117,379,3.13,380,3.577,381,4.475,382,3.13,383,3.051,384,4.475,385,2.311,386,3.577,387,3.13,388,3.577,389,3.577,390,3.13,391,3.577,392,3.577,393,3.577,394,3.577,395,1.59,396,1.285,397,2.879,398,4.477,399,2.233,400,2.293,401,3.127,402,2.233,403,1.531,404,4.599,405,2.233,406,2.678,407,2.233,408,1.476,409,2.233,410,2.233,411,2.233,412,1.285,413,2.233,414,2.233,415,2.233,416,1.431,417,1.431,418,3.619,419,3.436,420,5.974,421,5.117,422,1.353,423,2.233,424,3.577,425,1.77]],["title/classes/BaseService.html",[38,0.118,426,2.278]],["body/classes/BaseService.html",[3,0.102,4,0.102,5,0.092,7,0.341,8,0.877,9,1.904,12,0.012,15,0.967,17,1.265,19,0.166,37,0.149,38,0.094,39,0.953,45,1.526,46,1.65,47,1.226,50,0.007,51,0.007,123,2.036,162,0.937,166,1.435,167,1.306,243,2.129,311,1.047,313,1.35,314,1.685,315,2.183,316,1.801,317,1.801,319,3.466,323,2.907,334,2.201,335,3.543,339,2.201,353,1.473,354,4.26,355,1.153,374,3.025,377,3.302,385,2.885,395,2.152,401,1.735,403,2.073,408,1.999,425,2.627,426,2.653,427,2.627,428,3.54,429,2.9,430,3.315,431,3.466,432,3.315,433,3.315,434,3.315,435,3.315,436,3.315,437,3.315,438,2.423,439,2.9,440,2.9,441,1.047,442,2.9,443,2.9,444,2.9,445,2.9,446,2.9,447,2.9,448,2.9]],["title/interfaces/BaseServiceInterface.html",[319,2.519,353,1.847]],["body/interfaces/BaseServiceInterface.html",[3,0.113,4,0.113,5,0.102,7,0.379,9,1.62,11,1.602,12,0.012,19,0.332,21,0.443,37,0.161,38,0.105,45,1.443,46,1.734,50,0.007,51,0.007,123,1.682,124,2.925,142,3.567,162,0.886,176,3.33,177,3.009,190,1.47,230,2.159,243,2.032,271,6.037,279,1.47,280,1.881,301,2.602,310,2.123,312,2.925,313,1.844,314,1.82,315,2.277,316,2.459,317,2.459,319,3.682,321,2.925,323,3.224,335,3.518,337,3.009,342,3.353,343,3.229,344,2.123,345,4.833,346,3.824,347,3.824,348,3.824,349,4.578,350,3.229,351,3.824,352,2.698,353,1.64,354,3.33,355,1.284,356,3.229,357,3.229,358,3.229,359,3.803,360,2.698,361,3.229,362,2.925,363,3.229,364,3.229,365,3.229,366,3.229,367,3.229,368,3.229,369,3.229,370,3.229,371,3.229,372,3.229,373,3.229,449,2.365]],["title/interfaces/BaseServiceInterface-1.html",[42,2.1,319,2.1,353,1.54]],["body/interfaces/BaseServiceInterface-1.html",[3,0.116,4,0.116,5,0.105,7,0.388,8,0.963,9,1.696,12,0.012,15,0.895,17,1.21,19,0.19,37,0.164,38,0.108,45,1.595,46,1.396,47,1.08,50,0.007,51,0.007,123,2.009,162,0.825,166,1.264,167,1.151,243,2.145,313,1.484,315,2.297,316,1.979,317,1.979,319,3.731,323,3.087,334,2.369,335,3.647,339,2.369,353,1.68,354,4.375,355,1.315,374,2.558,377,2.577,385,3.016,401,1.979,403,1.618,408,1.56,425,2.996,426,2.071,427,2.996,428,2.763,431,3.731,438,2.763,439,3.307,440,3.307,441,1.194,442,3.307,443,3.307,444,3.307,445,3.307,446,3.307,447,3.307,448,3.307,449,2.423,450,3.78,451,3.78,452,3.78,453,3.78]],["title/classes/CreateDatumDto.html",[38,0.118,454,2.519]],["body/classes/CreateDatumDto.html",[3,0.198,4,0.198,5,0.178,12,0.011,37,0.198,38,0.183,50,0.01,51,0.01,311,2.03,454,4.539,455,5.622,456,5.093]],["title/classes/CreateDeviceDto.html",[38,0.118,457,2.664]],["body/classes/CreateDeviceDto.html",[3,0.145,4,0.145,5,0.131,7,0.486,11,2.331,12,0.012,15,1.02,19,0.238,37,0.145,38,0.176,47,1.212,50,0.009,51,0.009,123,1.577,136,1.607,162,1.082,230,2.558,311,1.495,457,3.972,458,6.835,459,3.75,460,3.976,461,6.048,462,4.188,463,4.701,464,4.731,465,4.731,466,4.731,467,3.75,468,4.731,469,4.731,470,5.007,471,4.531,472,4.172,473,2.477]],["title/classes/CreateDeviceOwnerDto.html",[38,0.118,474,2.664]],["body/classes/CreateDeviceOwnerDto.html",[3,0.15,4,0.15,5,0.135,7,0.501,11,2.272,12,0.012,15,0.994,19,0.245,37,0.15,38,0.18,50,0.009,51,0.009,123,1.888,136,1.477,162,0.994,230,2.61,311,1.542,460,4.036,462,4.251,463,4.053,467,5.012,470,4.928,471,5.128,472,3.844,473,2.554,474,4.053,475,6.728,476,2.958,477,3.867,478,6.138,479,7.016,480,4.879,481,4.879,482,4.879,483,4.879]],["title/classes/CreateDeviceTypeDto.html",[38,0.118,484,2.664]],["body/classes/CreateDeviceTypeDto.html",[3,0.167,4,0.167,5,0.15,7,0.559,11,2.075,12,0.012,15,0.908,19,0.273,37,0.167,38,0.193,47,1.294,50,0.009,51,0.009,136,1.537,148,3.699,162,0.908,230,2.797,311,1.719,463,4.343,470,4.73,472,4.044,473,2.848,476,2.84,484,4.343,485,6.458,486,4.312,487,5.441,488,5.441]],["title/classes/CreateLocationDto.html",[38,0.118,489,2.664]],["body/classes/CreateLocationDto.html",[3,0.127,4,0.127,5,0.114,7,0.424,11,2.3,12,0.012,15,1.006,19,0.207,37,0.127,38,0.161,47,1.132,50,0.008,51,0.008,123,1.911,136,1.495,148,3.235,162,1.006,167,1.502,230,2.336,311,1.305,422,4.87,463,2.647,470,3.627,471,4.136,472,3.805,473,2.162,478,5.648,489,3.627,490,6.73,491,3.273,492,6.455,493,6.455,494,6.455,495,4.951,496,4.13,497,4.13,498,4.13,499,4.13,500,4.13,501,4.13,502,4.13,503,4.13,504,4.13,505,6.572,506,5.659,507,5.659]],["title/classes/CreateProfileDto.html",[38,0.118,508,2.834]],["body/classes/CreateProfileDto.html",[3,0.1,4,0.1,5,0.09,7,0.334,11,2.37,12,0.012,15,1.037,19,0.163,37,0.1,38,0.136,46,1.484,50,0.007,51,0.007,136,1.642,162,1.037,167,1.543,230,1.971,242,3.627,311,1.028,422,4.957,463,2.084,470,3.061,472,4.116,473,1.702,495,6.075,505,6.774,508,3.256,509,6.853,510,2.578,511,5.659,512,5.659,513,5.659,514,5.659,515,5.659,516,5.659,517,5.659,518,5.659,519,5.659,520,3.491,521,3.252,522,3.252,523,3.252,524,3.252,525,3.252,526,3.252,527,3.252,528,3.252,529,3.252,530,3.252,531,3.252,532,3.252,533,3.252,534,3.252,535,3.252,536,4.776,537,3.785,538,5.659]],["title/classes/CreateReportTemplateDto.html",[38,0.118,539,2.834]],["body/classes/CreateReportTemplateDto.html",[3,0.145,4,0.145,5,0.131,7,0.486,11,2.331,12,0.012,15,1.02,19,0.238,37,0.145,38,0.176,47,1.212,50,0.009,51,0.009,123,1.577,136,1.607,162,1.082,230,2.558,311,1.495,460,3.976,461,6.048,462,4.188,463,4.701,467,3.75,470,5.007,471,4.531,472,4.172,473,2.477,539,4.226,540,6.835,541,3.75,542,4.731,543,4.731,544,4.731,545,4.731,546,4.731]],["title/controllers/CwDeviceOwnersController.html",[0,1.196,547,3.039]],["body/controllers/CwDeviceOwnersController.html",[0,1.009,2,0.978,3,0.108,4,0.108,5,0.097,7,0.361,8,0.913,9,1.803,11,2.096,12,0.012,15,0.917,17,1.239,19,0.369,21,0.421,23,1.758,24,1.144,37,0.108,38,0.1,46,1.323,47,1.133,50,0.007,51,0.007,123,1.644,141,1.687,162,0.866,166,1.326,167,1.207,176,1.922,177,2.018,243,1.796,273,2.126,280,1.262,301,2.529,310,4.225,313,1.407,314,2.056,315,1.927,316,1.876,317,1.876,322,2.392,323,3.293,324,2.392,325,4.029,327,2.392,328,2.392,329,2.392,331,2.392,332,2.392,334,1.35,335,3.472,336,2.392,337,2.902,339,1.35,340,2.392,342,2.248,344,2.018,382,3.069,383,2.392,441,1.594,474,2.248,476,2.486,547,3.688,548,4.415,549,2.78,550,5.909,551,3.042,552,2.564,553,2.564,554,2.564,555,2.564,556,2.564,557,2.765,558,3.069,559,1.62,560,3.999,561,2.564,562,2.78,563,1.448,564,1.502,565,2.392,566,1.687,567,3.508,568,3.508,569,3.508,570,2.78,571,3.508,572,2.564,573,2.78,574,2.78,575,3.508,576,3.508]],["title/modules/CwDeviceOwnersModule.html",[52,1.124,65,2.664]],["body/modules/CwDeviceOwnersModule.html",[2,1.712,3,0.143,4,0.143,5,0.129,12,0.012,19,0.381,21,0.56,37,0.143,38,0.133,50,0.008,51,0.008,52,1.856,54,1.857,55,1.924,56,2.071,57,2.071,58,1.924,59,3.049,60,3.049,65,5.309,75,3.899,77,2.727,78,2.071,79,2.071,81,3.212,87,3.694,321,3.694,377,3.178,390,4.078,547,5.016,557,4.569,558,4.078,577,4.078,578,4.661,579,4.078,580,4.078,581,4.714,582,6.137,583,4.661,584,3.694]],["title/injectables/CwDeviceOwnersService.html",[131,0.661,557,2.278]],["body/injectables/CwDeviceOwnersService.html",[3,0.103,4,0.103,5,0.093,7,0.345,8,0.885,9,1.875,12,0.012,15,0.995,17,1.312,19,0.353,21,0.403,31,2.296,37,0.103,38,0.095,39,0.966,45,0.733,46,1.66,47,1.271,50,0.007,51,0.007,123,1.889,131,0.777,133,1.131,136,1.397,162,0.971,166,1.487,167,1.354,190,1.337,243,1.948,313,1.363,314,1.701,315,1.88,316,1.817,317,1.817,323,2.258,334,1.292,335,2.924,339,1.292,354,3.687,355,1.168,385,2.017,395,2.172,403,1.437,408,1.386,426,4.15,431,2.034,441,1.544,462,3.836,474,2.152,476,1.88,551,3.12,557,2.678,559,1.551,560,3.874,563,1.386,564,1.437,565,2.289,566,1.614,581,4.254,584,2.661,585,2.937,586,4.888,587,3.357,588,3.357,589,4.888,590,3.357,591,1.757,592,2.289,593,2.289,594,2.289,595,2.289,596,2.289,597,2.289,598,2.454,599,2.454,600,3.357,601,3.357]],["title/controllers/CwDeviceTypeController.html",[0,1.196,602,3.039]],["body/controllers/CwDeviceTypeController.html",[0,1.047,2,1.015,3,0.112,4,0.112,5,0.101,7,0.374,8,0.938,9,1.818,11,2.126,12,0.012,15,0.93,17,1.257,19,0.373,21,0.437,23,1.824,24,1.187,37,0.112,38,0.104,46,1.359,47,1.152,50,0.007,51,0.007,123,1.671,141,1.75,162,0.995,166,1.349,167,1.228,243,1.821,280,1.309,301,2.582,310,4.271,313,1.445,314,1.802,315,1.967,316,1.926,317,1.926,322,2.481,323,3.333,324,2.481,325,4.112,327,2.481,328,2.481,329,2.481,331,2.481,332,2.481,334,1.4,335,3.506,336,2.481,337,2.979,339,1.4,340,2.481,441,1.636,476,2.528,484,2.332,549,2.884,551,3.086,552,2.66,553,2.66,554,2.66,555,2.66,556,2.66,559,1.681,561,2.66,563,1.502,564,1.558,566,1.75,574,2.884,602,3.786,603,3.184,604,4.105,605,2.711,606,3.184,607,2.481,608,2.481,609,3.639,610,3.639,611,3.639]],["title/modules/CwDeviceTypeModule.html",[52,1.124,612,2.664]],["body/modules/CwDeviceTypeModule.html",[2,1.685,3,0.14,4,0.14,5,0.126,12,0.012,19,0.388,21,0.547,37,0.14,38,0.129,50,0.008,51,0.008,52,1.834,54,1.813,55,1.879,56,2.023,57,2.023,58,1.879,59,3.014,60,3.014,64,4.446,75,3.873,77,2.685,78,2.023,79,2.023,81,3.163,602,4.958,605,4.349,606,3.983,612,5.356,613,3.983,614,3.983,615,4.552,616,3.983,617,4.683,618,4.552,619,4.552,620,3.327,621,3.983,622,3.607]],["title/injectables/CwDeviceTypeService.html",[131,0.661,605,2.176]],["body/injectables/CwDeviceTypeService.html",[3,0.104,4,0.104,5,0.094,7,0.348,8,0.89,9,1.878,12,0.012,15,0.997,17,1.316,19,0.354,21,0.407,31,2.307,37,0.104,38,0.096,39,0.974,45,0.739,46,1.667,47,1.274,50,0.007,51,0.007,123,1.894,131,0.782,133,1.141,136,1.152,162,0.974,166,1.491,167,1.358,190,1.349,243,1.953,313,1.372,314,1.711,315,1.889,316,1.829,317,1.829,323,2.272,334,1.303,335,2.936,339,1.303,354,3.699,355,1.178,385,2.03,395,2.186,403,1.45,408,1.398,426,4.159,431,2.052,441,1.554,476,1.892,484,2.17,551,3.13,559,1.564,563,1.398,564,1.45,566,1.628,592,2.309,593,2.309,594,2.309,595,2.309,596,2.309,597,2.309,598,2.475,604,3.898,605,2.575,607,2.309,608,2.309,617,4.267,622,2.684,623,2.963,624,4.919,625,3.387,626,3.387,627,4.919,628,3.387,629,4.919,630,3.387,631,3.387,632,2.963]],["title/controllers/CwDevicesController.html",[0,1.196,633,3.039]],["body/controllers/CwDevicesController.html",[0,0.993,2,0.963,3,0.106,4,0.106,5,0.095,7,0.355,8,0.903,9,1.797,11,2.083,12,0.012,15,0.912,17,1.232,19,0.383,21,0.415,22,1.987,23,1.731,24,1.126,37,0.106,38,0.098,46,1.309,47,1.125,50,0.007,51,0.007,123,1.632,141,1.66,162,0.86,166,1.317,167,1.199,185,2.737,191,2.093,243,1.785,273,2.093,280,1.242,287,3.198,288,3.402,301,2.507,310,4.305,313,1.392,314,1.736,315,1.91,316,1.855,317,1.855,322,2.355,323,3.275,324,2.355,325,3.994,327,2.355,328,2.355,329,2.355,331,2.355,332,2.355,334,1.329,335,3.457,336,2.355,337,2.87,339,1.329,340,2.355,383,2.355,441,1.576,457,2.214,476,1.329,549,2.737,551,3.024,552,2.525,553,2.525,554,2.525,555,2.525,556,2.525,559,1.595,561,2.525,563,1.426,564,2.136,566,1.66,570,2.737,573,3.954,574,2.737,633,3.647,634,3.022,635,2.612,636,3.022,637,3.022,638,3.454,639,3.954,640,3.647,641,3.022,642,2.355,643,3.022,644,3.022,645,3.454,646,3.454,647,3.454,648,3.454]],["title/modules/CwDevicesModule.html",[52,1.124,66,2.519]],["body/modules/CwDevicesModule.html",[2,1.685,3,0.14,4,0.14,5,0.126,12,0.012,19,0.388,21,0.547,37,0.14,38,0.129,50,0.008,51,0.008,52,1.834,54,1.813,55,1.879,56,2.023,57,2.023,58,1.879,59,3.014,60,3.014,64,4.446,66,5.063,75,3.873,77,2.685,78,2.023,79,2.023,81,3.163,84,3.983,87,3.607,633,4.958,635,4.349,636,3.983,649,3.983,650,3.983,651,4.552,652,3.983,653,4.683,654,6.042,655,4.552,656,3.983]],["title/injectables/CwDevicesService.html",[131,0.661,635,2.176]],["body/injectables/CwDevicesService.html",[3,0.105,4,0.105,5,0.094,7,0.35,8,0.893,9,1.879,12,0.012,15,0.999,17,1.317,19,0.354,21,0.409,31,2.313,37,0.105,38,0.097,39,0.978,45,0.742,46,1.671,47,1.276,50,0.007,51,0.007,123,1.896,131,0.785,133,1.145,136,1.155,162,0.975,166,1.493,167,1.36,190,1.355,243,1.955,313,1.376,314,1.717,315,1.894,316,1.835,317,1.835,323,2.279,334,1.309,335,2.942,339,1.309,354,3.706,355,1.183,385,2.037,395,2.193,403,1.456,408,1.404,426,4.163,431,2.061,441,1.559,457,2.18,460,1.956,551,3.135,559,1.571,564,1.456,566,1.635,591,2.583,592,2.319,593,2.319,594,2.319,595,2.319,596,2.319,597,2.319,635,2.583,639,3.91,640,2.486,641,2.976,642,2.319,653,4.273,657,2.976,658,4.934,659,3.401,660,3.401,661,4.934,662,3.401,663,3.401,664,3.401,665,3.401,666,3.401]],["title/controllers/DataController.html",[0,1.196,667,3.039]],["body/controllers/DataController.html",[0,0.789,2,0.765,3,0.084,4,0.084,5,0.076,7,0.282,8,0.761,11,0.84,12,0.012,15,0.368,17,0.497,19,0.351,21,0.33,22,1.578,23,1.375,24,1.371,37,0.084,38,0.078,39,0.789,40,3.094,45,1.422,46,1.34,47,1.083,50,0.006,51,0.006,118,4.049,123,1.921,136,1.456,141,1.319,148,3.505,162,0.961,166,0.563,167,0.513,168,3.294,176,2.303,177,2.418,185,2.174,191,1.662,197,2.174,198,4.238,213,2.4,231,2.675,273,1.662,276,2.895,314,0.955,315,1.666,342,1.758,344,1.578,355,1.778,360,2.005,362,2.174,383,1.871,406,1.436,454,3.096,476,1.966,559,1.267,566,1.319,570,2.174,573,2.174,591,3.41,605,2.2,635,2.2,667,3.072,668,2.4,669,2.744,670,4.769,671,4.441,672,4.769,673,4.956,674,4.539,675,2.744,676,5.011,677,4.203,678,2.744,679,6.995,680,3.678,681,4.203,682,4.203,683,2.744,684,5.727,685,2.744,686,2.744,687,4.203,688,4.203,689,2.744,690,2.744,691,2.4,692,4.049,693,2.174,694,2.8,695,2.4,696,3.072,697,3.67,698,4.203,699,5.402,700,2.005,701,2.005,702,2.744,703,2.744,704,2.744,705,2.174,706,2.174,707,2.744,708,2.4,709,2.744,710,2.4,711,2.744,712,2.744,713,2.744,714,2.4,715,2.744,716,2.744,717,2.744,718,2.744,719,2.744,720,2.744,721,2.744,722,2.744,723,2.744]],["title/modules/DataModule.html",[52,1.124,67,2.664]],["body/modules/DataModule.html",[2,1.4,3,0.107,4,0.107,5,0.096,12,0.012,19,0.402,21,0.419,37,0.107,38,0.099,50,0.007,51,0.007,52,1.592,54,1.388,55,1.438,56,1.549,57,1.549,58,1.438,59,2.616,60,2.616,66,4.309,67,5.45,77,2.232,78,1.549,79,1.549,81,2.628,397,3.045,557,3.897,581,4.309,584,2.762,605,3.723,612,4.558,617,4.309,622,2.762,635,3.723,653,4.309,656,3.049,667,4.303,694,4.35,695,3.049,700,2.547,701,2.547,724,3.049,725,3.485,726,3.049,727,3.049,728,4.81,729,3.485,730,3.485,731,2.762,732,3.049,733,2.762,734,3.049,735,3.049,736,3.485]],["title/injectables/DataRepository.html",[131,0.661,728,2.519]],["body/injectables/DataRepository.html",[3,0.11,4,0.11,5,0.099,7,0.369,8,0.928,9,1.667,12,0.012,15,0.802,17,0.928,19,0.258,21,0.431,31,2.861,37,0.11,38,0.102,39,1.032,42,2.174,45,1.12,46,1.884,47,1.049,50,0.007,51,0.007,123,1.958,131,0.815,133,1.209,136,1.531,162,0.925,166,1.417,167,1.118,190,1.43,216,1.727,218,1.907,243,1.713,276,3.069,277,3.418,279,2.043,280,1.844,297,2.95,301,1.536,355,1.249,385,2.117,396,2.064,397,3.075,398,5.713,412,2.064,417,3.287,418,3.107,419,2.95,422,2.174,520,4.375,591,3.418,670,4.452,671,4.452,672,4.452,676,3.14,728,3.107,737,3.14,738,5.129,739,5.129,740,3.589,741,5.129,742,3.589,743,5.129,744,3.589,745,5.129,746,2.623,747,3.589,748,3.589,749,3.589,750,3.497,751,3.287,752,3.14,753,2.447,754,3.589]],["title/injectables/DataService.html",[131,0.661,694,2.278]],["body/injectables/DataService.html",[3,0.08,4,0.08,5,0.072,7,0.267,8,0.73,9,1.731,12,0.012,15,0.854,17,1.091,18,2.321,19,0.345,21,0.313,37,0.124,38,0.074,39,1.161,45,1.216,47,1.118,50,0.006,51,0.006,123,1.533,131,0.642,133,0.876,136,1.55,161,2.915,162,0.921,166,1.309,167,1.191,198,1.576,216,2.147,218,2.371,231,4.077,242,4.406,243,1.461,276,1.793,279,2.401,280,2.293,315,1.316,353,1.156,355,1.937,416,1.667,417,1.667,454,2.445,476,2.319,557,3.051,559,1.202,566,1.251,591,3.482,605,2.915,635,2.915,670,3.37,671,3.37,672,3.37,673,2.949,674,2.062,691,2.276,694,2.211,696,2.949,697,1.667,700,1.902,701,1.902,705,3.198,706,3.917,728,4.03,731,2.062,733,2.062,755,2.062,756,4.035,757,4.035,758,4.035,759,4.035,760,2.602,761,4.324,762,2.602,763,3.53,764,4.07,765,2.602,766,3.53,767,3.53,768,2.602,769,3.53,770,2.602,771,3.53,772,3.53,773,2.602,774,3.198,775,3.53,776,2.602,777,2.276,778,2.276,779,2.276,780,3.53,781,2.062,782,2.276,783,2.276,784,2.276,785,2.276,786,4.872,787,2.276,788,2.276,789,3.53,790,2.276,791,3.53,792,2.276,793,2.276,794,2.276,795,2.062,796,2.276,797,4.324,798,2.276]],["title/classes/Datum.html",[38,0.118,799,3.294]],["body/classes/Datum.html",[3,0.198,4,0.198,5,0.178,12,0.011,37,0.198,38,0.184,50,0.01,51,0.01,311,2.039,799,5.952,800,5.646]],["title/injectables/DeviceOwnerRepository.html",[131,0.661,581,2.519]],["body/injectables/DeviceOwnerRepository.html",[3,0.091,4,0.091,5,0.082,7,0.304,8,0.805,9,1.835,12,0.012,15,0.959,17,1.259,19,0.299,21,0.355,31,2.131,37,0.091,38,0.084,39,0.85,40,2.982,45,0.645,46,1.878,47,1.22,50,0.006,51,0.006,123,1.821,131,0.707,133,0.996,136,1.636,161,1.548,162,0.932,166,1.428,167,1.3,216,0.996,218,1.099,243,1.878,276,2.377,277,2.329,279,1.772,280,1.6,297,1.701,301,1.266,313,1.241,314,1.548,315,1.744,316,1.654,317,1.654,334,1.138,339,1.138,359,3.671,374,3.521,385,1.836,395,1.977,396,2.559,397,2.732,400,1.895,401,3.115,403,1.266,404,4.588,406,3.115,408,1.22,412,1.701,418,1.791,419,1.701,441,1.406,460,3.857,462,3.605,476,1.138,551,2.98,563,1.22,564,1.266,581,2.695,599,3.252,746,2.161,750,2.016,751,1.895,753,2.016,795,3.526,801,2.587,802,4.449,803,2.957,804,4.449,805,2.957,806,2.016,807,2.016,808,2.016,809,2.016,810,2.016,811,2.016,812,2.016,813,2.016,814,2.957,815,2.957,816,2.957,817,2.161]],["title/injectables/DeviceRepository.html",[131,0.661,653,2.519]],["body/injectables/DeviceRepository.html",[3,0.092,4,0.092,5,0.082,7,0.306,8,0.81,9,1.838,12,0.012,15,0.961,17,1.263,19,0.3,21,0.358,31,2.14,37,0.092,38,0.085,39,0.857,40,2.994,45,0.65,46,1.882,47,1.223,50,0.006,51,0.006,123,1.825,131,0.711,133,1.003,136,1.598,161,1.559,162,0.983,166,1.431,167,1.303,216,1.003,218,1.108,243,1.882,276,2.388,277,2.342,279,1.782,280,1.609,297,1.714,301,1.275,313,1.248,314,1.557,315,1.752,316,1.664,317,1.664,334,1.146,339,1.146,359,3.683,374,3.528,385,1.847,395,1.988,396,2.574,397,2.741,400,1.909,401,3.127,403,1.275,404,4.599,406,3.127,408,1.23,412,1.714,418,1.805,419,1.714,441,1.414,460,4.012,476,1.146,551,2.988,563,1.23,564,1.275,653,2.711,746,2.178,750,2.031,751,1.909,753,2.031,806,2.031,807,2.031,808,2.031,809,2.031,810,2.031,811,2.031,812,2.031,813,2.031,817,2.178,818,2.607,819,4.701,820,2.979,821,2.607,822,3.271,823,2.979,824,3.546,825,2.979,826,2.979]],["title/injectables/DeviceTypeRepository.html",[131,0.661,617,2.519]],["body/injectables/DeviceTypeRepository.html",[3,0.091,4,0.091,5,0.082,7,0.305,8,0.808,9,1.837,12,0.012,15,0.96,17,1.261,19,0.299,21,0.356,31,2.136,37,0.091,38,0.084,39,0.854,40,2.988,45,0.648,46,1.88,47,1.221,50,0.006,51,0.006,123,1.823,131,0.709,133,1,136,1.597,161,1.554,162,1.016,166,1.43,167,1.302,216,1,218,1.104,243,1.88,276,2.382,277,2.335,279,1.777,280,1.604,297,1.707,301,1.27,313,1.244,314,1.552,315,1.748,316,1.659,317,1.659,334,1.142,339,1.142,359,3.677,374,3.525,385,1.842,395,1.983,396,2.566,397,2.736,400,1.902,401,3.121,403,1.27,404,4.593,406,3.121,408,1.225,412,1.707,418,1.798,419,1.707,441,1.41,476,1.142,551,2.984,563,1.225,564,1.27,607,3.042,617,2.703,632,6.095,750,2.024,751,1.902,753,2.024,806,2.024,807,2.024,808,2.024,809,2.024,810,2.024,811,2.024,812,2.024,813,2.024,817,2.169,822,3.261,827,2.597,828,5.361,829,2.968,830,2.968,831,2.968,832,2.968,833,2.968,834,2.968]],["title/interfaces/FindAllParams.html",[353,1.847,764,3.039]],["body/interfaces/FindAllParams.html",[3,0.095,4,0.095,5,0.085,7,0.318,9,1.412,12,0.012,19,0.364,21,0.371,37,0.141,38,0.088,39,0.889,45,1.328,50,0.006,51,0.006,123,1.796,131,0.731,136,1.443,161,3.185,162,0.913,167,0.859,198,1.873,216,2.296,218,2.535,230,1.899,231,3.797,242,3.899,243,1.206,276,2.044,279,2.591,280,2.451,353,1.374,355,2.117,416,1.981,417,1.981,449,1.981,454,2.787,476,2.502,557,2.52,559,1.428,566,1.486,591,3.696,605,2.408,635,2.408,670,4.648,671,4.648,672,4.648,673,4.447,674,4.353,694,1.694,696,3.362,697,1.981,700,2.26,701,2.26,705,2.45,706,2.45,728,3.328,731,2.45,733,2.45,755,2.45,761,2.705,763,2.705,764,4.015,766,2.705,767,2.705,769,2.705,771,2.705,772,2.705,774,2.45,775,2.705,777,2.705,778,2.705,779,2.705,780,4.024,781,2.45,782,2.705,783,2.705,784,2.705,785,2.705,786,5.323,787,2.705,788,2.705,789,4.024,790,2.705,791,4.024,792,2.705,793,2.705,794,2.705,795,2.45,796,2.705,797,4.806,798,2.705]],["title/controllers/GeolocationController.html",[0,1.196,835,3.039]],["body/controllers/GeolocationController.html",[0,1.408,2,1.365,3,0.15,4,0.15,5,0.135,7,0.503,8,1.147,9,1.631,11,1.498,12,0.012,15,0.656,17,0.886,18,2.815,19,0.373,21,0.588,22,2.815,23,2.453,24,1.596,37,0.15,38,0.139,45,1.068,50,0.009,51,0.009,141,2.353,143,5.889,168,2.815,175,3.879,179,3.137,190,1.95,191,2.965,193,3.879,210,3.879,216,1.648,218,1.82,355,1.703,835,4.632,836,4.282,837,5.544,838,4.895,839,4.895,840,4.282,841,4.503,842,4.282,843,4.895,844,4.895,845,4.895,846,4.32,847,4.895,848,4.895,849,4.895,850,4.895,851,4.895,852,4.895,853,4.895,854,4.895,855,4.895,856,4.895]],["title/modules/GeolocationModule.html",[52,1.124,68,2.834]],["body/modules/GeolocationModule.html",[2,1.83,3,0.159,4,0.159,5,0.143,12,0.012,19,0.381,21,0.621,37,0.159,38,0.147,50,0.009,51,0.009,52,1.95,54,2.059,55,2.134,56,2.298,57,2.298,58,2.134,59,3.204,60,2.298,68,5.608,76,4.009,77,2.917,78,2.298,79,2.298,835,5.271,841,5.127,842,4.523,857,4.523,858,4.523,859,5.17,860,5.17,861,4.523]],["title/injectables/GeolocationService.html",[131,0.661,841,2.664]],["body/injectables/GeolocationService.html",[3,0.161,4,0.161,5,0.144,7,0.537,8,1.196,9,1.681,12,0.012,15,0.7,17,0.945,18,3.004,19,0.262,21,0.627,31,2.885,37,0.161,38,0.149,45,1.14,47,0.916,50,0.009,51,0.009,131,1.05,133,1.759,136,1.441,162,0.7,166,1.072,167,0.976,216,2.224,218,2.456,276,2.935,279,2.08,280,1.878,837,4.569,841,4.233,862,4.569,863,6.605,864,6.605,865,5.222,866,4.139,867,3.817,868,5.222,869,4.569,870,4.569,871,5.222,872,4.569,873,4.569]],["title/controllers/HealthController.html",[0,1.196,874,3.039]],["body/controllers/HealthController.html",[0,1.507,2,1.461,3,0.161,4,0.161,5,0.145,7,0.538,8,1.198,11,1.604,12,0.012,15,0.702,17,0.948,19,0.364,21,0.629,31,2.636,37,0.161,38,0.149,39,1.507,45,1.144,50,0.009,51,0.009,141,2.519,231,3.464,874,4.838,875,4.584,876,6.619,877,6.04,878,5.24,879,5.24,880,6.619,881,6.619,882,6.619,883,4.152,884,4.584,885,5.24,886,5.24,887,5.24,888,5.24,889,5.24,890,5.24]],["title/modules/HealthModule.html",[52,1.124,69,2.834]],["body/modules/HealthModule.html",[2,1.958,3,0.177,4,0.177,5,0.159,12,0.012,19,0.396,21,0.692,37,0.177,38,0.164,50,0.01,51,0.01,52,1.899,54,2.295,69,4.787,81,3.016,874,5.535,883,4.566,891,5.762,892,7.021,893,7.021,894,5.041,895,5.762]],["title/injectables/HttpCacheInterceptor.html",[131,0.661,896,3.294]],["body/injectables/HttpCacheInterceptor.html",[3,0.147,4,0.147,5,0.132,7,0.492,8,1.131,12,0.012,14,5.511,15,0.642,17,0.867,19,0.314,21,0.575,25,6.084,27,3.501,28,3.501,37,0.147,38,0.136,45,1.364,47,0.84,50,0.009,51,0.009,131,0.993,133,1.613,136,1.243,162,0.642,166,0.983,167,0.895,196,3.07,216,2.482,251,5.387,441,1.974,896,4.951,897,5.466,898,4.19,899,6.248,900,6.248,901,4.79,902,3.796,903,3.796,904,4.79,905,4.79,906,6.954,907,4.79,908,4.79,909,4.79,910,4.79,911,4.79,912,4.79]],["title/interfaces/IRepositoryBase.html",[353,1.847,913,3.039]],["body/interfaces/IRepositoryBase.html",[3,0.134,4,0.134,5,0.12,7,0.447,8,1.061,12,0.012,15,0.992,17,1.34,37,0.18,46,1.739,47,1.244,50,0.008,51,0.008,123,2.043,136,1.319,162,0.95,166,1.456,167,1.325,243,2.2,313,1.634,315,2.415,337,3.371,353,2.604,385,3.218,401,2.276,403,1.862,408,1.795,449,2.787,913,4.284,914,3.447,915,4.645,916,5.861,917,5.799,918,4.349,919,6.479,920,4.349,921,4.645,922,4.349,923,5.128,924,4.349,925,5.799,926,4.349,927,3.179]],["title/guards/JwtAuthGuard.html",[96,3.039,130,3.039]],["body/guards/JwtAuthGuard.html",[3,0.095,4,0.095,5,0.085,7,0.316,8,0.83,9,1.719,12,0.012,15,0.87,17,1.099,19,0.305,21,0.37,37,0.095,38,0.088,39,1.319,42,1.866,45,1.539,47,1.138,50,0.006,51,0.006,76,3.534,94,2.44,96,3.352,112,4.427,131,0.729,136,0.912,161,1.612,162,0.814,166,1.333,167,1.213,182,2.251,183,2.694,186,2.638,196,3.892,216,2.375,218,2.258,222,3.512,231,4.004,243,1.785,246,3.635,250,4.812,251,4.439,252,2.44,275,2.44,277,1.612,279,2.183,280,1.971,283,2.44,287,3.512,288,3.737,302,2.44,422,3.32,428,2.251,877,2.44,902,2.44,903,2.44,928,2.44,929,5.956,930,2.694,931,4.586,932,4.586,933,4.586,934,3.079,935,6.808,936,3.079,937,4.013,938,3.079,939,4.586,940,3.079,941,4.586,942,3.079,943,4.586,944,3.079,945,2.44,946,4.013,947,3.079,948,3.079,949,3.079,950,3.079,951,2.44,952,3.079,953,3.079,954,3.079,955,2.694,956,4.013,957,3.079,958,2.694,959,4.795,960,2.694,961,3.079,962,4.013,963,3.079,964,3.079,965,2.694]],["title/classes/Location.html",[38,0.118,846,2.834]],["body/classes/Location.html",[3,0.198,4,0.198,5,0.178,12,0.011,37,0.198,38,0.184,50,0.01,51,0.01,311,2.039,846,5.121,966,5.646]],["title/controllers/LocationController.html",[0,1.196,967,3.039]],["body/controllers/LocationController.html",[0,1.023,2,0.992,3,0.109,4,0.109,5,0.098,7,0.365,8,0.922,9,1.809,11,2.107,12,0.012,15,0.922,17,1.246,19,0.37,21,0.427,23,1.782,24,1.16,37,0.109,38,0.101,45,0.776,46,1.336,47,1.14,50,0.007,51,0.007,123,1.654,141,1.71,162,0.871,166,1.334,167,1.215,176,1.949,177,2.931,243,1.805,280,1.279,301,2.549,310,4.242,313,1.421,314,2.072,315,1.942,316,1.895,317,1.895,322,2.425,323,3.308,324,2.425,325,4.06,327,2.425,328,2.425,329,2.425,331,2.425,332,2.425,334,1.368,335,3.484,336,2.425,337,2.931,339,1.368,340,2.425,342,2.279,344,2.046,360,2.599,441,1.61,489,3.816,551,3.058,552,2.599,553,2.599,554,2.599,555,2.599,556,2.599,559,1.643,561,2.599,563,1.468,564,1.522,566,1.71,846,2.425,967,3.724,968,3.111,969,3.266,970,3.111,971,4.038,972,2.818,973,2.425,974,3.556,975,3.556,976,3.556,977,3.556,978,3.556]],["title/modules/LocationModule.html",[52,1.124,70,2.834]],["body/modules/LocationModule.html",[2,1.746,3,0.148,4,0.148,5,0.133,12,0.012,19,0.394,21,0.577,37,0.148,38,0.137,50,0.009,51,0.009,52,1.883,54,1.914,55,1.983,56,2.135,57,2.135,58,1.983,59,3.095,60,2.135,70,5.634,75,3.932,77,2.782,78,2.135,79,2.135,81,3.277,374,3.01,438,3.512,620,3.512,967,5.09,969,5.028,970,4.203,979,4.203,980,4.804,981,4.203,982,5.349,983,4.804,984,4.804,985,4.804]],["title/injectables/LocationRepository.html",[131,0.661,982,2.834]],["body/injectables/LocationRepository.html",[3,0.106,4,0.106,5,0.095,7,0.353,8,0.9,9,1.838,12,0.012,15,0.978,17,1.282,19,0.322,21,0.413,37,0.106,38,0.098,39,0.989,40,3.209,46,1.961,47,1.241,50,0.007,51,0.007,123,1.902,131,0.791,133,1.158,136,1.624,162,0.949,166,1.453,167,1.323,243,1.857,313,1.387,314,1.73,315,1.906,316,1.849,317,1.849,334,1.323,339,1.323,359,3.907,374,3.662,385,2.053,395,2.21,396,2.861,397,2.908,400,2.204,401,3.351,403,1.472,404,4.791,406,3.351,408,1.419,412,1.978,441,1.571,551,3.146,563,1.419,564,1.472,806,2.345,807,2.345,808,2.345,809,2.345,810,2.345,811,2.345,812,2.345,813,2.345,982,3.391,986,3.009,987,3.439,988,2.514,989,3.439]],["title/injectables/LocationService.html",[131,0.661,969,2.664]],["body/injectables/LocationService.html",[3,0.113,4,0.113,5,0.102,7,0.378,8,0.944,9,1.861,12,0.012,15,0.998,17,1.31,19,0.364,21,0.441,37,0.113,38,0.104,39,1.057,46,1.731,47,1.269,50,0.007,51,0.007,123,1.935,131,0.829,133,1.237,162,0.97,166,1.486,167,1.353,243,1.899,313,1.454,314,1.814,315,1.977,316,1.939,317,1.939,323,2.409,334,1.413,335,3.048,339,1.413,354,3.818,374,3.172,377,2.505,385,2.152,395,2.317,403,1.572,408,1.516,426,4.241,429,4.562,431,2.226,438,2.685,441,1.647,489,2.354,551,3.217,559,1.697,563,1.516,564,1.572,566,1.766,592,2.505,593,2.505,594,2.505,595,2.505,596,2.505,597,2.505,598,2.685,969,3.342,971,4.133,973,2.505,988,2.685,990,3.214,991,3.674,992,3.674]],["title/classes/LoginDto.html",[38,0.118,163,2.834]],["body/classes/LoginDto.html",[3,0.153,4,0.153,5,0.137,7,0.511,11,1.96,12,0.012,15,0.858,19,0.321,24,1.622,37,0.197,38,0.201,50,0.009,51,0.009,136,1.539,148,3.548,162,0.858,163,4.365,186,4.3,187,3.941,222,4.103,230,2.642,240,5.924,242,4.957,273,3.013,311,1.571,472,3.879,473,2.603,537,5.073,866,3.941,993,3.941,994,5.073,995,4.973,996,4.973,997,4.973,998,4.973,999,5.924,1000,3.635]],["title/controllers/PdfController.html",[0,1.196,1001,3.039]],["body/controllers/PdfController.html",[0,1.21,2,1.174,3,0.129,4,0.129,5,0.158,7,0.432,8,1.038,9,1.513,11,1.288,12,0.012,15,0.564,17,0.762,19,0.368,21,0.505,22,2.421,23,2.872,24,1.372,37,0.129,38,0.12,47,0.738,50,0.008,51,0.008,136,1.297,141,2.023,162,0.768,166,0.864,167,0.786,168,4.211,175,3.335,176,2.306,179,2.697,190,1.676,191,2.55,193,3.335,216,1.93,218,1.565,243,1.503,287,4.485,288,4.444,355,1.464,462,2.55,591,3.663,637,3.682,643,3.682,644,5.015,693,3.335,710,3.682,840,3.682,867,5.115,1001,4.189,1002,3.682,1003,6.518,1004,6.518,1005,4.208,1006,4.208,1007,4.208,1008,4.208,1009,6.998,1010,4.208,1011,3.682,1012,4.177,1013,3.682,1014,4.208,1015,4.208,1016,4.208,1017,4.208,1018,4.208,1019,4.208,1020,5.703,1021,4.208,1022,4.208,1023,4.208,1024,4.208,1025,4.208,1026,4.208,1027,4.208]],["title/classes/PdfDTO.html",[38,0.118,1028,3.294]],["body/classes/PdfDTO.html",[3,0.169,4,0.169,5,0.152,7,0.565,11,1.683,12,0.012,15,0.737,19,0.343,24,1.793,37,0.169,38,0.194,50,0.009,51,0.009,136,1.357,148,2.755,162,0.737,230,2.815,311,1.737,472,3.738,473,2.878,476,2.624,591,3.882,680,5.968,994,4.357,999,5.406,1028,5.406,1029,4.81,1030,6.821,1031,6.821,1032,5.968,1033,5.498,1034,5.498]],["title/modules/PdfModule.html",[52,1.124,71,2.834]],["body/modules/PdfModule.html",[2,1.536,3,0.122,4,0.122,5,0.11,12,0.012,19,0.401,21,0.477,37,0.122,38,0.113,50,0.008,51,0.008,52,1.71,54,1.582,55,1.64,56,1.765,57,1.765,58,1.64,59,2.81,60,1.765,65,4.757,66,4.497,67,4.757,71,5.792,74,4.757,76,3.72,77,2.448,78,1.765,79,1.765,81,2.884,612,4.757,694,4.317,734,3.476,735,3.476,861,3.476,1001,4.623,1012,4.757,1013,3.476,1035,3.476,1036,3.973,1037,3.476,1038,3.973,1039,3.973,1040,3.476,1041,3.973,1042,3.973,1043,3.973]],["title/injectables/PdfService.html",[131,0.661,1012,2.664]],["body/injectables/PdfService.html",[3,0.07,4,0.07,5,0.063,7,0.234,8,0.658,9,1.399,12,0.012,15,0.758,17,0.821,18,1.311,19,0.303,21,0.274,31,1.807,37,0.07,38,0.065,39,1.046,40,1.142,45,0.99,46,0.598,47,0.908,50,0.005,51,0.005,118,1.806,131,0.578,133,0.767,136,1.494,162,0.808,166,1.062,167,0.967,198,2.203,216,2.28,218,1.686,230,1.501,231,3.71,243,0.954,276,2.679,279,1.448,280,1.861,355,1.265,387,1.994,406,1.193,417,1.461,462,3.832,591,3.155,670,1.554,671,1.554,672,1.554,673,1.666,692,1.806,694,3.303,714,1.994,1012,2.33,1032,3.968,1040,1.994,1044,1.994,1045,4.536,1046,3.636,1047,3.636,1048,3.636,1049,2.279,1050,3.832,1051,2.279,1052,3.636,1053,2.279,1054,3.636,1055,2.279,1056,3.636,1057,2.279,1058,5.176,1059,4.536,1060,3.636,1061,5.176,1062,7.588,1063,7.588,1064,6.568,1065,5.176,1066,5.176,1067,5.176,1068,5.176,1069,3.636,1070,5.176,1071,3.636,1072,3.636,1073,6.568,1074,5.176,1075,2.279,1076,2.279,1077,2.279,1078,3.636,1079,1.994,1080,3.636,1081,2.279,1082,2.279,1083,2.279,1084,2.279,1085,4.536,1086,5.176,1087,2.279,1088,2.279,1089,2.279,1090,2.279,1091,2.279,1092,2.279,1093,3.181,1094,2.279,1095,3.636,1096,2.279,1097,2.279,1098,2.279,1099,2.279,1100,2.279,1101,2.279,1102,2.279,1103,2.279,1104,2.279,1105,2.279,1106,2.279,1107,2.279,1108,2.279,1109,2.279,1110,2.279,1111,2.279,1112,2.279,1113,2.279,1114,2.279,1115,2.279,1116,3.636,1117,4.536,1118,2.279,1119,2.279,1120,2.279,1121,2.279,1122,2.279,1123,2.279,1124,2.279,1125,2.279,1126,2.279,1127,3.636,1128,1.806,1129,2.279,1130,2.279,1131,2.279,1132,2.279,1133,2.279,1134,2.279,1135,2.279,1136,2.279,1137,2.279,1138,1.994,1139,2.279]],["title/classes/Profile.html",[38,0.118,572,3.039]],["body/classes/Profile.html",[3,0.198,4,0.198,5,0.178,12,0.011,37,0.198,38,0.184,50,0.01,51,0.01,311,2.039,572,5.49,1140,5.646]],["title/injectables/ProfileRepository.html",[131,0.661,1141,2.664]],["body/injectables/ProfileRepository.html",[3,0.137,4,0.137,5,0.123,7,0.457,8,1.077,9,1.556,11,1.362,12,0.012,15,0.797,17,0.805,19,0.359,21,0.534,22,2.559,24,1.451,37,0.137,38,0.127,39,1.279,45,0.971,46,1.167,47,1.043,50,0.008,51,0.008,131,0.946,133,1.498,136,1.334,162,0.797,166,1.221,167,1.112,168,2.559,186,2.559,190,1.772,191,3.605,216,2.004,218,2.212,243,1.561,276,2.979,277,3.747,279,2.37,297,2.559,301,1.904,355,1.548,395,2.644,396,2.559,397,3.287,408,2.456,412,2.559,418,2.695,419,2.559,422,2.695,563,1.836,564,1.904,752,3.892,1141,3.813,1142,3.892,1143,4.448,1144,4.448,1145,3.525,1146,6.705,1147,4.448,1148,4.448,1149,4.448]],["title/controllers/ProfilesController.html",[0,1.196,1150,3.039]],["body/controllers/ProfilesController.html",[0,1.482,2,1.437,3,0.158,4,0.158,5,0.142,7,0.53,8,1.186,11,1.578,12,0.012,15,0.69,17,0.933,19,0.362,21,0.619,22,2.964,23,2.583,24,1.681,37,0.158,38,0.147,45,1.125,46,1.352,47,0.903,50,0.009,51,0.009,141,2.477,166,1.058,167,0.963,168,4.141,176,2.824,177,2.964,190,2.053,191,3.122,216,1.736,314,1.793,342,3.303,344,2.964,355,1.793,915,5.19,1150,4.787,1151,4.509,1152,5.153,1153,5.153,1154,5.153,1155,5.153,1156,4.614,1157,4.509,1158,5.153,1159,5.153,1160,5.153,1161,5.153,1162,5.153]],["title/modules/ProfilesModule.html",[52,1.124,72,2.834]],["body/modules/ProfilesModule.html",[2,1.753,3,0.149,4,0.149,5,0.134,12,0.012,19,0.395,21,0.581,37,0.149,38,0.137,50,0.009,51,0.009,52,1.889,54,1.926,55,1.995,56,2.148,57,2.148,58,1.995,59,3.104,60,2.148,72,5.64,75,3.938,77,2.793,78,2.148,79,2.148,81,3.29,397,2.069,620,3.533,732,4.229,1141,5.037,1150,5.105,1156,5.037,1157,4.229,1163,4.229,1164,4.834,1165,4.229,1166,4.834,1167,4.834,1168,4.229]],["title/injectables/ProfilesService.html",[131,0.661,1156,2.664]],["body/injectables/ProfilesService.html",[3,0.156,4,0.156,5,0.141,7,0.523,8,1.176,12,0.012,15,0.87,17,0.921,19,0.359,21,0.611,37,0.156,38,0.145,39,1.463,45,1.11,46,1.703,47,1.139,50,0.009,51,0.009,131,1.033,133,1.713,136,1.424,162,0.87,166,1.333,167,1.214,168,2.925,190,2.026,355,1.77,508,3.468,559,2.349,915,5.147,921,5.147,1141,4.832,1156,4.162,1168,4.45,1169,4.45,1170,5.086,1171,5.086,1172,6.495,1173,5.086,1174,4.45,1175,5.086,1176,5.086]],["title/controllers/RelayController.html",[0,1.196,1177,3.039]],["body/controllers/RelayController.html",[0,1.077,2,1.044,3,0.115,4,0.115,5,0.104,7,0.385,8,0.957,9,1.422,11,1.146,12,0.012,15,0.502,17,0.678,18,2.154,19,0.334,21,0.45,23,1.876,24,1.221,31,2.105,37,0.115,38,0.106,45,0.817,47,0.927,50,0.007,51,0.007,141,1.8,143,4.188,148,4.032,150,4.624,151,4.624,152,3.276,153,4.624,154,3.276,155,4.624,156,4.624,157,3.276,158,4.624,162,0.502,166,0.768,167,0.7,168,4.037,178,6.373,190,1.491,194,6.141,196,2.399,197,2.967,198,2.268,199,4.624,210,2.967,216,1.78,218,1.392,355,1.303,693,2.967,699,4.624,867,3.863,884,3.276,1177,3.863,1178,2.967,1179,6.655,1180,3.744,1181,6.373,1182,3.744,1183,6.689,1184,6.126,1185,5.285,1186,5.274,1187,3.744,1188,5.285,1189,5.285,1190,3.744,1191,3.744,1192,3.926,1193,3.276,1194,5.359,1195,3.744,1196,3.744,1197,3.744,1198,3.744,1199,3.744,1200,3.744,1201,3.744,1202,3.744,1203,3.744,1204,3.744]],["title/modules/RelayModule.html",[52,1.124,73,2.834]],["body/modules/RelayModule.html",[2,1.886,3,0.167,4,0.167,5,0.15,12,0.012,19,0.37,21,0.651,37,0.167,38,0.154,50,0.009,51,0.009,52,1.993,54,2.16,55,2.238,56,2.409,57,2.409,58,2.238,59,3.275,60,2.409,73,5.52,77,3.005,78,2.409,79,2.409,1177,5.387,1192,5.189,1193,4.743,1205,4.743,1206,4.743,1207,5.422,1208,5.422]],["title/injectables/RelayService.html",[131,0.661,1192,2.664]],["body/injectables/RelayService.html",[3,0.103,4,0.103,5,0.093,7,0.345,8,0.885,9,1.63,12,0.012,15,0.848,17,1.043,18,2.811,19,0.245,21,0.403,31,2.296,37,0.103,38,0.095,39,1.658,42,2.034,45,1.258,47,1.011,50,0.007,51,0.007,83,2.289,112,2.289,131,0.777,133,1.131,136,1.397,162,0.772,166,1.183,167,1.077,176,1.84,177,1.931,186,1.931,188,2.661,207,4.276,216,2.55,218,2.143,231,3.676,237,2.661,266,2.289,275,2.661,276,2.99,277,1.757,279,1.947,280,2.073,283,2.661,520,4.213,751,2.152,867,2.454,869,2.937,870,4.276,872,2.937,873,2.937,951,2.661,1020,2.937,1183,4.276,1192,3.133,1209,2.937,1210,4.888,1211,4.888,1212,4.888,1213,3.357,1214,4.888,1215,3.357,1216,3.357,1217,4.888,1218,3.357,1219,4.888,1220,5.764,1221,3.357,1222,3.357,1223,3.357,1224,3.357,1225,3.357,1226,3.357,1227,4.888,1228,3.357,1229,4.888,1230,3.357,1231,3.357,1232,3.357,1233,3.357,1234,3.357,1235,3.357,1236,3.357,1237,3.357,1238,3.357,1239,3.357,1240,3.357,1241,3.357,1242,3.357,1243,3.357,1244,3.357,1245,3.357,1246,3.357,1247,3.357,1248,3.357,1249,3.357,1250,3.357,1251,3.357,1252,3.357,1253,3.357,1254,4.888,1255,4.888,1256,5.764,1257,3.357,1258,3.357,1259,3.357,1260,3.357,1261,3.357,1262,3.357,1263,3.357,1264,3.357]],["title/injectables/ReportTemplatesRepository.html",[131,0.661,1265,2.664]],["body/injectables/ReportTemplatesRepository.html",[3,0.092,4,0.092,5,0.083,7,0.307,8,0.811,9,1.839,12,0.012,15,0.962,17,1.263,19,0.3,21,0.359,31,2.143,37,0.092,38,0.085,39,0.859,40,2.997,45,0.652,46,1.883,47,1.224,50,0.006,51,0.006,123,1.826,131,0.712,133,1.005,136,1.598,161,1.562,162,0.984,166,1.432,167,1.304,216,1.005,218,1.11,243,1.883,276,2.391,277,2.346,279,1.785,280,1.611,297,1.717,301,1.278,313,1.25,314,1.559,315,1.754,316,1.666,317,1.666,334,1.148,339,1.148,359,3.686,374,3.53,385,1.849,395,1.991,396,2.577,397,2.743,400,1.913,401,3.13,403,1.278,404,4.601,406,3.13,408,1.232,412,1.717,418,1.808,419,1.717,441,1.416,460,4.014,476,1.148,551,2.99,563,1.232,564,1.278,746,2.182,750,2.035,751,1.913,753,2.035,806,2.035,807,2.035,808,2.035,809,2.035,810,2.035,811,2.035,812,2.035,813,2.035,817,2.182,819,4.707,821,2.612,822,3.275,1265,2.872,1266,2.612,1267,2.985,1268,2.985,1269,2.182,1270,2.985,1271,2.985]],["title/controllers/ReportsTemplatesController.html",[0,1.196,1272,3.039]],["body/controllers/ReportsTemplatesController.html",[0,1.598,2,1.55,3,0.171,4,0.171,5,0.154,7,0.571,8,1.243,11,1.701,12,0.012,15,0.745,17,1.006,19,0.345,21,0.667,37,0.171,38,0.158,45,1.213,50,0.009,51,0.009,141,2.671,190,2.213,355,1.933,1050,4.16,1272,5.019,1273,4.862,1274,5.557,1275,6.866,1276,7.783,1277,5.557,1278,4.862,1279,5.557,1280,5.557,1281,5.557]],["title/modules/ReportsTemplatesModule.html",[52,1.124,74,2.664]],["body/modules/ReportsTemplatesModule.html",[2,1.688,3,0.14,4,0.14,5,0.126,12,0.012,19,0.388,21,0.548,37,0.14,38,0.13,50,0.008,51,0.008,52,1.837,54,1.819,55,1.884,56,2.029,57,2.029,58,1.884,59,3.018,60,3.018,64,4.449,74,5.358,75,3.877,77,2.69,78,2.029,79,2.029,81,3.169,620,3.337,621,3.994,1050,5.036,1265,4.958,1272,4.965,1278,3.994,1282,3.994,1283,3.994,1284,4.565,1285,3.994,1286,4.565,1287,4.565,1288,3.994]],["title/injectables/ReportsTemplatesService.html",[131,0.661,1050,2.519]],["body/injectables/ReportsTemplatesService.html",[3,0.106,4,0.106,5,0.095,7,0.354,8,0.902,9,1.839,12,0.012,15,1.002,17,1.323,19,0.356,21,0.414,37,0.106,38,0.098,39,0.991,45,0.752,46,1.681,47,1.281,50,0.007,51,0.007,123,1.903,131,0.792,133,1.161,136,1.164,162,0.979,166,1.499,167,1.365,190,1.373,243,1.962,313,1.389,314,1.733,315,1.908,316,1.852,317,1.852,323,2.301,334,1.326,335,2.96,339,1.326,354,3.725,355,1.199,385,2.056,395,2.214,403,1.475,408,1.422,426,4.177,431,2.088,441,1.574,460,1.982,539,2.35,551,3.149,559,1.592,563,1.422,564,1.475,566,1.657,591,2.608,592,2.35,593,2.35,594,2.35,595,2.35,596,2.35,597,2.35,598,2.519,1050,3.018,1265,4.541,1269,2.519,1288,3.015,1289,3.015,1290,4.982,1291,3.446,1292,3.446,1293,4.982,1294,3.446,1295,2.519,1296,4.358,1297,3.446,1298,3.446]],["title/interfaces/RepositoryInterface.html",[353,1.847,927,3.039]],["body/interfaces/RepositoryInterface.html",[3,0.134,4,0.134,5,0.12,7,0.447,8,1.061,12,0.012,15,0.992,17,1.34,37,0.18,46,1.739,47,1.244,50,0.008,51,0.008,123,1.686,136,1.598,162,0.95,166,1.456,167,1.325,243,2.2,313,1.634,314,2.039,315,2.415,337,3.371,353,2.604,385,3.056,395,2.604,401,3.47,403,2.509,408,2.419,449,2.787,913,3.179,914,3.447,917,5.799,919,6.479,921,3.447,923,3.805,925,5.799,927,4.284,1299,4.349,1300,4.349,1301,4.349,1302,4.349,1303,4.349]],["title/guards/SupabaseAuthGuard.html",[130,3.039,179,2.664]],["body/guards/SupabaseAuthGuard.html",[2,1.083,3,0.119,4,0.119,5,0.107,7,0.399,8,0.982,9,1.45,12,0.012,15,0.727,17,0.703,19,0.272,21,0.466,37,0.119,38,0.11,39,1.117,42,2.353,45,1.184,47,0.951,50,0.007,51,0.007,76,3.867,112,3.697,131,0.862,161,2.839,162,0.727,166,1.113,167,1.013,179,3.475,182,2.839,186,3.89,188,3.078,190,1.547,196,3.475,216,2.482,218,2.016,222,4.334,243,1.422,246,4.298,250,5.36,251,4.943,252,3.078,274,4.745,279,2.694,280,2.432,287,4.334,288,4.611,302,4.298,428,2.839,877,4.298,902,3.078,903,3.078,928,3.078,937,4.745,951,3.078,955,3.398,956,3.398,958,3.398,959,4.745,960,3.398,962,4.745,965,3.398,1093,3.398,1138,3.398,1304,3.398,1305,3.884,1306,3.884,1307,3.884,1308,5.423,1309,5.423,1310,3.884,1311,3.884,1312,3.884,1313,3.884,1314,3.884,1315,3.884,1316,3.884,1317,3.884]],["title/modules/SupabaseModule.html",[52,1.124,75,2.083]],["body/modules/SupabaseModule.html",[3,0.162,4,0.162,5,0.146,12,0.012,19,0.334,21,0.634,37,0.204,38,0.15,50,0.009,51,0.009,52,1.968,54,2.648,55,2.177,56,2.344,57,2.344,58,2.177,59,3.234,60,3.234,75,4.091,77,2.954,78,2.344,79,2.344,379,4.615,397,3.632,1318,4.615,1319,5.275,1320,4.615,1321,6.647,1322,5.275]],["title/injectables/SupabaseService.html",[131,0.661,397,1.779]],["body/injectables/SupabaseService.html",[3,0.13,4,0.201,5,0.117,7,0.436,8,1.043,12,0.012,15,0.877,17,1.271,19,0.353,21,0.51,37,0.13,38,0.121,39,1.22,45,0.926,47,0.744,50,0.008,51,0.008,83,2.893,131,0.916,133,1.429,136,0.844,148,2.888,162,0.772,166,0.871,167,0.793,190,1.69,216,1.941,230,2.379,231,3.426,232,6.896,236,3.712,237,6.001,249,6.424,256,3.712,257,3.362,258,3.101,260,3.712,261,3.712,262,5.042,263,3.712,264,3.712,265,5.726,266,2.893,267,3.362,268,3.101,269,5.042,270,3.712,301,2.467,344,2.44,383,3.929,397,2.467,416,2.719,419,4.356,774,3.362,781,3.362,1323,3.712,1324,5.763,1325,4.243,1326,5.763,1327,5.763,1328,4.243,1329,4.243,1330,4.243]],["title/classes/UpdateDatumDto.html",[38,0.118,697,2.664]],["body/classes/UpdateDatumDto.html",[3,0.186,4,0.186,5,0.167,12,0.012,19,0.363,24,1.974,37,0.186,38,0.172,50,0.01,51,0.01,311,1.912,313,1.688,441,2.285,454,3.667,456,4.797,696,4.424,697,4.635,1331,5.295,1332,7.232,1333,3.667]],["title/classes/UpdateDeviceDto.html",[38,0.118,642,2.834]],["body/classes/UpdateDeviceDto.html",[3,0.186,4,0.186,5,0.167,12,0.012,19,0.363,24,1.974,37,0.186,38,0.172,50,0.01,51,0.01,311,1.912,313,1.688,441,2.285,457,3.879,459,4.797,639,4.797,642,4.931,1333,3.667,1334,5.295,1335,7.232]],["title/classes/UpdateDeviceOwnerDto.html",[38,0.118,565,2.834]],["body/classes/UpdateDeviceOwnerDto.html",[3,0.185,4,0.185,5,0.166,12,0.012,19,0.362,24,1.959,37,0.185,38,0.171,50,0.01,51,0.01,311,1.897,313,1.675,441,2.274,474,3.849,476,2.77,477,4.76,560,4.76,565,4.908,1333,3.639,1336,5.255,1337,7.199]],["title/classes/UpdateDeviceTypeDto.html",[38,0.118,608,2.834]],["body/classes/UpdateDeviceTypeDto.html",[3,0.185,4,0.185,5,0.166,12,0.012,19,0.362,24,1.959,37,0.185,38,0.171,50,0.01,51,0.01,311,1.897,313,1.675,441,2.274,476,2.77,484,3.849,486,4.76,604,4.76,608,4.908,1333,3.639,1338,5.255,1339,7.199]],["title/classes/UpdateLocationDto.html",[38,0.118,973,2.834]],["body/classes/UpdateLocationDto.html",[3,0.186,4,0.186,5,0.167,12,0.012,19,0.363,24,1.974,37,0.186,38,0.172,50,0.01,51,0.01,311,1.912,313,1.688,441,2.285,489,3.879,491,4.797,971,4.797,973,4.931,1333,3.667,1340,5.295,1341,7.232]],["title/classes/UpdateProfileDto.html",[38,0.118,1342,3.294]],["body/classes/UpdateProfileDto.html",[3,0.186,4,0.186,5,0.167,12,0.012,19,0.363,24,1.974,37,0.186,38,0.172,50,0.01,51,0.01,311,1.912,313,1.688,441,2.285,508,4.127,510,4.797,1174,5.295,1333,3.667,1342,5.731,1343,5.295,1344,7.232]],["title/classes/UpdateReportDto.html",[38,0.118,1295,3.039]],["body/classes/UpdateReportDto.html",[3,0.186,4,0.186,5,0.167,12,0.012,19,0.363,24,1.974,37,0.186,38,0.172,50,0.01,51,0.01,311,1.912,313,1.688,441,2.285,539,4.127,541,4.797,1295,5.286,1296,5.295,1333,3.667,1345,5.295,1346,7.232]],["title/classes/UserAuthDto.html",[38,0.118,1000,3.039]],["body/classes/UserAuthDto.html",[3,0.159,4,0.159,5,0.143,7,0.531,11,1.583,12,0.012,15,0.693,19,0.33,24,1.686,37,0.202,38,0.205,50,0.009,51,0.009,136,1.509,148,3.614,162,0.693,163,3.525,186,3.775,187,5.201,222,4.861,230,2.709,240,5.201,242,4.206,273,3.976,311,1.633,472,3.951,473,2.706,537,5.201,866,4.097,993,4.097,994,4.097,999,6.011,1000,4.797,1347,5.17,1348,5.17]],["title/coverage.html",[1349,4.973]],["body/coverage.html",[0,2,1,1.37,5,0.052,6,1.64,12,0.012,31,0.746,38,0.219,50,0.004,51,0.004,58,0.773,76,0.939,96,1.37,130,2.267,131,1.21,132,1.485,134,1.64,139,1.37,140,1.64,142,1.278,162,0.994,163,1.278,179,1.201,229,1.64,271,4.617,280,0.674,310,1.078,312,2.458,319,1.879,345,1.37,346,1.37,347,1.37,348,1.37,351,1.37,352,3.733,353,2.27,374,0.901,375,1.64,397,0.802,416,1.201,417,1.201,426,1.027,427,2.458,454,1.135,455,1.64,456,2.458,457,1.201,458,1.64,459,2.458,474,1.201,475,1.64,476,1.774,477,2.458,484,1.201,485,1.64,486,2.458,489,1.201,490,1.64,491,2.458,508,1.278,509,1.64,510,2.458,539,1.278,540,1.64,541,2.458,547,1.37,548,1.64,557,1.027,562,1.485,563,2.608,565,1.278,572,1.37,581,1.135,585,1.64,599,1.37,602,1.37,603,1.64,605,0.981,607,1.278,608,1.278,617,1.135,623,1.64,633,1.37,634,1.64,635,0.981,640,1.37,642,1.278,653,1.135,657,1.64,667,1.37,668,1.64,692,6.825,694,1.027,697,1.201,728,1.135,737,1.64,755,2.458,764,1.37,799,1.485,800,1.64,801,1.64,818,1.64,824,1.485,827,1.64,835,1.37,836,1.64,841,1.201,846,1.278,862,1.64,874,1.37,875,1.64,896,1.485,897,1.64,898,1.64,913,1.37,914,2.458,927,1.37,929,1.64,930,1.64,945,1.485,966,1.64,967,1.37,968,1.64,969,1.201,972,1.485,973,1.278,982,1.278,986,1.64,988,1.37,990,1.64,993,2.458,1000,1.37,1001,1.37,1002,1.64,1012,1.201,1028,1.485,1029,1.64,1044,1.64,1050,1.135,1128,1.485,1140,1.64,1141,1.201,1142,1.64,1145,1.485,1150,1.37,1151,1.64,1156,1.201,1169,1.64,1177,1.37,1178,1.485,1192,1.201,1209,1.64,1265,1.201,1266,1.64,1269,1.37,1272,1.37,1273,1.64,1289,1.64,1295,1.37,1304,1.64,1323,1.64,1331,1.64,1334,1.64,1336,1.64,1338,1.64,1340,1.64,1342,1.485,1343,1.64,1345,1.64,1349,1.64,1350,1.64,1351,1.874,1352,1.874,1353,5.331,1354,7.344,1355,1.64,1356,8.148,1357,1.64,1358,1.64,1359,1.64,1360,1.64,1361,1.64,1362,6.954,1363,5.503,1364,6.679,1365,2.713,1366,3.101,1367,3.967,1368,5.108,1369,3.967,1370,1.64,1371,4.034,1372,5.529,1373,6.093,1374,2.713,1375,1.64,1376,1.874,1377,1.874,1378,1.874,1379,1.874,1380,1.874,1381,1.874,1382,1.874]],["title/dependencies.html",[55,2.065,268,2.534]],["body/dependencies.html",[12,0.012,21,0.609,24,1.653,27,3.706,28,4.737,30,3.706,38,0.184,50,0.009,51,0.009,55,2.092,83,3.456,94,4.018,125,4.435,257,4.018,258,3.706,273,3.071,473,2.654,883,4.018,894,4.435,1011,4.435,1079,4.435,1383,5.07,1384,5.07,1385,7.145,1386,5.07,1387,5.07,1388,5.07,1389,5.07,1390,5.07,1391,5.07,1392,5.07,1393,5.07,1394,5.07,1395,5.07,1396,5.07,1397,5.07,1398,5.07,1399,5.07,1400,5.07,1401,5.07,1402,5.07,1403,5.07,1404,5.07,1405,5.07,1406,5.07,1407,5.07,1408,5.07,1409,5.07,1410,5.07,1411,5.07,1412,5.07,1413,5.07,1414,5.07]],["title/miscellaneous/enumerations.html",[1415,1.994,1416,4.377]],["body/miscellaneous/enumerations.html",[7,0.65,12,0.011,50,0.01,51,0.01,406,3.885,1178,5.01,1181,6.493,1186,5.881,1194,6.493,1415,3.636,1416,5.531,1417,6.322]],["title/miscellaneous/functions.html",[1415,1.994,1418,4.377]],["body/miscellaneous/functions.html",[7,0.551,12,0.011,47,1.178,50,0.009,51,0.009,58,3.027,136,1.529,142,4.581,162,0.9,166,1.379,167,1.255,266,3.658,345,5.361,346,5.361,347,5.361,348,5.361,351,4.911,352,4.911,708,4.695,1370,5.878,1371,6.925,1374,4.695,1375,5.878,1415,3.086,1418,4.695,1419,7.916,1420,6.719,1421,5.366,1422,5.366]],["title/index.html",[7,0.356,1423,3.467,1424,3.467]],["body/index.html",[12,0.01,48,4.968,50,0.01,51,0.01,196,3.639,198,3.44,258,4.15,287,4.822,292,4.968,1186,4.5,1350,4.968,1425,5.678,1426,4.5,1427,5.678,1428,5.678,1429,5.678,1430,5.678,1431,5.678,1432,5.678,1433,5.678,1434,7.523,1435,6.958,1436,5.678,1437,5.678,1438,5.678,1439,6.958,1440,5.678,1441,5.678,1442,5.678,1443,5.678,1444,5.678,1445,6.958,1446,5.678,1447,5.678,1448,5.678,1449,5.678,1450,5.678,1451,5.678,1452,5.678]],["title/modules.html",[54,2.264]],["body/modules.html",[12,0.009,50,0.009,51,0.009,53,3.779,54,2.059,64,2.974,65,3.314,66,3.132,67,3.314,68,3.525,69,3.525,70,3.525,71,3.525,72,3.525,73,3.525,74,3.314,75,2.591,612,3.314,1453,8.501,1454,8.501,1455,8.501,1456,8.533,1457,5.17,1458,5.17]],["title/overview.html",[1426,4.504]],["body/overview.html",[2,0.682,12,0.012,50,0.005,51,0.005,52,0.662,53,5.994,54,0.975,55,1.01,56,1.087,57,1.087,58,1.01,59,1.087,60,1.087,61,2.141,62,2.141,63,2.141,64,3.984,65,4.632,66,4.57,67,5.256,68,4.433,69,3.24,70,4.723,71,5.433,72,4.723,73,3.992,74,4.776,75,3.682,76,3.553,77,1.709,78,1.087,79,1.087,133,0.824,224,2.141,225,2.141,267,1.939,311,0.773,397,2.883,449,1.568,557,3.69,577,2.141,579,2.141,580,2.141,581,3.263,605,3.525,612,4.776,613,2.141,614,2.141,616,2.141,617,3.263,635,3.525,649,2.141,650,2.141,652,2.141,653,3.263,694,3.796,724,2.141,726,2.141,727,2.141,728,3.939,841,3.045,857,2.141,858,2.141,928,1.939,969,3.045,979,2.141,981,2.141,982,3.24,1012,3.045,1035,2.141,1037,2.141,1050,3.939,1141,3.045,1156,3.045,1163,2.141,1165,2.141,1192,3.045,1205,2.141,1206,2.141,1265,3.045,1282,2.141,1283,2.141,1285,2.141,1318,2.141,1320,2.141,1426,1.939,1459,2.447,1460,2.447,1461,2.447,1462,2.447,1463,2.447]],["title/properties.html",[230,2.065,268,2.534]],["body/properties.html",[12,0.012,50,0.01,51,0.01,148,3.221,230,2.652,266,4.381,1464,6.426,1465,6.426,1466,6.426,1467,6.426]],["title/miscellaneous/typealiases.html",[1415,1.994,1468,5.003]],["body/miscellaneous/typealiases.html",[7,0.511,12,0.011,50,0.009,51,0.009,123,1.265,136,0.989,162,0.949,416,4.537,422,3.013,520,3.635,562,5.073,563,2.052,599,4.679,607,4.365,640,4.679,822,4.679,824,5.073,972,5.073,988,4.679,1128,5.611,1145,5.073,1269,4.679,1353,7.213,1355,5.601,1357,5.601,1358,5.601,1359,5.601,1360,5.601,1361,5.601,1372,7.273,1415,2.86,1469,4.973,1470,8.244]],["title/miscellaneous/variables.html",[1415,1.994,1471,4.377]],["body/miscellaneous/variables.html",[7,0.627,12,0.012,31,2.894,40,3.641,50,0.01,51,0.01,112,4.159,136,1.214,162,0.817,406,3.803,945,5.758,946,5.337,1365,5.337,1415,3.509,1471,5.337,1472,7.266,1473,6.1]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDatumDto.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"classes/Datum.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"controllers/PdfController.html":{},"classes/PdfDTO.html":{},"modules/PdfModule.html":{},"injectables/PdfService.html":{},"classes/Profile.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"modules/RelayModule.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"controllers/ReportsTemplatesController.html":{},"modules/ReportsTemplatesModule.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateReportDto.html":{},"classes/UserAuthDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":692,"title":{},"body":{"controllers/DataController.html":{},"injectables/PdfService.html":{},"coverage.html":{}}}],["0)'})@apiquery({name",{"_index":685,"title":{},"body":{"controllers/DataController.html":{}}}],["0.0.1",{"_index":1464,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":1402,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1412,"title":{},"body":{"dependencies.html":{}}}],["0.2.15",{"_index":1409,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1401,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1356,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1376,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1362,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1363,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1379,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1368,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1364,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1367,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1369,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1373,"title":{},"body":{"coverage.html":{}}}],["030011",{"_index":1228,"title":{},"body":{"injectables/RelayService.html":{}}}],["030111",{"_index":1230,"title":{},"body":{"injectables/RelayService.html":{}}}],["1",{"_index":42,"title":{"interfaces/BaseServiceInterface-1.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/DataRepository.html":{},"guards/JwtAuthGuard.html":{},"injectables/RelayService.html":{},"guards/SupabaseAuthGuard.html":{}}}],["1.7.5",{"_index":1404,"title":{},"body":{"dependencies.html":{}}}],["1.7.7",{"_index":1398,"title":{},"body":{"dependencies.html":{}}}],["1/4",{"_index":1381,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1378,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"controllers/DataController.html":{},"injectables/PdfService.html":{}}}],["10)'})@apiquery({name",{"_index":686,"title":{},"body":{"controllers/DataController.html":{}}}],["10.0.0",{"_index":1385,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":1388,"title":{},"body":{"dependencies.html":{}}}],["10.2.3",{"_index":1394,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["12",{"_index":1377,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":1460,"title":{},"body":{"overview.html":{}}}],["14",{"_index":1459,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1263,"title":{},"body":{"injectables/RelayService.html":{}}}],["2",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{},"overview.html":{}}}],["2.3.0",{"_index":1384,"title":{},"body":{"dependencies.html":{}}}],["2.45.6",{"_index":1396,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["202",{"_index":1188,"title":{},"body":{"controllers/RelayController.html":{}}}],["21",{"_index":1461,"title":{},"body":{"overview.html":{}}}],["22.6.0",{"_index":1449,"title":{},"body":{"index.html":{}}}],["22222",{"_index":1225,"title":{},"body":{"injectables/RelayService.html":{}}}],["23",{"_index":1462,"title":{},"body":{"overview.html":{}}}],["25",{"_index":1380,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["3.1.1",{"_index":1383,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":1386,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1408,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":1392,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RelayController.html":{}}}],["401",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RelayController.html":{}}}],["402",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RelayController.html":{}}}],["403",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RelayController.html":{}}}],["404",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["5",{"_index":1463,"title":{},"body":{"overview.html":{}}}],["5.7.6",{"_index":1399,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1395,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["6000",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["60000",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["6ah",{"_index":853,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["7.4.2",{"_index":1393,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1414,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":849,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["8.0.0",{"_index":1406,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":1450,"title":{},"body":{"index.html":{}}}],["accepted_agreements",{"_index":511,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["accepts",{"_index":384,"title":{},"body":{"classes/BaseRepository.html":{}}}],["action",{"_index":1189,"title":{},"body":{"controllers/RelayController.html":{}}}],["add",{"_index":390,"title":{},"body":{"classes/BaseRepository.html":{},"modules/CwDeviceOwnersModule.html":{}}}],["address",{"_index":866,"title":{},"body":{"injectables/GeolocationService.html":{},"classes/LoginDto.html":{},"classes/UserAuthDto.html":{}}}],["address'})@isemail",{"_index":995,"title":{},"body":{"classes/LoginDto.html":{}}}],["agent",{"_index":1250,"title":{},"body":{"injectables/RelayService.html":{}}}],["alias",{"_index":1354,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1469,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":439,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{}}}],["already",{"_index":1092,"title":{},"body":{"injectables/PdfService.html":{}}}],["api",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CwDevicesController.html":{},"guards/JwtAuthGuard.html":{},"controllers/PdfController.html":{},"guards/SupabaseAuthGuard.html":{},"index.html":{}}}],["apibearerauth",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"controllers/GeolocationController.html":{},"controllers/PdfController.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{}}}],["apibearerauth('authorization",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["apibearerauth('jwt",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"controllers/GeolocationController.html":{},"controllers/PdfController.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{}}}],["apibearerauth('jwt')@get('address')@useguards(supabaseauthguard",{"_index":838,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["apibearerauth('jwt')@get('user')@useguards(supabaseauthguard)@apiresponse({status",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["apicommonauth",{"_index":351,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apicommonauth('create",{"_index":358,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{}}}],["apicommonauth('delete",{"_index":370,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{}}}],["apicommonauth('fully",{"_index":367,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{}}}],["apicommonauth('get",{"_index":356,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{}}}],["apicommonauth('partially",{"_index":363,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{}}}],["apicommonauth(summary",{"_index":1421,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apicreateresponses",{"_index":345,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apideleteresponses",{"_index":346,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apigetresponses",{"_index":347,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apikey",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["apioperation",{"_index":698,"title":{},"body":{"controllers/DataController.html":{}}}],["apioperation({summary",{"_index":675,"title":{},"body":{"controllers/DataController.html":{}}}],["apiproperty",{"_index":999,"title":{},"body":{"classes/LoginDto.html":{},"classes/PdfDTO.html":{},"classes/UserAuthDto.html":{}}}],["apiproperty({description",{"_index":994,"title":{},"body":{"classes/LoginDto.html":{},"classes/PdfDTO.html":{},"classes/UserAuthDto.html":{}}}],["apiquery",{"_index":699,"title":{},"body":{"controllers/DataController.html":{},"controllers/RelayController.html":{}}}],["apiresponse",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RelayController.html":{}}}],["apisecurity",{"_index":637,"title":{},"body":{"controllers/CwDevicesController.html":{},"controllers/PdfController.html":{}}}],["apisecurity('x",{"_index":643,"title":{},"body":{"controllers/CwDevicesController.html":{},"controllers/PdfController.html":{}}}],["apitags",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"controllers/GeolocationController.html":{},"controllers/LocationController.html":{},"controllers/PdfController.html":{},"controllers/ProfilesController.html":{},"controllers/RelayController.html":{}}}],["apitags('addresses",{"_index":843,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["apitags('app",{"_index":36,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('crud",{"_index":703,"title":{},"body":{"controllers/DataController.html":{}}}],["apitags('device",{"_index":609,"title":{},"body":{"controllers/CwDeviceTypeController.html":{}}}],["apitags('devices",{"_index":645,"title":{},"body":{"controllers/CwDevicesController.html":{}}}],["apitags('endpoints",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('locations",{"_index":974,"title":{},"body":{"controllers/LocationController.html":{}}}],["apitags('profiles",{"_index":1158,"title":{},"body":{"controllers/ProfilesController.html":{}}}],["apitags('relay",{"_index":1195,"title":{},"body":{"controllers/RelayController.html":{}}}],["apitags('🔒device",{"_index":567,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["app.controller",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["app_guard",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appid",{"_index":1222,"title":{},"body":{"injectables/RelayService.html":{}}}],["application/json",{"_index":1249,"title":{},"body":{"injectables/RelayService.html":{}}}],["application/pdf",{"_index":1021,"title":{},"body":{"controllers/PdfController.html":{}}}],["appmodule",{"_index":53,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":132,"title":{"injectables/AppService.html":{}},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["array",{"_index":1131,"title":{},"body":{"injectables/PdfService.html":{}}}],["asc",{"_index":673,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"injectables/PdfService.html":{}}}],["ascending",{"_index":749,"title":{},"body":{"injectables/DataRepository.html":{}}}],["assume",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["async",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"injectables/GeolocationService.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"controllers/PdfController.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"guards/SupabaseAuthGuard.html":{}}}],["attach",{"_index":1315,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["attachment",{"_index":1023,"title":{},"body":{"controllers/PdfController.html":{}}}],["auth",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["auth.controller",{"_index":228,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["auth.guard.ts",{"_index":930,"title":{},"body":{"guards/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:15",{"_index":938,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["auth.guard.ts:31",{"_index":942,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["auth.guard.ts:45",{"_index":940,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["auth.guard.ts:58",{"_index":944,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["auth.guard.ts:9",{"_index":936,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["auth.service",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["auth/auth.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/CwDevicesModule.html":{}}}],["auth/auth.service",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/jwt",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/public.decorator",{"_index":32,"title":{},"body":{"controllers/AppController.html":{}}}],["authcontroller",{"_index":139,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"classes/UserAuthDto.html":{}}}],["authguard",{"_index":1308,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["authheader",{"_index":962,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["authheader.split",{"_index":965,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["authheader.startswith('bearer",{"_index":964,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["authmodule",{"_index":64,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/ReportsTemplatesModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1467,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RelayService.html":{},"guards/SupabaseAuthGuard.html":{}}}],["authservice",{"_index":76,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/GeolocationModule.html":{},"guards/JwtAuthGuard.html":{},"modules/PdfModule.html":{},"guards/SupabaseAuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["automation",{"_index":1196,"title":{},"body":{"controllers/RelayController.html":{}}}],["available",{"_index":1458,"title":{},"body":{"modules.html":{}}}],["avatar_url",{"_index":512,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["await",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseRepository.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"injectables/GeolocationService.html":{},"guards/JwtAuthGuard.html":{},"controllers/PdfController.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"guards/SupabaseAuthGuard.html":{}}}],["axios",{"_index":1397,"title":{},"body":{"dependencies.html":{}}}],["bad",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RelayController.html":{}}}],["badrequestexception",{"_index":777,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["badrequestexception('deveui",{"_index":790,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["base",{"_index":376,"title":{},"body":{"classes/BaseRepository.html":{}}}],["base.repository",{"_index":812,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["base64",{"_index":1235,"title":{},"body":{"injectables/RelayService.html":{}}}],["basecontroller",{"_index":310,"title":{"classes/BaseController.html":{}},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{},"coverage.html":{}}}],["basecontroller:28",{"_index":554,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{}}}],["basecontroller:35",{"_index":552,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{}}}],["basecontroller:42",{"_index":556,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{}}}],["basecontroller:49",{"_index":555,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{}}}],["basecontroller:56",{"_index":553,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{}}}],["baserepository",{"_index":374,"title":{"classes/BaseRepository.html":{}},"body":{"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/ReportTemplatesRepository.html":{},"coverage.html":{}}}],["baserepository:17",{"_index":808,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["baserepository:28",{"_index":809,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["baserepository:41",{"_index":806,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["baserepository:54",{"_index":811,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["baserepository:68",{"_index":810,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["baserepository:82",{"_index":807,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["bases/base.controller",{"_index":638,"title":{},"body":{"controllers/CwDevicesController.html":{}}}],["bases/base.service",{"_index":663,"title":{},"body":{"injectables/CwDevicesService.html":{}}}],["baseservice",{"_index":426,"title":{"classes/BaseService.html":{}},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/LocationService.html":{},"injectables/ReportsTemplatesService.html":{},"coverage.html":{}}}],["baseservice:13",{"_index":594,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/LocationService.html":{},"injectables/ReportsTemplatesService.html":{}}}],["baseservice:17",{"_index":595,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/LocationService.html":{},"injectables/ReportsTemplatesService.html":{}}}],["baseservice:21",{"_index":592,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/LocationService.html":{},"injectables/ReportsTemplatesService.html":{}}}],["baseservice:25",{"_index":597,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/LocationService.html":{},"injectables/ReportsTemplatesService.html":{}}}],["baseservice:29",{"_index":596,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/LocationService.html":{},"injectables/ReportsTemplatesService.html":{}}}],["baseservice:33",{"_index":593,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/LocationService.html":{},"injectables/ReportsTemplatesService.html":{}}}],["baseserviceinterface",{"_index":319,"title":{"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{}},"body":{"classes/BaseController.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"coverage.html":{}}}],["bearer",{"_index":951,"title":{},"body":{"guards/JwtAuthGuard.html":{},"injectables/RelayService.html":{},"guards/SupabaseAuthGuard.html":{}}}],["between",{"_index":569,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["body",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/DataController.html":{},"controllers/LocationController.html":{},"controllers/PdfController.html":{},"controllers/ProfilesController.html":{},"injectables/RelayService.html":{}}}],["bold",{"_index":1066,"title":{},"body":{"injectables/PdfService.html":{}}}],["bolditalics",{"_index":1070,"title":{},"body":{"injectables/PdfService.html":{}}}],["boolean",{"_index":520,"title":{},"body":{"classes/CreateProfileDto.html":{},"injectables/DataRepository.html":{},"injectables/RelayService.html":{},"miscellaneous/typealiases.html":{}}}],["bootstrap",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/LocationModule.html":{},"modules/PdfModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/ReportsTemplatesModule.html":{},"modules/SupabaseModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1456,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1453,"title":{},"body":{"modules.html":{}}}],["btoa(string.fromcharcode(...bytes",{"_index":1264,"title":{},"body":{"injectables/RelayService.html":{}}}],["buffer",{"_index":1099,"title":{},"body":{"injectables/PdfService.html":{}}}],["bytes",{"_index":1260,"title":{},"body":{"injectables/RelayService.html":{}}}],["cache",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["cache.interceptor.ts",{"_index":898,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{},"coverage.html":{}}}],["cache.interceptor.ts:6",{"_index":901,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["cacheinterceptor",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/HttpCacheInterceptor.html":{}}}],["cachemodule",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule.register",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["cachettl",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["cachettl(20",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["canactivate",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["canactivate(context",{"_index":937,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["catch",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/RelayService.html":{}}}],["change",{"_index":1239,"title":{},"body":{"injectables/RelayService.html":{}}}],["check",{"_index":877,"title":{},"body":{"controllers/HealthController.html":{},"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["checkapikey",{"_index":931,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["checkapikey(request",{"_index":939,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["checkjwttoken",{"_index":932,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["checkjwttoken(request",{"_index":941,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["childcomponent",{"_index":1330,"title":{},"body":{"injectables/SupabaseService.html":{}}}],["chunk",{"_index":1101,"title":{},"body":{"injectables/PdfService.html":{}}}],["chunks",{"_index":1098,"title":{},"body":{"injectables/PdfService.html":{}}}],["chunks.push(chunk",{"_index":1102,"title":{},"body":{"injectables/PdfService.html":{}}}],["class",{"_index":38,"title":{"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"classes/CreateDatumDto.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"classes/Datum.html":{},"classes/Location.html":{},"classes/LoginDto.html":{},"classes/PdfDTO.html":{},"classes/Profile.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateReportDto.html":{},"classes/UserAuthDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDatumDto.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"classes/Datum.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HttpCacheInterceptor.html":{},"guards/JwtAuthGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"controllers/PdfController.html":{},"classes/PdfDTO.html":{},"modules/PdfModule.html":{},"injectables/PdfService.html":{},"classes/Profile.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"modules/RelayModule.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"controllers/ReportsTemplatesController.html":{},"modules/ReportsTemplatesModule.html":{},"injectables/ReportsTemplatesService.html":{},"guards/SupabaseAuthGuard.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateReportDto.html":{},"classes/UserAuthDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":311,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"classes/CreateDatumDto.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"classes/Datum.html":{},"classes/Location.html":{},"classes/LoginDto.html":{},"classes/PdfDTO.html":{},"classes/Profile.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateReportDto.html":{},"classes/UserAuthDto.html":{},"overview.html":{}}}],["cleanliness",{"_index":1440,"title":{},"body":{"index.html":{}}}],["client",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["close",{"_index":1194,"title":{},"body":{"controllers/RelayController.html":{},"miscellaneous/enumerations.html":{}}}],["close'})@apiresponse({status",{"_index":1187,"title":{},"body":{"controllers/RelayController.html":{}}}],["clue",{"_index":1109,"title":{},"body":{"injectables/PdfService.html":{}}}],["cluster_appmodule",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":224,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":225,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":226,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_cwdeviceownersmodule",{"_index":577,"title":{},"body":{"modules/CwDeviceOwnersModule.html":{},"overview.html":{}}}],["cluster_cwdeviceownersmodule_exports",{"_index":579,"title":{},"body":{"modules/CwDeviceOwnersModule.html":{},"overview.html":{}}}],["cluster_cwdeviceownersmodule_imports",{"_index":578,"title":{},"body":{"modules/CwDeviceOwnersModule.html":{}}}],["cluster_cwdeviceownersmodule_providers",{"_index":580,"title":{},"body":{"modules/CwDeviceOwnersModule.html":{},"overview.html":{}}}],["cluster_cwdevicesmodule",{"_index":649,"title":{},"body":{"modules/CwDevicesModule.html":{},"overview.html":{}}}],["cluster_cwdevicesmodule_exports",{"_index":650,"title":{},"body":{"modules/CwDevicesModule.html":{},"overview.html":{}}}],["cluster_cwdevicesmodule_imports",{"_index":651,"title":{},"body":{"modules/CwDevicesModule.html":{}}}],["cluster_cwdevicesmodule_providers",{"_index":652,"title":{},"body":{"modules/CwDevicesModule.html":{},"overview.html":{}}}],["cluster_cwdevicetypemodule",{"_index":613,"title":{},"body":{"modules/CwDeviceTypeModule.html":{},"overview.html":{}}}],["cluster_cwdevicetypemodule_exports",{"_index":616,"title":{},"body":{"modules/CwDeviceTypeModule.html":{},"overview.html":{}}}],["cluster_cwdevicetypemodule_imports",{"_index":615,"title":{},"body":{"modules/CwDeviceTypeModule.html":{}}}],["cluster_cwdevicetypemodule_providers",{"_index":614,"title":{},"body":{"modules/CwDeviceTypeModule.html":{},"overview.html":{}}}],["cluster_datamodule",{"_index":724,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_exports",{"_index":727,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_imports",{"_index":725,"title":{},"body":{"modules/DataModule.html":{}}}],["cluster_datamodule_providers",{"_index":726,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_geolocationmodule",{"_index":857,"title":{},"body":{"modules/GeolocationModule.html":{},"overview.html":{}}}],["cluster_geolocationmodule_providers",{"_index":858,"title":{},"body":{"modules/GeolocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule",{"_index":979,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_imports",{"_index":980,"title":{},"body":{"modules/LocationModule.html":{}}}],["cluster_locationmodule_providers",{"_index":981,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_pdfmodule",{"_index":1035,"title":{},"body":{"modules/PdfModule.html":{},"overview.html":{}}}],["cluster_pdfmodule_imports",{"_index":1036,"title":{},"body":{"modules/PdfModule.html":{}}}],["cluster_pdfmodule_providers",{"_index":1037,"title":{},"body":{"modules/PdfModule.html":{},"overview.html":{}}}],["cluster_profilesmodule",{"_index":1163,"title":{},"body":{"modules/ProfilesModule.html":{},"overview.html":{}}}],["cluster_profilesmodule_imports",{"_index":1164,"title":{},"body":{"modules/ProfilesModule.html":{}}}],["cluster_profilesmodule_providers",{"_index":1165,"title":{},"body":{"modules/ProfilesModule.html":{},"overview.html":{}}}],["cluster_relaymodule",{"_index":1205,"title":{},"body":{"modules/RelayModule.html":{},"overview.html":{}}}],["cluster_relaymodule_providers",{"_index":1206,"title":{},"body":{"modules/RelayModule.html":{},"overview.html":{}}}],["cluster_reportstemplatesmodule",{"_index":1282,"title":{},"body":{"modules/ReportsTemplatesModule.html":{},"overview.html":{}}}],["cluster_reportstemplatesmodule_exports",{"_index":1285,"title":{},"body":{"modules/ReportsTemplatesModule.html":{},"overview.html":{}}}],["cluster_reportstemplatesmodule_imports",{"_index":1284,"title":{},"body":{"modules/ReportsTemplatesModule.html":{}}}],["cluster_reportstemplatesmodule_providers",{"_index":1283,"title":{},"body":{"modules/ReportsTemplatesModule.html":{},"overview.html":{}}}],["cluster_supabasemodule",{"_index":1318,"title":{},"body":{"modules/SupabaseModule.html":{},"overview.html":{}}}],["cluster_supabasemodule_exports",{"_index":1320,"title":{},"body":{"modules/SupabaseModule.html":{},"overview.html":{}}}],["cluster_supabasemodule_providers",{"_index":1319,"title":{},"body":{"modules/SupabaseModule.html":{}}}],["code",{"_index":1439,"title":{},"body":{"index.html":{}}}],["codeclimate",{"_index":1444,"title":{},"body":{"index.html":{}}}],["command",{"_index":1231,"title":{},"body":{"injectables/RelayService.html":{}}}],["common/common",{"_index":349,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{}}}],["common/database",{"_index":641,"title":{},"body":{"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{}}}],["commonresponses",{"_index":348,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["compositetypes",{"_index":1355,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["compression",{"_index":1403,"title":{},"body":{"dependencies.html":{}}}],["configmodule",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RelayService.html":{},"injectables/SupabaseService.html":{}}}],["confirmed",{"_index":1241,"title":{},"body":{"injectables/RelayService.html":{}}}],["console.log('downlink",{"_index":1257,"title":{},"body":{"injectables/RelayService.html":{}}}],["const",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseRepository.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"injectables/GeolocationService.html":{},"injectables/HttpCacheInterceptor.html":{},"guards/JwtAuthGuard.html":{},"controllers/PdfController.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{}}}],["constructor",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/HealthController.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"injectables/ProfilesService.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{}}}],["constructor(authservice",{"_index":1305,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["constructor(configservice",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["constructor(cwdeviceownersservice",{"_index":575,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["constructor(cwdevicesservice",{"_index":647,"title":{},"body":{"controllers/CwDevicesController.html":{}}}],["constructor(cwdevicetypeservice",{"_index":610,"title":{},"body":{"controllers/CwDeviceTypeController.html":{}}}],["constructor(dataservice",{"_index":1049,"title":{},"body":{"injectables/PdfService.html":{}}}],["constructor(deviceownerrepository",{"_index":587,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{}}}],["constructor(devicerepository",{"_index":659,"title":{},"body":{"injectables/CwDevicesService.html":{}}}],["constructor(deviceservice",{"_index":760,"title":{},"body":{"injectables/DataService.html":{}}}],["constructor(devicetyperepository",{"_index":625,"title":{},"body":{"injectables/CwDeviceTypeService.html":{}}}],["constructor(locationservice",{"_index":976,"title":{},"body":{"controllers/LocationController.html":{}}}],["constructor(private",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/DataRepository.html":{},"controllers/GeolocationController.html":{},"controllers/PdfController.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"controllers/ReportsTemplatesController.html":{},"injectables/ReportsTemplatesService.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{}}}],["constructor(profilesrepository",{"_index":1170,"title":{},"body":{"injectables/ProfilesService.html":{}}}],["constructor(protected",{"_index":442,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{}}}],["constructor(reflector",{"_index":934,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["constructor(reporttemplatesrepository",{"_index":1291,"title":{},"body":{"injectables/ReportsTemplatesService.html":{}}}],["constructor(repository",{"_index":429,"title":{},"body":{"classes/BaseService.html":{},"injectables/LocationService.html":{}}}],["constructor(service",{"_index":318,"title":{},"body":{"classes/BaseController.html":{}}}],["constructor(supabaseservice",{"_index":396,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/ProfileRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["content",{"_index":1020,"title":{},"body":{"controllers/PdfController.html":{},"injectables/RelayService.html":{}}}],["context",{"_index":902,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{},"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["context.getclass",{"_index":949,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":948,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":903,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{},"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"controllers/GeolocationController.html":{},"controllers/HealthController.html":{},"controllers/LocationController.html":{},"controllers/PdfController.html":{},"controllers/ProfilesController.html":{},"controllers/RelayController.html":{},"controllers/ReportsTemplatesController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"controllers/GeolocationController.html":{},"controllers/HealthController.html":{},"controllers/LocationController.html":{},"controllers/PdfController.html":{},"controllers/ProfilesController.html":{},"controllers/RelayController.html":{},"controllers/ReportsTemplatesController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('cw",{"_index":574,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{}}}],["controller('data",{"_index":702,"title":{},"body":{"controllers/DataController.html":{}}}],["controller('geolocation",{"_index":844,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["controller('health",{"_index":885,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('location",{"_index":975,"title":{},"body":{"controllers/LocationController.html":{}}}],["controller('pdf",{"_index":1015,"title":{},"body":{"controllers/PdfController.html":{}}}],["controller('profiles",{"_index":1159,"title":{},"body":{"controllers/ProfilesController.html":{}}}],["controller('relay",{"_index":1197,"title":{},"body":{"controllers/RelayController.html":{}}}],["controller('reports",{"_index":1279,"title":{},"body":{"controllers/ReportsTemplatesController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"controllers/PdfController.html":{},"modules/PdfModule.html":{},"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"controllers/RelayController.html":{},"modules/RelayModule.html":{},"controllers/ReportsTemplatesController.html":{},"modules/ReportsTemplatesModule.html":{},"guards/SupabaseAuthGuard.html":{},"overview.html":{}}}],["correct",{"_index":1108,"title":{},"body":{"injectables/PdfService.html":{}}}],["coverage",{"_index":1349,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":313,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/IRepositoryBase.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateReportDto.html":{}}}],["create(@body",{"_index":360,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/DataController.html":{},"controllers/LocationController.html":{}}}],["create(createdatumdto",{"_index":782,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["create(createdto",{"_index":322,"title":{},"body":{"classes/BaseController.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{}}}],["create(dto",{"_index":431,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/LocationService.html":{},"injectables/ReportsTemplatesService.html":{}}}],["create(entity",{"_index":917,"title":{},"body":{"interfaces/IRepositoryBase.html":{},"interfaces/RepositoryInterface.html":{}}}],["create(item",{"_index":400,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["createclient",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["createclient(supabaseurl",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["created_at",{"_index":687,"title":{},"body":{"controllers/DataController.html":{}}}],["createdatumdto",{"_index":454,"title":{"classes/CreateDatumDto.html":{}},"body":{"classes/CreateDatumDto.html":{},"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"classes/UpdateDatumDto.html":{},"coverage.html":{}}}],["createdevicedto",{"_index":457,"title":{"classes/CreateDeviceDto.html":{}},"body":{"classes/CreateDeviceDto.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"classes/UpdateDeviceDto.html":{},"coverage.html":{}}}],["createdeviceownerdto",{"_index":474,"title":{"classes/CreateDeviceOwnerDto.html":{}},"body":{"classes/CreateDeviceOwnerDto.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"classes/UpdateDeviceOwnerDto.html":{},"coverage.html":{}}}],["createdevicetypedto",{"_index":484,"title":{"classes/CreateDeviceTypeDto.html":{}},"body":{"classes/CreateDeviceTypeDto.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"classes/UpdateDeviceTypeDto.html":{},"coverage.html":{}}}],["createdto",{"_index":323,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"injectables/ReportsTemplatesService.html":{}}}],["createlocationdto",{"_index":489,"title":{"classes/CreateLocationDto.html":{}},"body":{"classes/CreateLocationDto.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"classes/UpdateLocationDto.html":{},"coverage.html":{}}}],["createpdfbinary",{"_index":1046,"title":{},"body":{"injectables/PdfService.html":{}}}],["createpdfbinary(user_id",{"_index":1052,"title":{},"body":{"injectables/PdfService.html":{}}}],["createprofiledto",{"_index":508,"title":{"classes/CreateProfileDto.html":{}},"body":{"classes/CreateProfileDto.html":{},"injectables/ProfilesService.html":{},"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["createreporttemplatedto",{"_index":539,"title":{"classes/CreateReportTemplateDto.html":{}},"body":{"classes/CreateReportTemplateDto.html":{},"injectables/ReportsTemplatesService.html":{},"classes/UpdateReportDto.html":{},"coverage.html":{}}}],["credentials",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["cropwatch",{"_index":1425,"title":{},"body":{"index.html":{}}}],["cropwatch's",{"_index":1433,"title":{},"body":{"index.html":{}}}],["crud",{"_index":382,"title":{},"body":{"classes/BaseRepository.html":{},"controllers/CwDeviceOwnersController.html":{}}}],["current",{"_index":570,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{}}}],["cw",{"_index":549,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{}}}],["cw_device_owners",{"_index":814,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{}}}],["cw_device_owners.controller",{"_index":583,"title":{},"body":{"modules/CwDeviceOwnersModule.html":{}}}],["cw_device_owners.service",{"_index":558,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{}}}],["cw_device_owners/cw_device_owners.module",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["cw_device_type",{"_index":832,"title":{},"body":{"injectables/DeviceTypeRepository.html":{}}}],["cw_device_type.controller",{"_index":619,"title":{},"body":{"modules/CwDeviceTypeModule.html":{}}}],["cw_device_type.service",{"_index":606,"title":{},"body":{"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{}}}],["cw_devices",{"_index":825,"title":{},"body":{"injectables/DeviceRepository.html":{}}}],["cw_devices.controller",{"_index":655,"title":{},"body":{"modules/CwDevicesModule.html":{}}}],["cw_devices.service",{"_index":636,"title":{},"body":{"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{}}}],["cw_devices/cw_devices.module",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["cw_locations",{"_index":989,"title":{},"body":{"injectables/LocationRepository.html":{}}}],["cwdeviceownerscontroller",{"_index":547,"title":{"controllers/CwDeviceOwnersController.html":{}},"body":{"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"coverage.html":{}}}],["cwdeviceownersmodule",{"_index":65,"title":{"modules/CwDeviceOwnersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/PdfModule.html":{},"modules.html":{},"overview.html":{}}}],["cwdeviceownersservice",{"_index":557,"title":{"injectables/CwDeviceOwnersService.html":{}},"body":{"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"modules/DataModule.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"coverage.html":{},"overview.html":{}}}],["cwdevicescontroller",{"_index":633,"title":{"controllers/CwDevicesController.html":{}},"body":{"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"coverage.html":{}}}],["cwdevicesmodule",{"_index":66,"title":{"modules/CwDevicesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/PdfModule.html":{},"modules.html":{},"overview.html":{}}}],["cwdevicesservice",{"_index":635,"title":{"injectables/CwDevicesService.html":{}},"body":{"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"coverage.html":{},"overview.html":{}}}],["cwdevicetypecontroller",{"_index":602,"title":{"controllers/CwDeviceTypeController.html":{}},"body":{"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"coverage.html":{}}}],["cwdevicetypemodule",{"_index":612,"title":{"modules/CwDeviceTypeModule.html":{}},"body":{"modules/CwDeviceTypeModule.html":{},"modules/DataModule.html":{},"modules/PdfModule.html":{},"modules.html":{},"overview.html":{}}}],["cwdevicetypeservice",{"_index":605,"title":{"injectables/CwDeviceTypeService.html":{}},"body":{"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseRepository.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"injectables/GeolocationService.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["data.controller",{"_index":730,"title":{},"body":{"modules/DataModule.html":{}}}],["data.map(item",{"_index":1118,"title":{},"body":{"injectables/PdfService.html":{}}}],["data.service",{"_index":695,"title":{},"body":{"controllers/DataController.html":{},"modules/DataModule.html":{}}}],["data/data.module",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["data[0]?.dev_eui",{"_index":1133,"title":{},"body":{"injectables/PdfService.html":{}}}],["database",{"_index":416,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"injectables/SupabaseService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["database.types",{"_index":781,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"injectables/SupabaseService.html":{}}}],["database.types.ts",{"_index":1353,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["datacontroller",{"_index":667,"title":{"controllers/DataController.html":{}},"body":{"controllers/DataController.html":{},"modules/DataModule.html":{},"coverage.html":{}}}],["datamodule",{"_index":67,"title":{"modules/DataModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/PdfModule.html":{},"modules.html":{},"overview.html":{}}}],["datarepository",{"_index":728,"title":{"injectables/DataRepository.html":{}},"body":{"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"coverage.html":{},"overview.html":{}}}],["datarows",{"_index":1117,"title":{},"body":{"injectables/PdfService.html":{}}}],["dataservice",{"_index":694,"title":{"injectables/DataService.html":{}},"body":{"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"modules/PdfModule.html":{},"injectables/PdfService.html":{},"coverage.html":{},"overview.html":{}}}],["date().toisostring",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["datum",{"_index":799,"title":{"classes/Datum.html":{}},"body":{"classes/Datum.html":{},"coverage.html":{}}}],["datum.dto",{"_index":696,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"classes/UpdateDatumDto.html":{}}}],["datum.dto.ts",{"_index":456,"title":{},"body":{"classes/CreateDatumDto.html":{},"classes/UpdateDatumDto.html":{},"coverage.html":{}}}],["declarations",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/LocationModule.html":{},"modules/PdfModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/ReportsTemplatesModule.html":{},"modules/SupabaseModule.html":{},"overview.html":{}}}],["decorators",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"controllers/GeolocationController.html":{},"controllers/HealthController.html":{},"controllers/LocationController.html":{},"classes/LoginDto.html":{},"controllers/PdfController.html":{},"classes/PdfDTO.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"controllers/RelayController.html":{},"controllers/ReportsTemplatesController.html":{},"classes/UserAuthDto.html":{}}}],["decorators.ts",{"_index":1370,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["default",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/BaseRepository.html":{},"controllers/DataController.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/PdfService.html":{},"injectables/ReportTemplatesRepository.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"controllers/GeolocationController.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"controllers/PdfController.html":{},"classes/PdfDTO.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"controllers/ReportsTemplatesController.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{},"classes/UserAuthDto.html":{}}}],["delete",{"_index":314,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"controllers/ProfilesController.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{}}}],["delete(':id",{"_index":721,"title":{},"body":{"controllers/DataController.html":{}}}],["delete()@apicommonauth('delete",{"_index":328,"title":{},"body":{"classes/BaseController.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{}}}],["delete(@body",{"_index":371,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{}}}],["delete(createdto",{"_index":327,"title":{},"body":{"classes/BaseController.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{}}}],["delete(id",{"_index":403,"title":{},"body":{"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/IRepositoryBase.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{}}}],["demonstration",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["dependencies",{"_index":55,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/LocationModule.html":{},"modules/PdfModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/ReportsTemplatesModule.html":{},"modules/SupabaseModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":674,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["desc.'})@apibearerauth('jwt')@get",{"_index":689,"title":{},"body":{"controllers/DataController.html":{}}}],["description",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseRepository.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"controllers/DataController.html":{},"classes/LoginDto.html":{},"classes/PdfDTO.html":{},"controllers/RelayController.html":{},"injectables/SupabaseService.html":{},"classes/UserAuthDto.html":{},"properties.html":{}}}],["dev",{"_index":1030,"title":{},"body":{"classes/PdfDTO.html":{}}}],["dev_eui",{"_index":460,"title":{},"body":{"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateReportTemplateDto.html":{},"injectables/CwDevicesService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{}}}],["dev_type",{"_index":632,"title":{},"body":{"injectables/CwDeviceTypeService.html":{},"injectables/DeviceTypeRepository.html":{}}}],["development",{"_index":1434,"title":{},"body":{"index.html":{}}}],["deveui",{"_index":591,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"controllers/PdfController.html":{},"classes/PdfDTO.html":{},"injectables/PdfService.html":{},"injectables/ReportsTemplatesService.html":{}}}],["device",{"_index":476,"title":{},"body":{"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"classes/PdfDTO.html":{},"injectables/ReportTemplatesRepository.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"coverage.html":{}}}],["device.'})@apiquery({name",{"_index":683,"title":{},"body":{"controllers/DataController.html":{}}}],["device.dto",{"_index":639,"title":{},"body":{"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"classes/UpdateDeviceDto.html":{}}}],["device.dto.ts",{"_index":459,"title":{},"body":{"classes/CreateDeviceDto.html":{},"classes/UpdateDeviceDto.html":{},"coverage.html":{}}}],["device.dto.ts:10",{"_index":465,"title":{},"body":{"classes/CreateDeviceDto.html":{}}}],["device.dto.ts:14",{"_index":468,"title":{},"body":{"classes/CreateDeviceDto.html":{}}}],["device.dto.ts:18",{"_index":466,"title":{},"body":{"classes/CreateDeviceDto.html":{}}}],["device.dto.ts:22",{"_index":469,"title":{},"body":{"classes/CreateDeviceDto.html":{}}}],["device.dto.ts:6",{"_index":464,"title":{},"body":{"classes/CreateDeviceDto.html":{}}}],["deviceid",{"_index":1220,"title":{},"body":{"injectables/RelayService.html":{}}}],["deviceowner",{"_index":791,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["deviceownerrepository",{"_index":581,"title":{"injectables/DeviceOwnerRepository.html":{}},"body":{"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"modules/DataModule.html":{},"injectables/DeviceOwnerRepository.html":{},"coverage.html":{},"overview.html":{}}}],["deviceownerrow",{"_index":599,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"injectables/DeviceOwnerRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["deviceownerservice",{"_index":761,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["devicerepository",{"_index":653,"title":{"injectables/DeviceRepository.html":{}},"body":{"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"modules/DataModule.html":{},"injectables/DeviceRepository.html":{},"coverage.html":{},"overview.html":{}}}],["devicerow",{"_index":824,"title":{},"body":{"injectables/DeviceRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["devices",{"_index":573,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{}}}],["deviceservice",{"_index":705,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["devicesownersrow",{"_index":562,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["devicesrow",{"_index":640,"title":{},"body":{"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["devicetype",{"_index":771,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["devicetypedata",{"_index":786,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["devicetypedata.data_table",{"_index":789,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["devicetyperepository",{"_index":617,"title":{"injectables/DeviceTypeRepository.html":{}},"body":{"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"modules/DataModule.html":{},"injectables/DeviceTypeRepository.html":{},"coverage.html":{},"overview.html":{}}}],["devicetyperow",{"_index":607,"title":{},"body":{"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/DeviceTypeRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["devicetypeservice",{"_index":706,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["devtype",{"_index":629,"title":{},"body":{"injectables/CwDeviceTypeService.html":{}}}],["direction",{"_index":688,"title":{},"body":{"controllers/DataController.html":{}}}],["directly",{"_index":1129,"title":{},"body":{"injectables/PdfService.html":{}}}],["disposition",{"_index":1022,"title":{},"body":{"controllers/PdfController.html":{}}}],["dist",{"_index":1063,"title":{},"body":{"injectables/PdfService.html":{}}}],["docdefinition",{"_index":1091,"title":{},"body":{"injectables/PdfService.html":{}}}],["docs",{"_index":889,"title":{},"body":{"controllers/HealthController.html":{}}}],["documentation",{"_index":1350,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["downlink",{"_index":1255,"title":{},"body":{"injectables/RelayService.html":{}}}],["downlinks",{"_index":1232,"title":{},"body":{"injectables/RelayService.html":{}}}],["dragino",{"_index":1223,"title":{},"body":{"injectables/RelayService.html":{}}}],["dto",{"_index":354,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/LocationService.html":{},"injectables/ReportsTemplatesService.html":{}}}],["dto/create",{"_index":559,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"injectables/ProfilesService.html":{},"injectables/ReportsTemplatesService.html":{}}}],["dto/update",{"_index":566,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"injectables/ReportsTemplatesService.html":{}}}],["dtos/userauth.dto",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{}}}],["email",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateProfileDto.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"classes/LoginDto.html":{},"classes/UserAuthDto.html":{}}}],["employer",{"_index":513,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["encoded",{"_index":1236,"title":{},"body":{"injectables/RelayService.html":{}}}],["entity",{"_index":919,"title":{},"body":{"interfaces/IRepositoryBase.html":{},"interfaces/RepositoryInterface.html":{}}}],["enum",{"_index":1184,"title":{},"body":{"controllers/RelayController.html":{}}}],["enumerations",{"_index":1416,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":1357,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["env",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["env.development",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["env.development.local",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["eq('api_key",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["eq('dev_eui",{"_index":746,"title":{},"body":{"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["eq('dev_type",{"_index":834,"title":{},"body":{"injectables/DeviceTypeRepository.html":{}}}],["eq('id",{"_index":752,"title":{},"body":{"injectables/DataRepository.html":{},"injectables/ProfileRepository.html":{}}}],["eq('user_id",{"_index":816,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{}}}],["eq(idcolumn",{"_index":421,"title":{},"body":{"classes/BaseRepository.html":{}}}],["error",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseRepository.html":{},"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"guards/JwtAuthGuard.html":{},"injectables/ProfileRepository.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["error('deveui",{"_index":1084,"title":{},"body":{"injectables/PdfService.html":{}}}],["error('method",{"_index":372,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{}}}],["error('user",{"_index":1083,"title":{},"body":{"injectables/PdfService.html":{}}}],["error(`device",{"_index":817,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["error(`error",{"_index":870,"title":{},"body":{"injectables/GeolocationService.html":{},"injectables/RelayService.html":{}}}],["error(`failed",{"_index":750,"title":{},"body":{"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["error.message",{"_index":751,"title":{},"body":{"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["eui",{"_index":680,"title":{},"body":{"controllers/DataController.html":{},"classes/PdfDTO.html":{}}}],["example",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{}}}],["examplelink",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["excluded",{"_index":910,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["excludepaths",{"_index":908,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["excludepaths.includes(httpadapter.getrequesturl(request",{"_index":911,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["executioncontext",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpCacheInterceptor.html":{},"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["exist",{"_index":794,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["export",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDatumDto.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"classes/Datum.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"controllers/PdfController.html":{},"classes/PdfDTO.html":{},"modules/PdfModule.html":{},"injectables/PdfService.html":{},"classes/Profile.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"modules/RelayModule.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"controllers/ReportsTemplatesController.html":{},"modules/ReportsTemplatesModule.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateReportDto.html":{},"classes/UserAuthDto.html":{}}}],["exports",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/LocationModule.html":{},"modules/PdfModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/ReportsTemplatesModule.html":{},"modules/SupabaseModule.html":{},"overview.html":{}}}],["express",{"_index":1011,"title":{},"body":{"controllers/PdfController.html":{},"dependencies.html":{}}}],["extends",{"_index":441,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/HttpCacheInterceptor.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateReportDto.html":{}}}],["extracttokenfromheader",{"_index":933,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["extracttokenfromheader(request",{"_index":943,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["f_port",{"_index":1238,"title":{},"body":{"injectables/RelayService.html":{}}}],["failover",{"_index":391,"title":{},"body":{"classes/BaseRepository.html":{}}}],["false",{"_index":679,"title":{},"body":{"controllers/DataController.html":{}}}],["feedback",{"_index":1328,"title":{},"body":{"injectables/SupabaseService.html":{}}}],["fetch",{"_index":1107,"title":{},"body":{"injectables/PdfService.html":{}}}],["fetch(`https://geocode.maps.co/search?q=${address}&api_key=${process.env.geocoding_api_key",{"_index":868,"title":{},"body":{"injectables/GeolocationService.html":{}}}],["fetch(url",{"_index":1245,"title":{},"body":{"injectables/RelayService.html":{}}}],["fetchdataandreportfromdb",{"_index":1047,"title":{},"body":{"injectables/PdfService.html":{}}}],["fetchdataandreportfromdb(deveui",{"_index":1054,"title":{},"body":{"injectables/PdfService.html":{}}}],["fetched",{"_index":856,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["fetching",{"_index":871,"title":{},"body":{"injectables/GeolocationService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDatumDto.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"classes/Datum.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"controllers/PdfController.html":{},"classes/PdfDTO.html":{},"modules/PdfModule.html":{},"injectables/PdfService.html":{},"classes/Profile.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"modules/RelayModule.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"controllers/ReportsTemplatesController.html":{},"modules/ReportsTemplatesModule.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateReportDto.html":{},"classes/UserAuthDto.html":{},"coverage.html":{}}}],["filename=\"report.pdf",{"_index":1024,"title":{},"body":{"controllers/PdfController.html":{}}}],["filter",{"_index":681,"title":{},"body":{"controllers/DataController.html":{}}}],["filters",{"_index":677,"title":{},"body":{"controllers/DataController.html":{}}}],["find",{"_index":753,"title":{},"body":{"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["findall",{"_index":315,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/IRepositoryBase.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{}}}],["findall(params",{"_index":763,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["findall(req",{"_index":669,"title":{},"body":{"controllers/DataController.html":{}}}],["findallbytable",{"_index":738,"title":{},"body":{"injectables/DataRepository.html":{}}}],["findallbytable(tablename",{"_index":741,"title":{},"body":{"injectables/DataRepository.html":{}}}],["findallparams",{"_index":764,"title":{"interfaces/FindAllParams.html":{}},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"coverage.html":{}}}],["findbydeveui",{"_index":819,"title":{},"body":{"injectables/DeviceRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["findbydeveui(undefined",{"_index":821,"title":{},"body":{"injectables/DeviceRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["findbydeveuianduid",{"_index":802,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{}}}],["findbydeveuianduid(dev_eui",{"_index":804,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{}}}],["findbydevicetype",{"_index":828,"title":{},"body":{"injectables/DeviceTypeRepository.html":{}}}],["findbydevicetype(undefined",{"_index":830,"title":{},"body":{"injectables/DeviceTypeRepository.html":{}}}],["findbyid",{"_index":395,"title":{},"body":{"classes/BaseRepository.html":{},"classes/BaseService.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/ProfileRepository.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{}}}],["findbyid(id",{"_index":408,"title":{},"body":{"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/IRepositoryBase.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/ProfileRepository.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{}}}],["findbyidintable",{"_index":739,"title":{},"body":{"injectables/DataRepository.html":{}}}],["findbyidintable(tablename",{"_index":743,"title":{},"body":{"injectables/DataRepository.html":{}}}],["findone",{"_index":915,"title":{},"body":{"interfaces/IRepositoryBase.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{}}}],["findone(@param('id",{"_index":717,"title":{},"body":{"controllers/DataController.html":{}}}],["findone(@req",{"_index":1160,"title":{},"body":{"controllers/ProfilesController.html":{}}}],["findone(id",{"_index":921,"title":{},"body":{"interfaces/IRepositoryBase.html":{},"injectables/ProfilesService.html":{},"interfaces/RepositoryInterface.html":{}}}],["findone(req",{"_index":1153,"title":{},"body":{"controllers/ProfilesController.html":{}}}],["follows",{"_index":1446,"title":{},"body":{"index.html":{}}}],["fonts",{"_index":1045,"title":{},"body":{"injectables/PdfService.html":{}}}],["for.'})@isstring",{"_index":1033,"title":{},"body":{"classes/PdfDTO.html":{}}}],["forbidden",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RelayController.html":{}}}],["forbidden'})@apiresponse({status",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["format",{"_index":1313,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["found",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"guards/JwtAuthGuard.html":{},"injectables/ReportTemplatesRepository.html":{},"guards/SupabaseAuthGuard.html":{}}}],["frm_payload",{"_index":1233,"title":{},"body":{"injectables/RelayService.html":{}}}],["from('api_keys",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["from('cw_device_owners",{"_index":815,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{}}}],["from('cw_device_type",{"_index":833,"title":{},"body":{"injectables/DeviceTypeRepository.html":{}}}],["from('cw_devices",{"_index":826,"title":{},"body":{"injectables/DeviceRepository.html":{}}}],["from('profiles",{"_index":1148,"title":{},"body":{"injectables/ProfileRepository.html":{}}}],["from('reports_templates",{"_index":1271,"title":{},"body":{"injectables/ReportTemplatesRepository.html":{}}}],["from(tablename",{"_index":745,"title":{},"body":{"injectables/DataRepository.html":{}}}],["from(this.tablename",{"_index":420,"title":{},"body":{"classes/BaseRepository.html":{}}}],["full",{"_index":425,"title":{},"body":{"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{}}}],["full_name",{"_index":514,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["fullupdate",{"_index":316,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{}}}],["fullupdate(@param('id",{"_index":368,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{}}}],["fullupdate(id",{"_index":334,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{}}}],["function",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/BaseServiceInterface.html":{},"coverage.html":{}}}],["functions",{"_index":1418,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":1031,"title":{},"body":{"classes/PdfDTO.html":{}}}],["generic",{"_index":378,"title":{},"body":{"classes/BaseRepository.html":{}}}],["geolocation",{"_index":837,"title":{},"body":{"controllers/GeolocationController.html":{},"injectables/GeolocationService.html":{}}}],["geolocation.controller",{"_index":860,"title":{},"body":{"modules/GeolocationModule.html":{}}}],["geolocation.service",{"_index":842,"title":{},"body":{"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{}}}],["geolocation/geolocation.module",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["geolocationcontroller",{"_index":835,"title":{"controllers/GeolocationController.html":{}},"body":{"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"coverage.html":{}}}],["geolocationmodule",{"_index":68,"title":{"modules/GeolocationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GeolocationModule.html":{},"modules.html":{},"overview.html":{}}}],["geolocationservice",{"_index":841,"title":{"injectables/GeolocationService.html":{}},"body":{"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"injectables/GeolocationService.html":{},"coverage.html":{},"overview.html":{}}}],["get(':id",{"_index":716,"title":{},"body":{"controllers/DataController.html":{}}}],["get('address",{"_index":845,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["get('control",{"_index":1198,"title":{},"body":{"controllers/RelayController.html":{}}}],["get('user",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@apibearerauth('jwt",{"_index":1154,"title":{},"body":{"controllers/ProfilesController.html":{}}}],["get()@apicommonauth('get",{"_index":331,"title":{},"body":{"classes/BaseController.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{}}}],["get()@apisecurity('x",{"_index":1006,"title":{},"body":{"controllers/PdfController.html":{}}}],["get()@public()@healthcheck",{"_index":878,"title":{},"body":{"controllers/HealthController.html":{}}}],["getdevice",{"_index":756,"title":{},"body":{"injectables/DataService.html":{}}}],["getdevice(deveui",{"_index":767,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["getdevicebydeveui",{"_index":658,"title":{},"body":{"injectables/CwDevicesService.html":{}}}],["getdevicebydeveui(deveui",{"_index":661,"title":{},"body":{"injectables/CwDevicesService.html":{}}}],["getdeviceownerbydeveuianduid",{"_index":586,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{}}}],["getdeviceownerbydeveuianduid(deveui",{"_index":589,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{}}}],["getdevicetypebydevtype",{"_index":624,"title":{},"body":{"injectables/CwDeviceTypeService.html":{}}}],["getdevicetypebydevtype(devtype",{"_index":627,"title":{},"body":{"injectables/CwDeviceTypeService.html":{}}}],["getdevicetypedata",{"_index":757,"title":{},"body":{"injectables/DataService.html":{}}}],["getdevicetypedata(devicetype",{"_index":769,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["getfile",{"_index":1004,"title":{},"body":{"controllers/PdfController.html":{}}}],["getfile(res",{"_index":1005,"title":{},"body":{"controllers/PdfController.html":{}}}],["getgeolocation",{"_index":863,"title":{},"body":{"injectables/GeolocationService.html":{}}}],["getgeolocation(address",{"_index":864,"title":{},"body":{"injectables/GeolocationService.html":{}}}],["gethello",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getprotectedroute",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GeolocationController.html":{},"controllers/RelayController.html":{}}}],["getprotectedroute(@query('state",{"_index":1200,"title":{},"body":{"controllers/RelayController.html":{}}}],["getprotectedroute(@req",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprotectedroute(req",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprotectedroute(state",{"_index":1180,"title":{},"body":{"controllers/RelayController.html":{}}}],["getreporttemplatebydeveui",{"_index":1290,"title":{},"body":{"injectables/ReportsTemplatesService.html":{}}}],["getreporttemplatebydeveui(deveui",{"_index":1293,"title":{},"body":{"injectables/ReportsTemplatesService.html":{}}}],["getreporttemplates",{"_index":1276,"title":{},"body":{"controllers/ReportsTemplatesController.html":{}}}],["getsupabaseclient",{"_index":419,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/ProfileRepository.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/SupabaseService.html":{}}}],["getswaggerconfig",{"_index":1375,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getswaggerconfig(version",{"_index":1422,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getting",{"_index":1423,"title":{"index.html":{}},"body":{}}],["getuserbyid",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["github",{"_index":1437,"title":{},"body":{"index.html":{}}}],["global",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["graph",{"_index":1457,"title":{},"body":{"modules.html":{}}}],["gt('expires_at",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["guard",{"_index":130,"title":{"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["guards",{"_index":928,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{},"overview.html":{}}}],["guards/supabase.guard",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{}}}],["hardcoded",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["header",{"_index":1138,"title":{},"body":{"injectables/PdfService.html":{},"guards/SupabaseAuthGuard.html":{}}}],["headers",{"_index":1247,"title":{},"body":{"injectables/RelayService.html":{}}}],["health",{"_index":876,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":895,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":882,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":880,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":874,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":69,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["hello",{"_index":137,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":1405,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":1429,"title":{},"body":{"index.html":{}}}],["here",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["hexstring",{"_index":1216,"title":{},"body":{"injectables/RelayService.html":{}}}],["hextobase64",{"_index":1210,"title":{},"body":{"injectables/RelayService.html":{}}}],["hextobase64(hexstring",{"_index":1214,"title":{},"body":{"injectables/RelayService.html":{}}}],["high",{"_index":1243,"title":{},"body":{"injectables/RelayService.html":{}}}],["highly",{"_index":1441,"title":{},"body":{"index.html":{}}}],["house",{"_index":848,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["http",{"_index":886,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpadapter",{"_index":904,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["httpadapter.getrequestmethod(request",{"_index":907,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["httpadapter.getrequesturl(request",{"_index":912,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["httpcacheinterceptor",{"_index":896,"title":{"injectables/HttpCacheInterceptor.html":{}},"body":{"injectables/HttpCacheInterceptor.html":{},"coverage.html":{}}}],["httpexception",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["httphealthindicator",{"_index":881,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":893,"title":{},"body":{"modules/HealthModule.html":{}}}],["https://api.cropwatch.io/api/auth/user",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://docs.nestjs.com",{"_index":890,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpstatus",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["id",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateProfileDto.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/IRepositoryBase.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{}}}],["id.replace('bearer",{"_index":1175,"title":{},"body":{"injectables/ProfilesService.html":{}}}],["idcolumn",{"_index":404,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["identifier",{"_index":1351,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["implementation",{"_index":1309,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["implemented",{"_index":373,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{}}}],["implements",{"_index":428,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["import",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HttpCacheInterceptor.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"controllers/PdfController.html":{},"classes/PdfDTO.html":{},"modules/PdfModule.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"modules/RelayModule.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"controllers/ReportsTemplatesController.html":{},"modules/ReportsTemplatesModule.html":{},"injectables/ReportsTemplatesService.html":{},"guards/SupabaseAuthGuard.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateReportDto.html":{},"classes/UserAuthDto.html":{}}}],["important",{"_index":1442,"title":{},"body":{"index.html":{}}}],["imports",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/LocationModule.html":{},"modules/PdfModule.html":{},"modules/ProfilesModule.html":{},"modules/ReportsTemplatesModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"controllers/PdfController.html":{},"classes/PdfDTO.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"controllers/ReportsTemplatesController.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{},"classes/UserAuthDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDatumDto.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"classes/Datum.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"controllers/PdfController.html":{},"classes/PdfDTO.html":{},"modules/PdfModule.html":{},"injectables/PdfService.html":{},"classes/Profile.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"modules/RelayModule.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"controllers/ReportsTemplatesController.html":{},"modules/ReportsTemplatesModule.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateReportDto.html":{},"classes/UserAuthDto.html":{}}}],["inherited",{"_index":551,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{}}}],["initialize",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["injectable",{"_index":131,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/GeolocationService.html":{},"injectables/HttpCacheInterceptor.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"injectables/ProfilesService.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"injectables/SupabaseService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"injectables/GeolocationService.html":{},"injectables/HttpCacheInterceptor.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"injectables/ProfilesService.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{},"coverage.html":{}}}],["injectables",{"_index":133,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/GeolocationService.html":{},"injectables/HttpCacheInterceptor.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"injectables/ProfilesService.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"injectables/SupabaseService.html":{},"overview.html":{}}}],["inner",{"_index":1431,"title":{},"body":{"index.html":{}}}],["insert",{"_index":1130,"title":{},"body":{"injectables/PdfService.html":{}}}],["insert(item",{"_index":423,"title":{},"body":{"classes/BaseRepository.html":{}}}],["insertdataintoreport",{"_index":1048,"title":{},"body":{"injectables/PdfService.html":{}}}],["insertdataintoreport(reportjson",{"_index":1056,"title":{},"body":{"injectables/PdfService.html":{}}}],["instance",{"_index":1326,"title":{},"body":{"injectables/SupabaseService.html":{}}}],["integration",{"_index":1252,"title":{},"body":{"injectables/RelayService.html":{}}}],["integration/my",{"_index":1251,"title":{},"body":{"injectables/RelayService.html":{}}}],["interface",{"_index":353,"title":{"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"interfaces/FindAllParams.html":{},"interfaces/IRepositoryBase.html":{},"interfaces/RepositoryInterface.html":{}},"body":{"classes/BaseController.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"interfaces/IRepositoryBase.html":{},"interfaces/RepositoryInterface.html":{},"coverage.html":{}}}],["interfaces",{"_index":449,"title":{},"body":{"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"interfaces/FindAllParams.html":{},"interfaces/IRepositoryBase.html":{},"interfaces/RepositoryInterface.html":{},"overview.html":{}}}],["irepositorybase",{"_index":913,"title":{"interfaces/IRepositoryBase.html":{}},"body":{"interfaces/IRepositoryBase.html":{},"interfaces/RepositoryInterface.html":{},"coverage.html":{}}}],["is_public_key",{"_index":945,"title":{},"body":{"guards/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isboolean",{"_index":536,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["isemail",{"_index":537,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/LoginDto.html":{},"classes/UserAuthDto.html":{}}}],["isgetrequest",{"_index":906,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["isglobal",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["islatitude",{"_index":506,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["islongitude",{"_index":507,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["isnotempty",{"_index":470,"title":{},"body":{"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{}}}],["isnotempty()@isnumber",{"_index":467,"title":{},"body":{"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateReportTemplateDto.html":{}}}],["isnotempty()@isstring",{"_index":463,"title":{},"body":{"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{}}}],["isnumber",{"_index":471,"title":{},"body":{"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateReportTemplateDto.html":{}}}],["isoptional",{"_index":505,"title":{},"body":{"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{}}}],["isoptional()@isboolean",{"_index":521,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["isoptional()@isemail",{"_index":525,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["isoptional()@islatitude",{"_index":497,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["isoptional()@islongitude",{"_index":499,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["isoptional()@isnumber",{"_index":501,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["isoptional()@isstring",{"_index":495,"title":{},"body":{"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{}}}],["isoptional()@isstring()@isurl",{"_index":523,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["isoptional()@isurl",{"_index":534,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["ispublic",{"_index":946,"title":{},"body":{"guards/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["isstring",{"_index":472,"title":{},"body":{"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"classes/LoginDto.html":{},"classes/PdfDTO.html":{},"classes/UserAuthDto.html":{}}}],["isurl",{"_index":538,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["isvalidapikey",{"_index":959,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["italic.ttf",{"_index":1069,"title":{},"body":{"injectables/PdfService.html":{}}}],["italics",{"_index":1068,"title":{},"body":{"injectables/PdfService.html":{}}}],["item",{"_index":359,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseRepository.html":{},"interfaces/BaseServiceInterface.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["item')@apicreateresponses",{"_index":325,"title":{},"body":{"classes/BaseController.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{}}}],["item')@apideleteresponses",{"_index":329,"title":{},"body":{"classes/BaseController.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{}}}],["item.created_at",{"_index":1120,"title":{},"body":{"injectables/PdfService.html":{}}}],["item.dev_eui",{"_index":1125,"title":{},"body":{"injectables/PdfService.html":{}}}],["item.dewpointc",{"_index":1121,"title":{},"body":{"injectables/PdfService.html":{}}}],["item.humidity",{"_index":1122,"title":{},"body":{"injectables/PdfService.html":{}}}],["item.id",{"_index":1119,"title":{},"body":{"injectables/PdfService.html":{}}}],["item.profile_id",{"_index":1126,"title":{},"body":{"injectables/PdfService.html":{}}}],["item.temperaturec",{"_index":1123,"title":{},"body":{"injectables/PdfService.html":{}}}],["item.vpd",{"_index":1124,"title":{},"body":{"injectables/PdfService.html":{}}}],["items",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{}}}],["items')@commonresponses()@apigetresponses",{"_index":332,"title":{},"body":{"classes/BaseController.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{}}}],["join",{"_index":1076,"title":{},"body":{"injectables/PdfService.html":{}}}],["join(process.cwd",{"_index":1062,"title":{},"body":{"injectables/PdfService.html":{}}}],["js",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{},"dependencies.html":{},"index.html":{}}}],["json",{"_index":1128,"title":{},"body":{"injectables/PdfService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["json.parse(reportjson",{"_index":1134,"title":{},"body":{"injectables/PdfService.html":{}}}],["json.stringify(data",{"_index":1253,"title":{},"body":{"injectables/RelayService.html":{}}}],["json.stringify(reportjsonresponse.template",{"_index":1115,"title":{},"body":{"injectables/PdfService.html":{}}}],["jwt",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"classes/LoginDto.html":{},"classes/UserAuthDto.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":96,"title":{"guards/JwtAuthGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtservice",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["key",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CwDevicesController.html":{},"guards/JwtAuthGuard.html":{},"controllers/PdfController.html":{},"guards/SupabaseAuthGuard.html":{}}}],["key'])@apibearerauth('jwt')@useguards(supabaseauthguard",{"_index":1007,"title":{},"body":{"controllers/PdfController.html":{}}}],["kingdom",{"_index":855,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["kingsway",{"_index":850,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["last_login",{"_index":515,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["lat",{"_index":492,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["later",{"_index":1111,"title":{},"body":{"injectables/PdfService.html":{}}}],["legend",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/LocationModule.html":{},"modules/PdfModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/ReportsTemplatesModule.html":{},"modules/SupabaseModule.html":{},"overview.html":{}}}],["length",{"_index":1025,"title":{},"body":{"controllers/PdfController.html":{}}}],["license",{"_index":1465,"title":{},"body":{"properties.html":{}}}],["light.ttf",{"_index":1074,"title":{},"body":{"injectables/PdfService.html":{}}}],["limit",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["line_notify_token",{"_index":516,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["link",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseRepository.html":{}}}],["linkages",{"_index":568,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["links",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{}}}],["literal",{"_index":822,"title":{},"body":{"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/ReportTemplatesRepository.html":{},"miscellaneous/typealiases.html":{}}}],["location",{"_index":846,"title":{"classes/Location.html":{}},"body":{"controllers/GeolocationController.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"coverage.html":{}}}],["location.controller",{"_index":984,"title":{},"body":{"modules/LocationModule.html":{}}}],["location.dto",{"_index":971,"title":{},"body":{"controllers/LocationController.html":{},"injectables/LocationService.html":{},"classes/UpdateLocationDto.html":{}}}],["location.dto.ts",{"_index":491,"title":{},"body":{"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{},"coverage.html":{}}}],["location.dto.ts:11",{"_index":496,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["location.dto.ts:15",{"_index":498,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["location.dto.ts:19",{"_index":500,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["location.dto.ts:23",{"_index":502,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["location.dto.ts:27",{"_index":504,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["location.dto.ts:7",{"_index":503,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["location.service",{"_index":970,"title":{},"body":{"controllers/LocationController.html":{},"modules/LocationModule.html":{}}}],["location/location.module",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["locationcontroller",{"_index":967,"title":{"controllers/LocationController.html":{}},"body":{"controllers/LocationController.html":{},"modules/LocationModule.html":{},"coverage.html":{}}}],["locationmodule",{"_index":70,"title":{"modules/LocationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LocationModule.html":{},"modules.html":{},"overview.html":{}}}],["locationrepository",{"_index":982,"title":{"injectables/LocationRepository.html":{}},"body":{"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"coverage.html":{},"overview.html":{}}}],["locationrow",{"_index":988,"title":{},"body":{"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["locationservice",{"_index":969,"title":{"injectables/LocationService.html":{}},"body":{"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"coverage.html":{},"overview.html":{}}}],["locationsrow",{"_index":972,"title":{},"body":{"controllers/LocationController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["logger",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["logic",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseRepository.html":{}}}],["login",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(@body",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{}}}],["logindto",{"_index":163,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"classes/UserAuthDto.html":{},"coverage.html":{}}}],["logindto.password",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["london",{"_index":851,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["long",{"_index":493,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["lt",{"_index":1224,"title":{},"body":{"injectables/RelayService.html":{}}}],["maintainability",{"_index":1438,"title":{},"body":{"index.html":{}}}],["makettiapirequest",{"_index":1211,"title":{},"body":{"injectables/RelayService.html":{}}}],["makettiapirequest(url",{"_index":1217,"title":{},"body":{"injectables/RelayService.html":{}}}],["management",{"_index":646,"title":{},"body":{"controllers/CwDevicesController.html":{}}}],["manager",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/HttpCacheInterceptor.html":{},"dependencies.html":{}}}],["map",{"_index":1110,"title":{},"body":{"injectables/PdfService.html":{}}}],["map_zoom",{"_index":494,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["matching",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDatumDto.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"classes/Datum.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"controllers/PdfController.html":{},"classes/PdfDTO.html":{},"modules/PdfModule.html":{},"injectables/PdfService.html":{},"classes/Profile.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"modules/RelayModule.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"controllers/ReportsTemplatesController.html":{},"modules/ReportsTemplatesModule.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateReportDto.html":{},"classes/UserAuthDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.random",{"_index":49,"title":{},"body":{"controllers/AppController.html":{}}}],["max",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["maximum",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["medium.ttf",{"_index":1067,"title":{},"body":{"injectables/PdfService.html":{}}}],["mediumitalic.ttf",{"_index":1071,"title":{},"body":{"injectables/PdfService.html":{}}}],["memberof",{"_index":1329,"title":{},"body":{"injectables/SupabaseService.html":{}}}],["message",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GeolocationController.html":{},"controllers/RelayController.html":{}}}],["metadata",{"_index":1411,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":1246,"title":{},"body":{"injectables/RelayService.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"controllers/GeolocationController.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"controllers/PdfController.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"controllers/ReportsTemplatesController.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{}}}],["miscellaneous",{"_index":1415,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mocking",{"_index":388,"title":{},"body":{"classes/BaseRepository.html":{}}}],["module",{"_index":52,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/HealthModule.html":{},"modules/LocationModule.html":{},"modules/PdfModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/ReportsTemplatesModule.html":{},"modules/SupabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/HealthModule.html":{},"modules/LocationModule.html":{},"modules/PdfModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/ReportsTemplatesModule.html":{},"modules/SupabaseModule.html":{},"overview.html":{}}}],["modules",{"_index":54,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/HealthModule.html":{},"modules/LocationModule.html":{},"modules/PdfModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/ReportsTemplatesModule.html":{},"modules/SupabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["name",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateReportTemplateDto.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/GeolocationService.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"controllers/PdfController.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{},"miscellaneous/functions.html":{}}}],["needed",{"_index":1240,"title":{},"body":{"injectables/RelayService.html":{}}}],["nest",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["nestjs/axios",{"_index":894,"title":{},"body":{"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/cache",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/HttpCacheInterceptor.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HttpCacheInterceptor.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"controllers/PdfController.html":{},"modules/PdfModule.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"modules/RelayModule.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"controllers/ReportsTemplatesController.html":{},"modules/ReportsTemplatesModule.html":{},"injectables/ReportsTemplatesService.html":{},"guards/SupabaseAuthGuard.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/RelayService.html":{},"injectables/SupabaseService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"guards/JwtAuthGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":1387,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":1389,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":1390,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"controllers/GeolocationController.html":{},"controllers/LocationController.html":{},"classes/LoginDto.html":{},"controllers/PdfController.html":{},"classes/PdfDTO.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"controllers/RelayController.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateReportDto.html":{},"classes/UserAuthDto.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":883,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"dependencies.html":{}}}],["new",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"injectables/GeolocationService.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/PdfService.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"guards/SupabaseAuthGuard.html":{},"coverage.html":{}}}],["node.js",{"_index":1448,"title":{},"body":{"index.html":{}}}],["normal",{"_index":1061,"title":{},"body":{"injectables/PdfService.html":{}}}],["notacceptableexception",{"_index":778,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["notacceptableexception('device",{"_index":793,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["notfoundexception",{"_index":779,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["notfoundexception('device",{"_index":797,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["notimplementedexception",{"_index":780,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["noto_sans_jp",{"_index":1072,"title":{},"body":{"injectables/PdfService.html":{}}}],["now",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["null",{"_index":422,"title":{},"body":{"classes/BaseRepository.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"injectables/DataRepository.html":{},"guards/JwtAuthGuard.html":{},"injectables/ProfileRepository.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateReportTemplateDto.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"interfaces/IRepositoryBase.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"miscellaneous/typealiases.html":{}}}],["object",{"_index":1093,"title":{},"body":{"injectables/PdfService.html":{},"guards/SupabaseAuthGuard.html":{}}}],["offcommand",{"_index":1229,"title":{},"body":{"injectables/RelayService.html":{}}}],["once",{"_index":1135,"title":{},"body":{"injectables/PdfService.html":{}}}],["oncommand",{"_index":1227,"title":{},"body":{"injectables/RelayService.html":{}}}],["open",{"_index":1186,"title":{},"body":{"controllers/RelayController.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["operationid",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["operations",{"_index":383,"title":{},"body":{"classes/BaseRepository.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"injectables/SupabaseService.html":{}}}],["optional",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"injectables/GeolocationService.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"controllers/PdfController.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":672,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"injectables/PdfService.html":{}}}],["order('created_at",{"_index":748,"title":{},"body":{"injectables/DataRepository.html":{}}}],["out",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/LocationModule.html":{},"modules/PdfModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/ReportsTemplatesModule.html":{},"modules/SupabaseModule.html":{},"overview.html":{}}}],["overview",{"_index":1426,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owner",{"_index":795,"title":{},"body":{"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"interfaces/FindAllParams.html":{}}}],["owner.dto",{"_index":560,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"classes/UpdateDeviceOwnerDto.html":{}}}],["owner.dto.ts",{"_index":477,"title":{},"body":{"classes/CreateDeviceOwnerDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"coverage.html":{}}}],["owner.dto.ts:11",{"_index":481,"title":{},"body":{"classes/CreateDeviceOwnerDto.html":{}}}],["owner.dto.ts:15",{"_index":482,"title":{},"body":{"classes/CreateDeviceOwnerDto.html":{}}}],["owner.dto.ts:19",{"_index":483,"title":{},"body":{"classes/CreateDeviceOwnerDto.html":{}}}],["owner.dto.ts:7",{"_index":480,"title":{},"body":{"classes/CreateDeviceOwnerDto.html":{}}}],["owner_id",{"_index":478,"title":{},"body":{"classes/CreateDeviceOwnerDto.html":{},"classes/CreateLocationDto.html":{}}}],["owners",{"_index":550,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["package",{"_index":268,"title":{"dependencies.html":{},"properties.html":{}},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["pagination",{"_index":709,"title":{},"body":{"controllers/DataController.html":{}}}],["pagination'})@apiquery({name",{"_index":678,"title":{},"body":{"controllers/DataController.html":{}}}],["param",{"_index":344,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseRepository.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/DataController.html":{},"controllers/LocationController.html":{},"controllers/ProfilesController.html":{},"injectables/SupabaseService.html":{}}}],["parameters",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/GeolocationService.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"controllers/PdfController.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":766,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["parse",{"_index":1127,"title":{},"body":{"injectables/PdfService.html":{}}}],["parseint(byte",{"_index":1262,"title":{},"body":{"injectables/RelayService.html":{}}}],["partial",{"_index":401,"title":{},"body":{"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/IRepositoryBase.html":{},"injectables/LocationRepository.html":{},"injectables/ReportTemplatesRepository.html":{},"interfaces/RepositoryInterface.html":{}}}],["partialtype",{"_index":1333,"title":{},"body":{"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateReportDto.html":{}}}],["partialtype(createdatumdto",{"_index":1332,"title":{},"body":{"classes/UpdateDatumDto.html":{}}}],["partialtype(createdevicedto",{"_index":1335,"title":{},"body":{"classes/UpdateDeviceDto.html":{}}}],["partialtype(createdeviceownerdto",{"_index":1337,"title":{},"body":{"classes/UpdateDeviceOwnerDto.html":{}}}],["partialtype(createdevicetypedto",{"_index":1339,"title":{},"body":{"classes/UpdateDeviceTypeDto.html":{}}}],["partialtype(createlocationdto",{"_index":1341,"title":{},"body":{"classes/UpdateLocationDto.html":{}}}],["partialtype(createprofiledto",{"_index":1344,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["partialtype(createreporttemplatedto",{"_index":1346,"title":{},"body":{"classes/UpdateReportDto.html":{}}}],["partialupdate",{"_index":317,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{}}}],["partialupdate(@param('id",{"_index":364,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{}}}],["partialupdate(id",{"_index":339,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{}}}],["passport",{"_index":1407,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/UserAuthDto.html":{}}}],["password'})@isstring",{"_index":997,"title":{},"body":{"classes/LoginDto.html":{}}}],["patch",{"_index":342,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/DataController.html":{},"controllers/LocationController.html":{},"controllers/ProfilesController.html":{}}}],["patch(':id",{"_index":362,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/DataController.html":{}}}],["patch(':id')@apicommonauth('partially",{"_index":340,"title":{},"body":{"classes/BaseController.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{}}}],["path",{"_index":1077,"title":{},"body":{"injectables/PdfService.html":{}}}],["payload",{"_index":1237,"title":{},"body":{"injectables/RelayService.html":{}}}],["payment",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RelayController.html":{}}}],["pdf",{"_index":1003,"title":{},"body":{"controllers/PdfController.html":{}}}],["pdf.controller",{"_index":1039,"title":{},"body":{"modules/PdfModule.html":{}}}],["pdf.controller.ts",{"_index":1010,"title":{},"body":{"controllers/PdfController.html":{}}}],["pdf.service",{"_index":1013,"title":{},"body":{"controllers/PdfController.html":{},"modules/PdfModule.html":{}}}],["pdf/pdf.module",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["pdfbuffer",{"_index":1017,"title":{},"body":{"controllers/PdfController.html":{}}}],["pdfbuffer.length",{"_index":1026,"title":{},"body":{"controllers/PdfController.html":{}}}],["pdfcontroller",{"_index":1001,"title":{"controllers/PdfController.html":{}},"body":{"controllers/PdfController.html":{},"modules/PdfModule.html":{},"coverage.html":{}}}],["pdfdoc",{"_index":1096,"title":{},"body":{"injectables/PdfService.html":{}}}],["pdfdoc.end",{"_index":1106,"title":{},"body":{"injectables/PdfService.html":{}}}],["pdfdoc.on('data",{"_index":1100,"title":{},"body":{"injectables/PdfService.html":{}}}],["pdfdoc.on('end",{"_index":1103,"title":{},"body":{"injectables/PdfService.html":{}}}],["pdfdoc.on('error",{"_index":1105,"title":{},"body":{"injectables/PdfService.html":{}}}],["pdfdto",{"_index":1028,"title":{"classes/PdfDTO.html":{}},"body":{"classes/PdfDTO.html":{},"coverage.html":{}}}],["pdfmake",{"_index":1079,"title":{},"body":{"injectables/PdfService.html":{},"dependencies.html":{}}}],["pdfmake/build/pdfmake",{"_index":1081,"title":{},"body":{"injectables/PdfService.html":{}}}],["pdfmodule",{"_index":71,"title":{"modules/PdfModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PdfModule.html":{},"modules.html":{},"overview.html":{}}}],["pdfprinter",{"_index":1078,"title":{},"body":{"injectables/PdfService.html":{}}}],["pdfprinter(this.fonts",{"_index":1090,"title":{},"body":{"injectables/PdfService.html":{}}}],["pdfservice",{"_index":1012,"title":{"injectables/PdfService.html":{}},"body":{"controllers/PdfController.html":{},"modules/PdfModule.html":{},"injectables/PdfService.html":{},"coverage.html":{},"overview.html":{}}}],["perform",{"_index":381,"title":{},"body":{"classes/BaseRepository.html":{}}}],["permission_level",{"_index":479,"title":{},"body":{"classes/CreateDeviceOwnerDto.html":{}}}],["pnpm",{"_index":1452,"title":{},"body":{"index.html":{}}}],["possibly",{"_index":389,"title":{},"body":{"classes/BaseRepository.html":{}}}],["post",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/DataController.html":{},"controllers/LocationController.html":{},"controllers/ProfilesController.html":{},"injectables/RelayService.html":{}}}],["post('login",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@apicommonauth('create",{"_index":324,"title":{},"body":{"classes/BaseController.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{}}}],["prefix",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"controllers/GeolocationController.html":{},"controllers/HealthController.html":{},"controllers/LocationController.html":{},"controllers/PdfController.html":{},"controllers/ProfilesController.html":{},"controllers/RelayController.html":{},"controllers/ReportsTemplatesController.html":{}}}],["prepare",{"_index":387,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/PdfService.html":{}}}],["printer",{"_index":1089,"title":{},"body":{"injectables/PdfService.html":{}}}],["printer.createpdfkitdocument(docdefinition",{"_index":1097,"title":{},"body":{"injectables/PdfService.html":{}}}],["priority",{"_index":1242,"title":{},"body":{"injectables/RelayService.html":{}}}],["private",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseRepository.html":{},"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"controllers/HealthController.html":{},"guards/JwtAuthGuard.html":{},"injectables/PdfService.html":{},"injectables/RelayService.html":{},"injectables/SupabaseService.html":{}}}],["process",{"_index":414,"title":{},"body":{"classes/BaseRepository.html":{}}}],["process.env.dragino_api_key",{"_index":1248,"title":{},"body":{"injectables/RelayService.html":{}}}],["process.env.tti_base_url}/api/v3/as/applications/${appid}/devices/${deviceid}/down/replace",{"_index":1226,"title":{},"body":{"injectables/RelayService.html":{}}}],["profile",{"_index":572,"title":{"classes/Profile.html":{}},"body":{"controllers/CwDeviceOwnersController.html":{},"classes/Profile.html":{},"coverage.html":{}}}],["profile.dto",{"_index":1174,"title":{},"body":{"injectables/ProfilesService.html":{},"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts",{"_index":510,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["profile.dto.ts:10",{"_index":522,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:15",{"_index":524,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:19",{"_index":526,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:23",{"_index":527,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:27",{"_index":528,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:31",{"_index":530,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:35",{"_index":531,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:39",{"_index":532,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:43",{"_index":533,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:47",{"_index":535,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:6",{"_index":529,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profilerepository",{"_index":1141,"title":{"injectables/ProfileRepository.html":{}},"body":{"injectables/ProfileRepository.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"coverage.html":{},"overview.html":{}}}],["profilerow",{"_index":1145,"title":{},"body":{"injectables/ProfileRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["profiles",{"_index":1152,"title":{},"body":{"controllers/ProfilesController.html":{}}}],["profiles.controller",{"_index":1167,"title":{},"body":{"modules/ProfilesModule.html":{}}}],["profiles.service",{"_index":1157,"title":{},"body":{"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{}}}],["profiles/profiles.module",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["profilescontroller",{"_index":1150,"title":{"controllers/ProfilesController.html":{}},"body":{"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"coverage.html":{}}}],["profilesmodule",{"_index":72,"title":{"modules/ProfilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfilesModule.html":{},"modules.html":{},"overview.html":{}}}],["profilesrepository",{"_index":1172,"title":{},"body":{"injectables/ProfilesService.html":{}}}],["profilesservice",{"_index":1156,"title":{"injectables/ProfilesService.html":{}},"body":{"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"coverage.html":{},"overview.html":{}}}],["promise",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"controllers/PdfController.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{}}}],["promise((resolve",{"_index":1094,"title":{},"body":{"injectables/PdfService.html":{}}}],["properties",{"_index":230,"title":{"properties.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/BaseServiceInterface.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"interfaces/FindAllParams.html":{},"classes/LoginDto.html":{},"classes/PdfDTO.html":{},"injectables/PdfService.html":{},"injectables/SupabaseService.html":{},"classes/UserAuthDto.html":{},"properties.html":{}}}],["protected",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseRepository.html":{}}}],["provide",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":1311,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["providers",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/LocationModule.html":{},"modules/PdfModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/ReportsTemplatesModule.html":{},"modules/SupabaseModule.html":{},"overview.html":{}}}],["public",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"injectables/PdfService.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@get('/')@throttle({default",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["public()@get('control')@apiquery({name",{"_index":1182,"title":{},"body":{"controllers/RelayController.html":{}}}],["public()@post('login')@throttle({default",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{}}}],["public.decorator",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{},"guards/JwtAuthGuard.html":{}}}],["publicschema",{"_index":1358,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["pull",{"_index":1436,"title":{},"body":{"index.html":{}}}],["purposes",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["put",{"_index":343,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{}}}],["put(':id",{"_index":366,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{}}}],["put(':id')@apicommonauth('fully",{"_index":336,"title":{},"body":{"classes/BaseController.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{}}}],["query",{"_index":693,"title":{},"body":{"controllers/DataController.html":{},"controllers/PdfController.html":{},"controllers/RelayController.html":{}}}],["query('deveui",{"_index":710,"title":{},"body":{"controllers/DataController.html":{},"controllers/PdfController.html":{}}}],["query('order",{"_index":713,"title":{},"body":{"controllers/DataController.html":{}}}],["query('skip",{"_index":711,"title":{},"body":{"controllers/DataController.html":{}}}],["query('take",{"_index":712,"title":{},"body":{"controllers/DataController.html":{}}}],["queued",{"_index":1199,"title":{},"body":{"controllers/RelayController.html":{}}}],["queued'})@apiresponse({status",{"_index":1190,"title":{},"body":{"controllers/RelayController.html":{}}}],["range(skip",{"_index":747,"title":{},"body":{"injectables/DataRepository.html":{}}}],["readonly",{"_index":355,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"controllers/PdfController.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"controllers/ReportsTemplatesController.html":{},"injectables/ReportsTemplatesService.html":{}}}],["record",{"_index":754,"title":{},"body":{"injectables/DataRepository.html":{}}}],["records",{"_index":684,"title":{},"body":{"controllers/DataController.html":{}}}],["reflect",{"_index":1410,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":935,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["register",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["regular.ttf",{"_index":1065,"title":{},"body":{"injectables/PdfService.html":{}}}],["reject",{"_index":1095,"title":{},"body":{"injectables/PdfService.html":{}}}],["related",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{}}}],["relay",{"_index":1179,"title":{},"body":{"controllers/RelayController.html":{}}}],["relay.controller",{"_index":1208,"title":{},"body":{"modules/RelayModule.html":{}}}],["relay.service",{"_index":1193,"title":{},"body":{"controllers/RelayController.html":{},"modules/RelayModule.html":{}}}],["relay/relay.module",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["relaycontroller",{"_index":1177,"title":{"controllers/RelayController.html":{}},"body":{"controllers/RelayController.html":{},"modules/RelayModule.html":{},"coverage.html":{}}}],["relaymodule",{"_index":73,"title":{"modules/RelayModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RelayModule.html":{},"modules.html":{},"overview.html":{}}}],["relayon",{"_index":1201,"title":{},"body":{"controllers/RelayController.html":{}}}],["relayservice",{"_index":1192,"title":{"injectables/RelayService.html":{}},"body":{"controllers/RelayController.html":{},"modules/RelayModule.html":{},"injectables/RelayService.html":{},"coverage.html":{},"overview.html":{}}}],["relaystate",{"_index":1181,"title":{},"body":{"controllers/RelayController.html":{},"miscellaneous/enumerations.html":{}}}],["relaystate.open",{"_index":1202,"title":{},"body":{"controllers/RelayController.html":{}}}],["remove",{"_index":916,"title":{},"body":{"interfaces/IRepositoryBase.html":{}}}],["remove(@param('id",{"_index":722,"title":{},"body":{"controllers/DataController.html":{}}}],["remove(id",{"_index":923,"title":{},"body":{"interfaces/IRepositoryBase.html":{},"interfaces/RepositoryInterface.html":{}}}],["report",{"_index":1032,"title":{},"body":{"classes/PdfDTO.html":{},"injectables/PdfService.html":{}}}],["report.content[2].table.body",{"_index":1136,"title":{},"body":{"injectables/PdfService.html":{}}}],["report.content[2].table.body[0",{"_index":1137,"title":{},"body":{"injectables/PdfService.html":{}}}],["report_template.dto",{"_index":1296,"title":{},"body":{"injectables/ReportsTemplatesService.html":{},"classes/UpdateReportDto.html":{}}}],["report_template.dto.ts",{"_index":541,"title":{},"body":{"classes/CreateReportTemplateDto.html":{},"classes/UpdateReportDto.html":{},"coverage.html":{}}}],["report_template.dto.ts:10",{"_index":543,"title":{},"body":{"classes/CreateReportTemplateDto.html":{}}}],["report_template.dto.ts:14",{"_index":545,"title":{},"body":{"classes/CreateReportTemplateDto.html":{}}}],["report_template.dto.ts:18",{"_index":544,"title":{},"body":{"classes/CreateReportTemplateDto.html":{}}}],["report_template.dto.ts:22",{"_index":546,"title":{},"body":{"classes/CreateReportTemplateDto.html":{}}}],["report_template.dto.ts:6",{"_index":542,"title":{},"body":{"classes/CreateReportTemplateDto.html":{}}}],["reportdata",{"_index":1086,"title":{},"body":{"injectables/PdfService.html":{}}}],["reportjson",{"_index":1058,"title":{},"body":{"injectables/PdfService.html":{}}}],["reportjson.replace(/{{dev_eui}}/g",{"_index":1132,"title":{},"body":{"injectables/PdfService.html":{}}}],["reportjsonresponse",{"_index":1113,"title":{},"body":{"injectables/PdfService.html":{}}}],["reports",{"_index":1274,"title":{},"body":{"controllers/ReportsTemplatesController.html":{}}}],["reports_templates",{"_index":1270,"title":{},"body":{"injectables/ReportTemplatesRepository.html":{}}}],["reports_templates.controller",{"_index":1287,"title":{},"body":{"modules/ReportsTemplatesModule.html":{}}}],["reports_templates.service",{"_index":1278,"title":{},"body":{"controllers/ReportsTemplatesController.html":{},"modules/ReportsTemplatesModule.html":{}}}],["reports_templates/reports_templates.module",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["reportstemplatescontroller",{"_index":1272,"title":{"controllers/ReportsTemplatesController.html":{}},"body":{"controllers/ReportsTemplatesController.html":{},"modules/ReportsTemplatesModule.html":{},"coverage.html":{}}}],["reportstemplatesmodule",{"_index":74,"title":{"modules/ReportsTemplatesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PdfModule.html":{},"modules/ReportsTemplatesModule.html":{},"modules.html":{},"overview.html":{}}}],["reportstemplatesrow",{"_index":1269,"title":{},"body":{"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["reportstemplatesservice",{"_index":1050,"title":{"injectables/ReportsTemplatesService.html":{}},"body":{"injectables/PdfService.html":{},"controllers/ReportsTemplatesController.html":{},"modules/ReportsTemplatesModule.html":{},"injectables/ReportsTemplatesService.html":{},"coverage.html":{},"overview.html":{}}}],["reportstring",{"_index":1085,"title":{},"body":{"injectables/PdfService.html":{}}}],["reporttemplatesrepository",{"_index":1265,"title":{"injectables/ReportTemplatesRepository.html":{}},"body":{"injectables/ReportTemplatesRepository.html":{},"modules/ReportsTemplatesModule.html":{},"injectables/ReportsTemplatesService.html":{},"coverage.html":{},"overview.html":{}}}],["reporttemplatesservice",{"_index":1280,"title":{},"body":{"controllers/ReportsTemplatesController.html":{}}}],["repositories",{"_index":380,"title":{},"body":{"classes/BaseRepository.html":{}}}],["repositories/cw_devices.repository",{"_index":664,"title":{},"body":{"injectables/CwDevicesService.html":{}}}],["repository",{"_index":377,"title":{},"body":{"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/LocationService.html":{}}}],["repositoryinterface",{"_index":927,"title":{"interfaces/RepositoryInterface.html":{}},"body":{"interfaces/IRepositoryBase.html":{},"interfaces/RepositoryInterface.html":{},"coverage.html":{}}}],["req",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DataController.html":{},"controllers/GeolocationController.html":{},"controllers/PdfController.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{}}}],["req.headers['authorization",{"_index":1161,"title":{},"body":{"controllers/ProfilesController.html":{}}}],["req.user",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DataController.html":{}}}],["req.user.email",{"_index":715,"title":{},"body":{"controllers/DataController.html":{}}}],["req.user.id",{"_index":1016,"title":{},"body":{"controllers/PdfController.html":{}}}],["request",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{},"injectables/HttpCacheInterceptor.html":{},"guards/JwtAuthGuard.html":{},"controllers/RelayController.html":{},"guards/SupabaseAuthGuard.html":{},"index.html":{}}}],["request'})@apiresponse({status",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RelayController.html":{}}}],["request.headers.authorization",{"_index":963,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["request.headers['authorization",{"_index":1310,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["request.headers['x",{"_index":958,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["request.path.id",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.user",{"_index":956,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["request.user.id",{"_index":961,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["required",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"injectables/PdfService.html":{},"controllers/RelayController.html":{},"index.html":{}}}],["required'})@apiresponse({status",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RelayController.html":{}}}],["res",{"_index":1009,"title":{},"body":{"controllers/PdfController.html":{}}}],["res.send(pdfbuffer",{"_index":1027,"title":{},"body":{"controllers/PdfController.html":{}}}],["res.set",{"_index":1019,"title":{},"body":{"controllers/PdfController.html":{}}}],["reset",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/LocationModule.html":{},"modules/PdfModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/ReportsTemplatesModule.html":{},"modules/SupabaseModule.html":{},"overview.html":{}}}],["resolve(buffer.concat(chunks",{"_index":1104,"title":{},"body":{"injectables/PdfService.html":{}}}],["response",{"_index":867,"title":{},"body":{"injectables/GeolocationService.html":{},"controllers/PdfController.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{}}}],["response.json",{"_index":873,"title":{},"body":{"injectables/GeolocationService.html":{},"injectables/RelayService.html":{}}}],["response.ok",{"_index":869,"title":{},"body":{"injectables/GeolocationService.html":{},"injectables/RelayService.html":{}}}],["response.statustext",{"_index":872,"title":{},"body":{"injectables/GeolocationService.html":{},"injectables/RelayService.html":{}}}],["responsedata",{"_index":1256,"title":{},"body":{"injectables/RelayService.html":{}}}],["responses.decorator",{"_index":350,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{}}}],["responses.decorator.ts",{"_index":1371,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["results",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDatumDto.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"classes/Datum.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"controllers/PdfController.html":{},"classes/PdfDTO.html":{},"modules/PdfModule.html":{},"injectables/PdfService.html":{},"classes/Profile.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"modules/RelayModule.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"controllers/ReportsTemplatesController.html":{},"modules/ReportsTemplatesModule.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateReportDto.html":{},"classes/UserAuthDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":676,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataRepository.html":{}}}],["retry",{"_index":394,"title":{},"body":{"classes/BaseRepository.html":{}}}],["return",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"injectables/HttpCacheInterceptor.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"controllers/ReportsTemplatesController.html":{},"injectables/ReportsTemplatesService.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{}}}],["returns",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"controllers/GeolocationController.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"controllers/PdfController.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"controllers/ReportsTemplatesController.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{}}}],["rigistered",{"_index":704,"title":{},"body":{"controllers/DataController.html":{}}}],["robbin",{"_index":393,"title":{},"body":{"classes/BaseRepository.html":{}}}],["roboto",{"_index":1060,"title":{},"body":{"injectables/PdfService.html":{}}}],["round",{"_index":392,"title":{},"body":{"classes/BaseRepository.html":{}}}],["route",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["routes",{"_index":909,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["row",{"_index":1139,"title":{},"body":{"injectables/PdfService.html":{}}}],["rows",{"_index":1116,"title":{},"body":{"injectables/PdfService.html":{}}}],["rxjs",{"_index":1413,"title":{},"body":{"dependencies.html":{}}}],["seconds",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["see",{"_index":415,"title":{},"body":{"classes/BaseRepository.html":{}}}],["select",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseRepository.html":{},"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/ProfileRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["senddownlink",{"_index":1212,"title":{},"body":{"injectables/RelayService.html":{}}}],["senddownlink(state",{"_index":1219,"title":{},"body":{"injectables/RelayService.html":{}}}],["sending",{"_index":1254,"title":{},"body":{"injectables/RelayService.html":{}}}],["sent",{"_index":1258,"title":{},"body":{"injectables/RelayService.html":{}}}],["serial_number",{"_index":461,"title":{},"body":{"classes/CreateDeviceDto.html":{},"classes/CreateReportTemplateDto.html":{}}}],["serve",{"_index":1014,"title":{},"body":{"controllers/PdfController.html":{}}}],["server",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{}}}],["serves",{"_index":1427,"title":{},"body":{"index.html":{}}}],["service",{"_index":321,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"modules/CwDeviceOwnersModule.html":{}}}],["session",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["session.session?.access_token",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["set",{"_index":1185,"title":{},"body":{"controllers/RelayController.html":{}}}],["setmetadata(is_public_key",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sign",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinwithemail",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinwithemail(email",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["single",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"controllers/LocationController.html":{},"injectables/ProfileRepository.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/SupabaseService.html":{}}}],["skip",{"_index":670,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"injectables/PdfService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDatumDto.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"classes/Datum.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"controllers/PdfController.html":{},"classes/PdfDTO.html":{},"modules/PdfModule.html":{},"injectables/PdfService.html":{},"classes/Profile.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"modules/RelayModule.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"controllers/ReportsTemplatesController.html":{},"modules/ReportsTemplatesModule.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateReportDto.html":{},"classes/UserAuthDto.html":{}}}],["specific",{"_index":682,"title":{},"body":{"controllers/DataController.html":{}}}],["src/.../common",{"_index":1419,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../database",{"_index":1470,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":1420,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../public.decorator.ts",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../relay.controller.ts",{"_index":1417,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:19",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":134,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":135,"title":{},"body":{"injectables/AppService.html":{}}}],["src/assets/fonts/noto_sans_jp/static/notosansjp",{"_index":1073,"title":{},"body":{"injectables/PdfService.html":{}}}],["src/assets/fonts/roboto/roboto",{"_index":1064,"title":{},"body":{"injectables/PdfService.html":{}}}],["src/auth/auth.controller.ts",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:35",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:48",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module",{"_index":621,"title":{},"body":{"modules/CwDeviceTypeModule.html":{},"modules/ReportsTemplatesModule.html":{}}}],["src/auth/auth.module.ts",{"_index":227,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service",{"_index":861,"title":{},"body":{"modules/GeolocationModule.html":{},"modules/PdfModule.html":{}}}],["src/auth/auth.service.ts",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:22",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:34",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:57",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:8",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dtos/userauth.dto.ts",{"_index":993,"title":{},"body":{"classes/LoginDto.html":{},"classes/UserAuthDto.html":{},"coverage.html":{}}}],["src/auth/dtos/userauth.dto.ts:14",{"_index":996,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dtos/userauth.dto.ts:18",{"_index":998,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dtos/userauth.dto.ts:8",{"_index":1348,"title":{},"body":{"classes/UserAuthDto.html":{}}}],["src/auth/guards/jwt",{"_index":929,"title":{},"body":{"guards/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/supabase.guard",{"_index":840,"title":{},"body":{"controllers/GeolocationController.html":{},"controllers/PdfController.html":{}}}],["src/auth/guards/supabase.guard.ts",{"_index":1304,"title":{},"body":{"guards/SupabaseAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/supabase.guard.ts:10",{"_index":1307,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["src/auth/guards/supabase.guard.ts:7",{"_index":1306,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["src/auth/public.decorator",{"_index":884,"title":{},"body":{"controllers/HealthController.html":{},"controllers/RelayController.html":{}}}],["src/auth/public.decorator.ts",{"_index":1365,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/bases/base.controller",{"_index":561,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{}}}],["src/bases/base.controller.ts",{"_index":312,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"coverage.html":{}}}],["src/bases/base.controller.ts:21",{"_index":320,"title":{},"body":{"classes/BaseController.html":{}}}],["src/bases/base.controller.ts:28",{"_index":333,"title":{},"body":{"classes/BaseController.html":{}}}],["src/bases/base.controller.ts:35",{"_index":326,"title":{},"body":{"classes/BaseController.html":{}}}],["src/bases/base.controller.ts:42",{"_index":341,"title":{},"body":{"classes/BaseController.html":{}}}],["src/bases/base.controller.ts:49",{"_index":338,"title":{},"body":{"classes/BaseController.html":{}}}],["src/bases/base.controller.ts:56",{"_index":330,"title":{},"body":{"classes/BaseController.html":{}}}],["src/bases/base.service",{"_index":598,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/LocationService.html":{},"injectables/ReportsTemplatesService.html":{}}}],["src/bases/base.service.ts",{"_index":427,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"coverage.html":{}}}],["src/bases/base.service.ts:10",{"_index":430,"title":{},"body":{"classes/BaseService.html":{}}}],["src/bases/base.service.ts:13",{"_index":434,"title":{},"body":{"classes/BaseService.html":{}}}],["src/bases/base.service.ts:17",{"_index":435,"title":{},"body":{"classes/BaseService.html":{}}}],["src/bases/base.service.ts:21",{"_index":432,"title":{},"body":{"classes/BaseService.html":{}}}],["src/bases/base.service.ts:25",{"_index":437,"title":{},"body":{"classes/BaseService.html":{}}}],["src/bases/base.service.ts:29",{"_index":436,"title":{},"body":{"classes/BaseService.html":{}}}],["src/bases/base.service.ts:33",{"_index":433,"title":{},"body":{"classes/BaseService.html":{}}}],["src/bases/base.service.ts:4",{"_index":451,"title":{},"body":{"interfaces/BaseServiceInterface-1.html":{}}}],["src/bases/base.service.ts:5",{"_index":450,"title":{},"body":{"interfaces/BaseServiceInterface-1.html":{}}}],["src/bases/base.service.ts:6",{"_index":453,"title":{},"body":{"interfaces/BaseServiceInterface-1.html":{}}}],["src/bases/base.service.ts:7",{"_index":452,"title":{},"body":{"interfaces/BaseServiceInterface-1.html":{}}}],["src/common/common",{"_index":352,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/database",{"_index":563,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/ProfileRepository.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/http",{"_index":897,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{},"coverage.html":{}}}],["src/cw_device_owners/cw_device_owners.controller.ts",{"_index":548,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"coverage.html":{}}}],["src/cw_device_owners/cw_device_owners.module",{"_index":1042,"title":{},"body":{"modules/PdfModule.html":{}}}],["src/cw_device_owners/cw_device_owners.module.ts",{"_index":582,"title":{},"body":{"modules/CwDeviceOwnersModule.html":{}}}],["src/cw_device_owners/cw_device_owners.service",{"_index":733,"title":{},"body":{"modules/DataModule.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["src/cw_device_owners/cw_device_owners.service.ts",{"_index":585,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"coverage.html":{}}}],["src/cw_device_owners/cw_device_owners.service.ts:10",{"_index":588,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{}}}],["src/cw_device_owners/cw_device_owners.service.ts:15",{"_index":590,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{}}}],["src/cw_device_owners/dto/create",{"_index":475,"title":{},"body":{"classes/CreateDeviceOwnerDto.html":{},"coverage.html":{}}}],["src/cw_device_owners/dto/update",{"_index":1336,"title":{},"body":{"classes/UpdateDeviceOwnerDto.html":{},"coverage.html":{}}}],["src/cw_device_type/cw_device_type.controller.ts",{"_index":603,"title":{},"body":{"controllers/CwDeviceTypeController.html":{},"coverage.html":{}}}],["src/cw_device_type/cw_device_type.module",{"_index":735,"title":{},"body":{"modules/DataModule.html":{},"modules/PdfModule.html":{}}}],["src/cw_device_type/cw_device_type.module.ts",{"_index":618,"title":{},"body":{"modules/CwDeviceTypeModule.html":{}}}],["src/cw_device_type/cw_device_type.service",{"_index":700,"title":{},"body":{"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["src/cw_device_type/cw_device_type.service.ts",{"_index":623,"title":{},"body":{"injectables/CwDeviceTypeService.html":{},"coverage.html":{}}}],["src/cw_device_type/cw_device_type.service.ts:14",{"_index":628,"title":{},"body":{"injectables/CwDeviceTypeService.html":{}}}],["src/cw_device_type/cw_device_type.service.ts:9",{"_index":626,"title":{},"body":{"injectables/CwDeviceTypeService.html":{}}}],["src/cw_device_type/dto/create",{"_index":485,"title":{},"body":{"classes/CreateDeviceTypeDto.html":{},"coverage.html":{}}}],["src/cw_device_type/dto/update",{"_index":1338,"title":{},"body":{"classes/UpdateDeviceTypeDto.html":{},"coverage.html":{}}}],["src/cw_devices/cw_devices.controller.ts",{"_index":634,"title":{},"body":{"controllers/CwDevicesController.html":{},"coverage.html":{}}}],["src/cw_devices/cw_devices.module",{"_index":734,"title":{},"body":{"modules/DataModule.html":{},"modules/PdfModule.html":{}}}],["src/cw_devices/cw_devices.module.ts",{"_index":654,"title":{},"body":{"modules/CwDevicesModule.html":{}}}],["src/cw_devices/cw_devices.service",{"_index":701,"title":{},"body":{"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["src/cw_devices/cw_devices.service.ts",{"_index":657,"title":{},"body":{"injectables/CwDevicesService.html":{},"coverage.html":{}}}],["src/cw_devices/cw_devices.service.ts:14",{"_index":662,"title":{},"body":{"injectables/CwDevicesService.html":{}}}],["src/cw_devices/cw_devices.service.ts:9",{"_index":660,"title":{},"body":{"injectables/CwDevicesService.html":{}}}],["src/cw_devices/dto/create",{"_index":458,"title":{},"body":{"classes/CreateDeviceDto.html":{},"coverage.html":{}}}],["src/cw_devices/dto/update",{"_index":1334,"title":{},"body":{"classes/UpdateDeviceDto.html":{},"coverage.html":{}}}],["src/data/data.controller.ts",{"_index":668,"title":{},"body":{"controllers/DataController.html":{},"coverage.html":{}}}],["src/data/data.controller.ts:32",{"_index":690,"title":{},"body":{"controllers/DataController.html":{}}}],["src/data/data.module",{"_index":1041,"title":{},"body":{"modules/PdfModule.html":{}}}],["src/data/data.module.ts",{"_index":729,"title":{},"body":{"modules/DataModule.html":{}}}],["src/data/data.service",{"_index":1040,"title":{},"body":{"modules/PdfModule.html":{},"injectables/PdfService.html":{}}}],["src/data/data.service.ts",{"_index":755,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"coverage.html":{}}}],["src/data/data.service.ts:18",{"_index":762,"title":{},"body":{"injectables/DataService.html":{}}}],["src/data/data.service.ts:30",{"_index":765,"title":{},"body":{"injectables/DataService.html":{}}}],["src/data/data.service.ts:45",{"_index":773,"title":{},"body":{"injectables/DataService.html":{}}}],["src/data/data.service.ts:51",{"_index":776,"title":{},"body":{"injectables/DataService.html":{}}}],["src/data/data.service.ts:58",{"_index":768,"title":{},"body":{"injectables/DataService.html":{}}}],["src/data/data.service.ts:66",{"_index":770,"title":{},"body":{"injectables/DataService.html":{}}}],["src/data/dto/create",{"_index":455,"title":{},"body":{"classes/CreateDatumDto.html":{},"coverage.html":{}}}],["src/data/dto/update",{"_index":1331,"title":{},"body":{"classes/UpdateDatumDto.html":{},"coverage.html":{}}}],["src/data/entities/datum.entity.ts",{"_index":800,"title":{},"body":{"classes/Datum.html":{},"coverage.html":{}}}],["src/geolocation/geolocation.controller.ts",{"_index":836,"title":{},"body":{"controllers/GeolocationController.html":{},"coverage.html":{}}}],["src/geolocation/geolocation.controller.ts:14",{"_index":839,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["src/geolocation/geolocation.module.ts",{"_index":859,"title":{},"body":{"modules/GeolocationModule.html":{}}}],["src/geolocation/geolocation.service.ts",{"_index":862,"title":{},"body":{"injectables/GeolocationService.html":{},"coverage.html":{}}}],["src/geolocation/geolocation.service.ts:6",{"_index":865,"title":{},"body":{"injectables/GeolocationService.html":{}}}],["src/health/health.controller.ts",{"_index":875,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:15",{"_index":879,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":891,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/interfaces/repositorybase.interface.ts",{"_index":914,"title":{},"body":{"interfaces/IRepositoryBase.html":{},"interfaces/RepositoryInterface.html":{},"coverage.html":{}}}],["src/interfaces/repositorybase.interface.ts:11",{"_index":1301,"title":{},"body":{"interfaces/RepositoryInterface.html":{}}}],["src/interfaces/repositorybase.interface.ts:12",{"_index":1302,"title":{},"body":{"interfaces/RepositoryInterface.html":{}}}],["src/interfaces/repositorybase.interface.ts:13",{"_index":1299,"title":{},"body":{"interfaces/RepositoryInterface.html":{}}}],["src/interfaces/repositorybase.interface.ts:14",{"_index":1303,"title":{},"body":{"interfaces/RepositoryInterface.html":{}}}],["src/interfaces/repositorybase.interface.ts:15",{"_index":1300,"title":{},"body":{"interfaces/RepositoryInterface.html":{}}}],["src/interfaces/repositorybase.interface.ts:2",{"_index":922,"title":{},"body":{"interfaces/IRepositoryBase.html":{}}}],["src/interfaces/repositorybase.interface.ts:3",{"_index":920,"title":{},"body":{"interfaces/IRepositoryBase.html":{}}}],["src/interfaces/repositorybase.interface.ts:4",{"_index":918,"title":{},"body":{"interfaces/IRepositoryBase.html":{}}}],["src/interfaces/repositorybase.interface.ts:5",{"_index":926,"title":{},"body":{"interfaces/IRepositoryBase.html":{}}}],["src/interfaces/repositorybase.interface.ts:6",{"_index":924,"title":{},"body":{"interfaces/IRepositoryBase.html":{}}}],["src/location/dto/create",{"_index":490,"title":{},"body":{"classes/CreateLocationDto.html":{},"coverage.html":{}}}],["src/location/dto/update",{"_index":1340,"title":{},"body":{"classes/UpdateLocationDto.html":{},"coverage.html":{}}}],["src/location/entities/location.entity.ts",{"_index":966,"title":{},"body":{"classes/Location.html":{},"coverage.html":{}}}],["src/location/location.controller.ts",{"_index":968,"title":{},"body":{"controllers/LocationController.html":{},"coverage.html":{}}}],["src/location/location.module.ts",{"_index":983,"title":{},"body":{"modules/LocationModule.html":{}}}],["src/location/location.service.ts",{"_index":990,"title":{},"body":{"injectables/LocationService.html":{},"coverage.html":{}}}],["src/location/location.service.ts:9",{"_index":991,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/main.ts",{"_index":1374,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/pdf/dto/pdf.dto.ts",{"_index":1029,"title":{},"body":{"classes/PdfDTO.html":{},"coverage.html":{}}}],["src/pdf/dto/pdf.dto.ts:8",{"_index":1034,"title":{},"body":{"classes/PdfDTO.html":{}}}],["src/pdf/pdf.controller.ts",{"_index":1002,"title":{},"body":{"controllers/PdfController.html":{},"coverage.html":{}}}],["src/pdf/pdf.controller.ts:17",{"_index":1008,"title":{},"body":{"controllers/PdfController.html":{}}}],["src/pdf/pdf.module.ts",{"_index":1038,"title":{},"body":{"modules/PdfModule.html":{}}}],["src/pdf/pdf.service.ts",{"_index":1044,"title":{},"body":{"injectables/PdfService.html":{},"coverage.html":{}}}],["src/pdf/pdf.service.ts:10",{"_index":1051,"title":{},"body":{"injectables/PdfService.html":{}}}],["src/pdf/pdf.service.ts:16",{"_index":1075,"title":{},"body":{"injectables/PdfService.html":{}}}],["src/pdf/pdf.service.ts:31",{"_index":1053,"title":{},"body":{"injectables/PdfService.html":{}}}],["src/pdf/pdf.service.ts:57",{"_index":1055,"title":{},"body":{"injectables/PdfService.html":{}}}],["src/pdf/pdf.service.ts:72",{"_index":1057,"title":{},"body":{"injectables/PdfService.html":{}}}],["src/profiles/dto/create",{"_index":509,"title":{},"body":{"classes/CreateProfileDto.html":{},"coverage.html":{}}}],["src/profiles/dto/update",{"_index":1343,"title":{},"body":{"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["src/profiles/entities/profile.entity.ts",{"_index":1140,"title":{},"body":{"classes/Profile.html":{},"coverage.html":{}}}],["src/profiles/profiles.controller.ts",{"_index":1151,"title":{},"body":{"controllers/ProfilesController.html":{},"coverage.html":{}}}],["src/profiles/profiles.controller.ts:12",{"_index":1155,"title":{},"body":{"controllers/ProfilesController.html":{}}}],["src/profiles/profiles.module.ts",{"_index":1166,"title":{},"body":{"modules/ProfilesModule.html":{}}}],["src/profiles/profiles.service.ts",{"_index":1169,"title":{},"body":{"injectables/ProfilesService.html":{},"coverage.html":{}}}],["src/profiles/profiles.service.ts:6",{"_index":1171,"title":{},"body":{"injectables/ProfilesService.html":{}}}],["src/profiles/profiles.service.ts:8",{"_index":1173,"title":{},"body":{"injectables/ProfilesService.html":{}}}],["src/relay/relay.controller.ts",{"_index":1178,"title":{},"body":{"controllers/RelayController.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/relay/relay.controller.ts:28",{"_index":1191,"title":{},"body":{"controllers/RelayController.html":{}}}],["src/relay/relay.module.ts",{"_index":1207,"title":{},"body":{"modules/RelayModule.html":{}}}],["src/relay/relay.service.ts",{"_index":1209,"title":{},"body":{"injectables/RelayService.html":{},"coverage.html":{}}}],["src/relay/relay.service.ts:30",{"_index":1218,"title":{},"body":{"injectables/RelayService.html":{}}}],["src/relay/relay.service.ts:5",{"_index":1213,"title":{},"body":{"injectables/RelayService.html":{}}}],["src/relay/relay.service.ts:54",{"_index":1215,"title":{},"body":{"injectables/RelayService.html":{}}}],["src/relay/relay.service.ts:8",{"_index":1221,"title":{},"body":{"injectables/RelayService.html":{}}}],["src/reports_templates/dto/create",{"_index":540,"title":{},"body":{"classes/CreateReportTemplateDto.html":{},"coverage.html":{}}}],["src/reports_templates/dto/update",{"_index":1345,"title":{},"body":{"classes/UpdateReportDto.html":{},"coverage.html":{}}}],["src/reports_templates/reports_templates.controller.ts",{"_index":1273,"title":{},"body":{"controllers/ReportsTemplatesController.html":{},"coverage.html":{}}}],["src/reports_templates/reports_templates.controller.ts:11",{"_index":1277,"title":{},"body":{"controllers/ReportsTemplatesController.html":{}}}],["src/reports_templates/reports_templates.module",{"_index":1043,"title":{},"body":{"modules/PdfModule.html":{}}}],["src/reports_templates/reports_templates.module.ts",{"_index":1286,"title":{},"body":{"modules/ReportsTemplatesModule.html":{}}}],["src/reports_templates/reports_templates.service",{"_index":1082,"title":{},"body":{"injectables/PdfService.html":{}}}],["src/reports_templates/reports_templates.service.ts",{"_index":1289,"title":{},"body":{"injectables/ReportsTemplatesService.html":{},"coverage.html":{}}}],["src/reports_templates/reports_templates.service.ts:14",{"_index":1294,"title":{},"body":{"injectables/ReportsTemplatesService.html":{}}}],["src/reports_templates/reports_templates.service.ts:9",{"_index":1292,"title":{},"body":{"injectables/ReportsTemplatesService.html":{}}}],["src/repositories/base.repository",{"_index":438,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{}}}],["src/repositories/base.repository.ts",{"_index":375,"title":{},"body":{"classes/BaseRepository.html":{},"coverage.html":{}}}],["src/repositories/base.repository.ts:11",{"_index":399,"title":{},"body":{"classes/BaseRepository.html":{}}}],["src/repositories/base.repository.ts:17",{"_index":407,"title":{},"body":{"classes/BaseRepository.html":{}}}],["src/repositories/base.repository.ts:28",{"_index":409,"title":{},"body":{"classes/BaseRepository.html":{}}}],["src/repositories/base.repository.ts:41",{"_index":402,"title":{},"body":{"classes/BaseRepository.html":{}}}],["src/repositories/base.repository.ts:54",{"_index":411,"title":{},"body":{"classes/BaseRepository.html":{}}}],["src/repositories/base.repository.ts:68",{"_index":410,"title":{},"body":{"classes/BaseRepository.html":{}}}],["src/repositories/base.repository.ts:82",{"_index":405,"title":{},"body":{"classes/BaseRepository.html":{}}}],["src/repositories/cw_device_owners",{"_index":584,"title":{},"body":{"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"modules/DataModule.html":{}}}],["src/repositories/cw_device_owners.ts",{"_index":801,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{},"coverage.html":{}}}],["src/repositories/cw_device_owners.ts:12",{"_index":805,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{}}}],["src/repositories/cw_device_owners.ts:7",{"_index":803,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{}}}],["src/repositories/cw_device_type.repository",{"_index":622,"title":{},"body":{"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"modules/DataModule.html":{}}}],["src/repositories/cw_device_type.repository.ts",{"_index":827,"title":{},"body":{"injectables/DeviceTypeRepository.html":{},"coverage.html":{}}}],["src/repositories/cw_device_type.repository.ts:12",{"_index":831,"title":{},"body":{"injectables/DeviceTypeRepository.html":{}}}],["src/repositories/cw_device_type.repository.ts:7",{"_index":829,"title":{},"body":{"injectables/DeviceTypeRepository.html":{}}}],["src/repositories/cw_devices.repository",{"_index":656,"title":{},"body":{"modules/CwDevicesModule.html":{},"modules/DataModule.html":{}}}],["src/repositories/cw_devices.repository.ts",{"_index":818,"title":{},"body":{"injectables/DeviceRepository.html":{},"coverage.html":{}}}],["src/repositories/cw_devices.repository.ts:12",{"_index":823,"title":{},"body":{"injectables/DeviceRepository.html":{}}}],["src/repositories/cw_devices.repository.ts:7",{"_index":820,"title":{},"body":{"injectables/DeviceRepository.html":{}}}],["src/repositories/cw_location.repository",{"_index":985,"title":{},"body":{"modules/LocationModule.html":{}}}],["src/repositories/cw_location.repository.ts",{"_index":986,"title":{},"body":{"injectables/LocationRepository.html":{},"coverage.html":{}}}],["src/repositories/cw_location.repository.ts:7",{"_index":987,"title":{},"body":{"injectables/LocationRepository.html":{}}}],["src/repositories/data.repository",{"_index":731,"title":{},"body":{"modules/DataModule.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["src/repositories/data.repository.ts",{"_index":737,"title":{},"body":{"injectables/DataRepository.html":{},"coverage.html":{}}}],["src/repositories/data.repository.ts:25",{"_index":744,"title":{},"body":{"injectables/DataRepository.html":{}}}],["src/repositories/data.repository.ts:6",{"_index":740,"title":{},"body":{"injectables/DataRepository.html":{}}}],["src/repositories/data.repository.ts:9",{"_index":742,"title":{},"body":{"injectables/DataRepository.html":{}}}],["src/repositories/profiles.repositories",{"_index":1168,"title":{},"body":{"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{}}}],["src/repositories/profiles.repositories.ts",{"_index":1142,"title":{},"body":{"injectables/ProfileRepository.html":{},"coverage.html":{}}}],["src/repositories/profiles.repositories.ts:11",{"_index":1144,"title":{},"body":{"injectables/ProfileRepository.html":{}}}],["src/repositories/profiles.repositories.ts:7",{"_index":1143,"title":{},"body":{"injectables/ProfileRepository.html":{}}}],["src/repositories/reports_templates.repository",{"_index":1288,"title":{},"body":{"modules/ReportsTemplatesModule.html":{},"injectables/ReportsTemplatesService.html":{}}}],["src/repositories/reports_templates.repository.ts",{"_index":1266,"title":{},"body":{"injectables/ReportTemplatesRepository.html":{},"coverage.html":{}}}],["src/repositories/reports_templates.repository.ts:12",{"_index":1268,"title":{},"body":{"injectables/ReportTemplatesRepository.html":{}}}],["src/repositories/reports_templates.repository.ts:7",{"_index":1267,"title":{},"body":{"injectables/ReportTemplatesRepository.html":{}}}],["src/supabase/supabase.module",{"_index":620,"title":{},"body":{"modules/CwDeviceTypeModule.html":{},"modules/LocationModule.html":{},"modules/ProfilesModule.html":{},"modules/ReportsTemplatesModule.html":{}}}],["src/supabase/supabase.module.ts",{"_index":1321,"title":{},"body":{"modules/SupabaseModule.html":{}}}],["src/supabase/supabase.service",{"_index":732,"title":{},"body":{"modules/DataModule.html":{},"modules/ProfilesModule.html":{}}}],["src/supabase/supabase.service.ts",{"_index":1323,"title":{},"body":{"injectables/SupabaseService.html":{},"coverage.html":{}}}],["src/supabase/supabase.service.ts:24",{"_index":1325,"title":{},"body":{"injectables/SupabaseService.html":{}}}],["src/supabase/supabase.service.ts:8",{"_index":1324,"title":{},"body":{"injectables/SupabaseService.html":{}}}],["stack",{"_index":1445,"title":{},"body":{"index.html":{}}}],["started",{"_index":1424,"title":{"index.html":{}},"body":{}}],["state",{"_index":1183,"title":{},"body":{"controllers/RelayController.html":{},"injectables/RelayService.html":{}}}],["statements",{"_index":1352,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1391,"title":{},"body":{"dependencies.html":{}}}],["status",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RelayController.html":{}}}],["string",{"_index":136,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/BaseRepository.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"injectables/GeolocationService.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationRepository.html":{},"classes/LoginDto.html":{},"controllers/PdfController.html":{},"classes/PdfDTO.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"injectables/ProfilesService.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"injectables/SupabaseService.html":{},"classes/UserAuthDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["subsequent",{"_index":1317,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["success",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["success'})@apiresponse({status",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["successful",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{}}}],["successfully",{"_index":1259,"title":{},"body":{"injectables/RelayService.html":{}}}],["summary",{"_index":708,"title":{},"body":{"controllers/DataController.html":{},"miscellaneous/functions.html":{}}}],["supabase",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["supabase.service",{"_index":1322,"title":{},"body":{"modules/SupabaseModule.html":{}}}],["supabase/supabase",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{},"dependencies.html":{}}}],["supabase/supabase.module",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDevicesModule.html":{}}}],["supabase/supabase.service",{"_index":412,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/ProfileRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["supabaseauthguard",{"_index":179,"title":{"guards/SupabaseAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"controllers/GeolocationController.html":{},"controllers/PdfController.html":{},"guards/SupabaseAuthGuard.html":{},"coverage.html":{}}}],["supabaseclient",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["supabasekey",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["supabasemodule",{"_index":75,"title":{"modules/SupabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/LocationModule.html":{},"modules/ProfilesModule.html":{},"modules/ReportsTemplatesModule.html":{},"modules/SupabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["supabaseservice",{"_index":397,"title":{"injectables/SupabaseService.html":{}},"body":{"classes/BaseRepository.html":{},"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/ProfileRepository.html":{},"modules/ProfilesModule.html":{},"injectables/ReportTemplatesRepository.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"coverage.html":{},"overview.html":{}}}],["supabaseurl",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["super(cwdeviceownersservice",{"_index":576,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["super(cwdevicesservice",{"_index":648,"title":{},"body":{"controllers/CwDevicesController.html":{}}}],["super(cwdevicetypeservice",{"_index":611,"title":{},"body":{"controllers/CwDeviceTypeController.html":{}}}],["super(deviceownerrepository",{"_index":600,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{}}}],["super(devicerepository",{"_index":665,"title":{},"body":{"injectables/CwDevicesService.html":{}}}],["super(devicetyperepository",{"_index":630,"title":{},"body":{"injectables/CwDeviceTypeService.html":{}}}],["super(locationservice",{"_index":977,"title":{},"body":{"controllers/LocationController.html":{}}}],["super(reporttemplatesrepository",{"_index":1297,"title":{},"body":{"injectables/ReportsTemplatesService.html":{}}}],["super(repository",{"_index":992,"title":{},"body":{"injectables/LocationService.html":{}}}],["super(supabaseservice",{"_index":813,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["supliment",{"_index":1428,"title":{},"body":{"index.html":{}}}],["support",{"_index":1454,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1455,"title":{},"body":{"modules.html":{}}}],["t",{"_index":385,"title":{},"body":{"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/IRepositoryBase.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{}}}],["table",{"_index":417,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"injectables/PdfService.html":{},"coverage.html":{}}}],["tablename",{"_index":398,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/DataRepository.html":{}}}],["tables",{"_index":1359,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tablesinsert",{"_index":1360,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1382,"title":{},"body":{"coverage.html":{}}}],["tablesupdate",{"_index":1361,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["take",{"_index":671,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"injectables/PdfService.html":{}}}],["target",{"_index":413,"title":{},"body":{"classes/BaseRepository.html":{}}}],["tdocumentdefinitions",{"_index":1080,"title":{},"body":{"injectables/PdfService.html":{}}}],["templates",{"_index":1275,"title":{},"body":{"controllers/ReportsTemplatesController.html":{}}}],["terminusmodule",{"_index":892,"title":{},"body":{"modules/HealthModule.html":{}}}],["tfontdictionary",{"_index":1059,"title":{},"body":{"injectables/PdfService.html":{}}}],["this.authservice.signinwithemail(logindto.email",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateapikey(apikey",{"_index":960,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["this.authservice.validateuser(token",{"_index":955,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["this.checkapikey(request",{"_index":950,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["this.checkjwttoken(request",{"_index":952,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["this.configservice.get('supabase_key",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["this.configservice.get('supabase_url",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["this.datarepository.findallbytable",{"_index":788,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["this.dataservice.create(createdatumdto",{"_index":707,"title":{},"body":{"controllers/DataController.html":{}}}],["this.dataservice.findall",{"_index":714,"title":{},"body":{"controllers/DataController.html":{},"injectables/PdfService.html":{}}}],["this.dataservice.findone(+id",{"_index":718,"title":{},"body":{"controllers/DataController.html":{}}}],["this.dataservice.remove(+id",{"_index":723,"title":{},"body":{"controllers/DataController.html":{}}}],["this.dataservice.update(+id",{"_index":720,"title":{},"body":{"controllers/DataController.html":{}}}],["this.deviceownerrepository.findbydeveuianduid(deveui",{"_index":601,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{}}}],["this.deviceownerservice.getdeviceownerbydeveuianduid(deveui",{"_index":792,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["this.devicerepository.findbydeveui",{"_index":666,"title":{},"body":{"injectables/CwDevicesService.html":{}}}],["this.deviceservice.getdevicebydeveui(deveui",{"_index":796,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["this.devicetyperepository.findbydevicetype",{"_index":631,"title":{},"body":{"injectables/CwDeviceTypeService.html":{}}}],["this.devicetypeservice.findbyid(devicetype",{"_index":798,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["this.extracttokenfromheader(request",{"_index":953,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["this.fetchdataandreportfromdb(deveui",{"_index":1087,"title":{},"body":{"injectables/PdfService.html":{}}}],["this.geolocationservice.getgeolocation('africa",{"_index":847,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["this.getdevice(deveui",{"_index":785,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["this.getdevicetypedata(device.type",{"_index":787,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["this.health.check",{"_index":887,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.hextobase64(command",{"_index":1234,"title":{},"body":{"injectables/RelayService.html":{}}}],["this.http.pingcheck('nestjs",{"_index":888,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.httpadapterhost",{"_index":905,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["this.insertdataintoreport(reportstring",{"_index":1088,"title":{},"body":{"injectables/PdfService.html":{}}}],["this.jwtservice.sign(session",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.locationservice.create(createlocationdto",{"_index":978,"title":{},"body":{"controllers/LocationController.html":{}}}],["this.makettiapirequest(url",{"_index":1244,"title":{},"body":{"injectables/RelayService.html":{}}}],["this.pdfservice.createpdfbinary(user_id",{"_index":1018,"title":{},"body":{"controllers/PdfController.html":{}}}],["this.profilesrepository.findbyid(id",{"_index":1176,"title":{},"body":{"injectables/ProfilesService.html":{}}}],["this.profilesservice.findone(id",{"_index":1162,"title":{},"body":{"controllers/ProfilesController.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":947,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["this.relayservice.senddownlink(relayon",{"_index":1203,"title":{},"body":{"controllers/RelayController.html":{}}}],["this.reportstemplatesservice.getreporttemplatebydeveui(deveui",{"_index":1114,"title":{},"body":{"injectables/PdfService.html":{}}}],["this.reporttemplatesrepository.findbydeveui",{"_index":1298,"title":{},"body":{"injectables/ReportsTemplatesService.html":{}}}],["this.reporttemplatesservice.findall",{"_index":1281,"title":{},"body":{"controllers/ReportsTemplatesController.html":{}}}],["this.repository.create(dto",{"_index":445,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{}}}],["this.repository.delete(id",{"_index":448,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{}}}],["this.repository.findall",{"_index":443,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{}}}],["this.repository.findbyid(id",{"_index":444,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{}}}],["this.repository.fullupdate(id",{"_index":447,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{}}}],["this.repository.partialupdate(id",{"_index":446,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{}}}],["this.service.create(createdto",{"_index":361,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{}}}],["this.service.findall",{"_index":357,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{}}}],["this.service.fullupdate(id",{"_index":369,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{}}}],["this.service.partialupdate(id",{"_index":365,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{}}}],["this.supabase",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["this.supabase.auth.getuser(token",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.supabase.auth.signinwithpassword",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.supabaseservice",{"_index":418,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/ProfileRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["this.supabaseservice.getsupabaseclient().auth.getuser(id",{"_index":1147,"title":{},"body":{"injectables/ProfileRepository.html":{}}}],["this.validatedeveui(deveui",{"_index":783,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["this.validatedeviceowner(deveui",{"_index":784,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["though",{"_index":1112,"title":{},"body":{"injectables/PdfService.html":{}}}],["throttle",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["throttlerguard",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"interfaces/BaseServiceInterface.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"injectables/GeolocationService.html":{},"guards/JwtAuthGuard.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"guards/SupabaseAuthGuard.html":{}}}],["todo",{"_index":386,"title":{},"body":{"classes/BaseRepository.html":{}}}],["token",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"classes/LoginDto.html":{},"guards/SupabaseAuthGuard.html":{},"classes/UserAuthDto.html":{}}}],["token'})@isstring",{"_index":1347,"title":{},"body":{"classes/UserAuthDto.html":{}}}],["trackby",{"_index":899,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["trackby(context",{"_index":900,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["tracked",{"_index":1443,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":1400,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"guards/JwtAuthGuard.html":{},"injectables/RelayService.html":{},"guards/SupabaseAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["truth",{"_index":1327,"title":{},"body":{"injectables/SupabaseService.html":{}}}],["try",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/RelayService.html":{}}}],["ttl",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["type",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"injectables/GeolocationService.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"controllers/PdfController.html":{},"classes/PdfDTO.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{},"classes/UserAuthDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.dto",{"_index":604,"title":{},"body":{"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"classes/UpdateDeviceTypeDto.html":{}}}],["type.dto.ts",{"_index":486,"title":{},"body":{"classes/CreateDeviceTypeDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"coverage.html":{}}}],["type.dto.ts:11",{"_index":487,"title":{},"body":{"classes/CreateDeviceTypeDto.html":{}}}],["type.dto.ts:7",{"_index":488,"title":{},"body":{"classes/CreateDeviceTypeDto.html":{}}}],["typealiases",{"_index":1468,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":564,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/ProfileRepository.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{}}}],["types.ts",{"_index":1372,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typescript",{"_index":1451,"title":{},"body":{"index.html":{}}}],["uint8array(hexstring.match(/.{1,2}/g).map(byte",{"_index":1261,"title":{},"body":{"injectables/RelayService.html":{}}}],["unauthorized",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DataController.html":{},"controllers/RelayController.html":{}}}],["unauthorized'})@apiresponse({status",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RelayController.html":{}}}],["unauthorizedexception",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["unauthorizedexception('api",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('authorization",{"_index":1312,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["unauthorizedexception('invalid",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["unauthorizedexception('token",{"_index":954,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["unauthorizedexception('unable",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('user",{"_index":1314,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["unauthorizedexception(error",{"_index":957,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["unauthorizedexception(error.message",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/HttpCacheInterceptor.html":{}}}],["undefined})@apiresponse({status",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["understand",{"_index":1430,"title":{},"body":{"index.html":{}}}],["united",{"_index":854,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["unknown",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/DataService.html":{},"controllers/GeolocationController.html":{},"injectables/GeolocationService.html":{},"injectables/PdfService.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{}}}],["unlicensed",{"_index":1466,"title":{},"body":{"properties.html":{}}}],["update",{"_index":337,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"interfaces/IRepositoryBase.html":{},"controllers/LocationController.html":{},"interfaces/RepositoryInterface.html":{}}}],["update(@param('id",{"_index":719,"title":{},"body":{"controllers/DataController.html":{}}}],["update(id",{"_index":925,"title":{},"body":{"interfaces/IRepositoryBase.html":{},"interfaces/RepositoryInterface.html":{}}}],["update(item",{"_index":424,"title":{},"body":{"classes/BaseRepository.html":{}}}],["updated",{"_index":1204,"title":{},"body":{"controllers/RelayController.html":{}}}],["updated_at",{"_index":517,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["updatedatumdto",{"_index":697,"title":{"classes/UpdateDatumDto.html":{}},"body":{"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"classes/UpdateDatumDto.html":{},"coverage.html":{}}}],["updatedevicedto",{"_index":642,"title":{"classes/UpdateDeviceDto.html":{}},"body":{"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"classes/UpdateDeviceDto.html":{},"coverage.html":{}}}],["updatedeviceownerdto",{"_index":565,"title":{"classes/UpdateDeviceOwnerDto.html":{}},"body":{"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"classes/UpdateDeviceOwnerDto.html":{},"coverage.html":{}}}],["updatedevicetypedto",{"_index":608,"title":{"classes/UpdateDeviceTypeDto.html":{}},"body":{"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"classes/UpdateDeviceTypeDto.html":{},"coverage.html":{}}}],["updatedto",{"_index":335,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"injectables/ReportsTemplatesService.html":{}}}],["updatelocationdto",{"_index":973,"title":{"classes/UpdateLocationDto.html":{}},"body":{"controllers/LocationController.html":{},"injectables/LocationService.html":{},"classes/UpdateLocationDto.html":{},"coverage.html":{}}}],["updateprofiledto",{"_index":1342,"title":{"classes/UpdateProfileDto.html":{}},"body":{"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["updatereportdto",{"_index":1295,"title":{"classes/UpdateReportDto.html":{}},"body":{"injectables/ReportsTemplatesService.html":{},"classes/UpdateReportDto.html":{},"coverage.html":{}}}],["updates",{"_index":440,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{}}}],["url",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RelayService.html":{}}}],["usage",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{}}}],["use",{"_index":1316,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["useclass",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":379,"title":{},"body":{"classes/BaseRepository.html":{},"modules/SupabaseModule.html":{}}}],["useguards",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GeolocationController.html":{},"controllers/PdfController.html":{}}}],["useguards(supabaseauthguard",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GeolocationController.html":{},"controllers/PdfController.html":{}}}],["useinterceptors",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["useinterceptors(cacheinterceptor",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["user",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"classes/LoginDto.html":{},"injectables/ProfileRepository.html":{},"injectables/RelayService.html":{},"guards/SupabaseAuthGuard.html":{},"classes/UserAuthDto.html":{}}}],["user.user",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.user.id",{"_index":1149,"title":{},"body":{"injectables/ProfileRepository.html":{}}}],["user_api_keys",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_api_keys.owner_id",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_id",{"_index":462,"title":{},"body":{"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateReportTemplateDto.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/DeviceOwnerRepository.html":{},"controllers/PdfController.html":{},"injectables/PdfService.html":{}}}],["userauthdto",{"_index":1000,"title":{"classes/UserAuthDto.html":{}},"body":{"classes/LoginDto.html":{},"classes/UserAuthDto.html":{},"coverage.html":{}}}],["usererror",{"_index":1146,"title":{},"body":{"injectables/ProfileRepository.html":{}}}],["userid",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{}}}],["username",{"_index":518,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["users",{"_index":571,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["using",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"guards/SupabaseAuthGuard.html":{}}}],["valid",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["validate",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateapikey",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateapikey(apikey",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatedeveui",{"_index":758,"title":{},"body":{"injectables/DataService.html":{}}}],["validatedeveui(deveui",{"_index":772,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["validatedeviceowner",{"_index":759,"title":{},"body":{"injectables/DataService.html":{}}}],["validatedeviceowner(deveui",{"_index":775,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["validateuser",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(token",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":473,"title":{},"body":{"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"classes/LoginDto.html":{},"classes/PdfDTO.html":{},"classes/UserAuthDto.html":{},"dependencies.html":{}}}],["value",{"_index":406,"title":{},"body":{"classes/BaseRepository.html":{},"controllers/DataController.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/PdfService.html":{},"injectables/ReportTemplatesRepository.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1366,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1471,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RelayService.html":{},"injectables/SupabaseService.html":{},"miscellaneous/functions.html":{},"properties.html":{}}}],["via",{"_index":1435,"title":{},"body":{"index.html":{}}}],["void",{"_index":774,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"injectables/SupabaseService.html":{}}}],["vs",{"_index":1447,"title":{},"body":{"index.html":{}}}],["wc2b",{"_index":852,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["website",{"_index":519,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["workings",{"_index":1432,"title":{},"body":{"index.html":{}}}],["world",{"_index":138,"title":{},"body":{"injectables/AppService.html":{}}}],["wtf",{"_index":736,"title":{},"body":{"modules/DataModule.html":{}}}],["x",{"_index":644,"title":{},"body":{"controllers/CwDevicesController.html":{},"controllers/PdfController.html":{}}}],["yes",{"_index":691,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataService.html":{}}}],["zoom",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/LocationModule.html":{},"modules/PdfModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/ReportsTemplatesModule.html":{},"modules/SupabaseModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('/')@Throttle({default: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseInterceptors } from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { CacheInterceptor, CacheTTL } from '@nestjs/cache-manager';\nimport { Throttle } from '@nestjs/throttler';\nimport { Public } from './auth/public.decorator';\n\n// @ApiBearerAuth('authorization')\n// @UseInterceptors(CacheInterceptor)\n// @CacheTTL(20)\n@ApiTags('app')\n@Controller()\nexport class AppController {\n  constructor() {}\n\n  // @UseInterceptors(CacheInterceptor)\n  @Public()\n  @Get('/')\n  @Throttle({ default: { limit: 1, ttl: 6000 } })\n  async getHello() {\n    return [{ id: 1, name: 'Nest' + Math.random() }];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCwDeviceOwnersModule\n\nCwDeviceOwnersModule\n\nAppModule -->\n\nCwDeviceOwnersModule->AppModule\n\n\n\n\n\nCwDevicesModule\n\nCwDevicesModule\n\nAppModule -->\n\nCwDevicesModule->AppModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nGeolocationModule\n\nGeolocationModule\n\nAppModule -->\n\nGeolocationModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nAppModule -->\n\nLocationModule->AppModule\n\n\n\n\n\nPdfModule\n\nPdfModule\n\nAppModule -->\n\nPdfModule->AppModule\n\n\n\n\n\nProfilesModule\n\nProfilesModule\n\nAppModule -->\n\nProfilesModule->AppModule\n\n\n\n\n\nRelayModule\n\nRelayModule\n\nAppModule -->\n\nRelayModule->AppModule\n\n\n\n\n\nReportsTemplatesModule\n\nReportsTemplatesModule\n\nAppModule -->\n\nReportsTemplatesModule->AppModule\n\n\n\n\n\nSupabaseModule\n\nSupabaseModule\n\nAppModule -->\n\nSupabaseModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CwDeviceOwnersModule\n                        \n                        \n                            CwDevicesModule\n                        \n                        \n                            DataModule\n                        \n                        \n                            GeolocationModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            LocationModule\n                        \n                        \n                            PdfModule\n                        \n                        \n                            ProfilesModule\n                        \n                        \n                            RelayModule\n                        \n                        \n                            ReportsTemplatesModule\n                        \n                        \n                            SupabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // src/app.module.ts\nimport { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { AuthModule } from './auth/auth.module';\nimport { DataModule } from './data/data.module';\nimport { LocationModule } from './location/location.module';\nimport { SupabaseModule } from './supabase/supabase.module';\nimport { ProfilesModule } from './profiles/profiles.module';\nimport { CwDeviceOwnersModule } from './cw_device_owners/cw_device_owners.module';\nimport { CwDevicesModule } from './cw_devices/cw_devices.module';\nimport { ThrottlerGuard, ThrottlerModule } from '@nestjs/throttler';\nimport { APP_GUARD } from '@nestjs/core';\nimport { AuthService } from './auth/auth.service';\nimport { JwtAuthGuard } from './auth/guards/jwt-auth.guard';\nimport { CacheModule } from '@nestjs/cache-manager';\nimport { RelayModule } from './relay/relay.module';\nimport { GeolocationModule } from './geolocation/geolocation.module';\nimport { AppController } from './app.controller';\nimport { HealthModule } from './health/health.module';\nimport { PdfModule } from './pdf/pdf.module';\nimport { ReportsTemplatesModule } from './reports_templates/reports_templates.module';\n\n@Module({\n  imports: [\n    AuthModule,\n    ConfigModule.forRoot({\n      envFilePath: ['.env.development.local', '.env.development', '.env'],\n      isGlobal: true,\n    }),\n    ThrottlerModule.forRoot([{\n      ttl: 60000,\n      limit: 3,\n    }]),\n    CacheModule.register({\n      ttl: 60 * 10, // seconds\n      max: 1000, // maximum number of items in cache\n      isGlobal: true,\n    }),\n    DataModule,\n    LocationModule,\n    SupabaseModule,\n    ProfilesModule,\n    CwDeviceOwnersModule,\n    CwDevicesModule,\n    RelayModule,\n    GeolocationModule,\n    HealthModule,\n    PdfModule,\n    ReportsTemplatesModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AuthService,\n    {\n      provide: APP_GUARD,\n      useClass: JwtAuthGuard,  // Register JwtAuthGuard as a global guard\n    },\n    {\n      provide: APP_GUARD,\n      useClass: ThrottlerGuard\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getProtectedRoute\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getProtectedRoute\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProtectedRoute(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('JWT')@Get('user')@UseGuards(SupabaseAuthGuard)@ApiResponse({status: 200, description: 'Login Success'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 402, description: 'Payment Required'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiResponse({status: 404, description: 'Login Not Found', type: LoginDto, links: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('login')@Throttle({default: undefined})@ApiResponse({status: 200, description: 'Login Success'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 402, description: 'Payment Required'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiResponse({status: 404, description: 'Login Not Found'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        // Usage Example in Controller\nimport { Controller, Get, UseGuards, Req, Body, Post } from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { SupabaseAuthGuard } from './guards/supabase.guard';\nimport { LoginDto } from './DTOs/userAuth.dto';\nimport { AuthService } from './auth.service';\nimport { Public } from './public.decorator';\nimport { Throttle } from '@nestjs/throttler';\n\n@ApiTags('Endpoints related to user authentication and authorization')\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) { }\n\n  @ApiBearerAuth('JWT')\n  @Get('user')\n  @UseGuards(SupabaseAuthGuard)\n  @ApiResponse({ status: 200, description: 'Login Success' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 402, description: 'Payment Required' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiResponse({ status: 404, description: 'Login Not Found', type: LoginDto, links: {\n    exampleLink: {\n      operationId: 'getUserById',\n        parameters: {\n          userId: '$request.path.id',\n        },\n        description: 'Link to get user by ID',\n        server: {\n          url: 'https://api.cropwatch.io/api/auth/user',\n        }\n    }\n  } })\n  async getProtectedRoute(@Req() req) {\n    return { message: 'This is a protected route', user: req.user };\n  }\n\n  @Public()\n  @Post('login')\n  @Throttle({ default: { limit: 1, ttl: 6000 } })\n  @ApiResponse({ status: 200, description: 'Login Success' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 402, description: 'Payment Required' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiResponse({ status: 404, description: 'Login Not Found' })\n  async login(@Body() loginDto: LoginDto) {\n    const session = await this.authService.signInWithEmail(loginDto.email, loginDto.password);\n    return { message: 'Login successful', token: session.session?.access_token };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\n\n@Module({\n  controllers: [AuthController],\n  exports: [AuthService],\n  providers: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                supabase\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signInWithEmail\n                            \n                            \n                                    Async\n                                validateApiKey\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signInWithEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    signInWithEmail(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateApiKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateApiKey(apiKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        supabase\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SupabaseClient\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, CanActivate, ExecutionContext, UnauthorizedException, Logger, HttpException, HttpStatus } from '@nestjs/common';\nimport { SupabaseClient, User, createClient } from '@supabase/supabase-js';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class AuthService {\n  private supabase: SupabaseClient;\n\n  constructor(\n    private configService: ConfigService,\n    // private jwtService: JwtService,\n  ) {\n    const supabaseUrl = this.configService.get('SUPABASE_URL');\n    const supabaseKey = this.configService.get('SUPABASE_KEY');\n\n    // Initialize Supabase client with version 2 package\n    this.supabase = createClient(supabaseUrl, supabaseKey);\n  }\n\n  // Function to validate a JWT token using Supabase\n  async validateUser(token: string): Promise {\n    try {\n      const { data: user, error } = await this.supabase.auth.getUser(token);\n      if (error) {\n        throw new UnauthorizedException(error.message);\n      }\n      return user.user;\n    } catch (error) {\n      throw new UnauthorizedException(error.message);\n    }\n  }\n\n  async validateApiKey(apiKey: string): Promise {\n    // Here you would implement logic to validate the API key\n    // For now, we assume a hardcoded valid key for demonstration purposes\n\n    let { data: user_api_keys, error } = await this.supabase\n      .from('api_keys')\n      .select('*')\n      .eq('api_key', apiKey)\n      .gt('expires_at', new Date().toISOString())\n      .single();\n\n    if (error) {\n      throw new UnauthorizedException('Invalid API key');\n    }\n\n    if (!user_api_keys) {\n      throw new UnauthorizedException('API key not found');\n    }\n\n    return user_api_keys.owner_id;\n  }\n\n  // Function to sign in with email and password\n  async signInWithEmail(email: string, password: string): Promise {\n    try {\n      const { data: session, error } = await this.supabase.auth.signInWithPassword({ email, password });\n      if (error) {\n        throw new UnauthorizedException('Invalid credentials');\n      }\n      // this.jwtService.sign(session);\n      return session;\n    } catch (error) {\n      throw new UnauthorizedException('Unable to sign in with email and password');\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseController.html":{"url":"classes/BaseController.html","title":"class - BaseController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bases/base.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                Delete\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                FullUpdate\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                PartialUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: BaseServiceInterface)\n                    \n                \n                        \n                            \n                                Defined in src/bases/base.controller.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        BaseServiceInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCommonAuth('Create a new item')@ApiCreateResponses()\n                \n            \n\n                    \n                        \n                            Defined in src/bases/base.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        Delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    Delete(createDto: CreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()@ApiCommonAuth('Delete a single item')@ApiDeleteResponses()\n                \n            \n\n                    \n                        \n                            Defined in src/bases/base.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiCommonAuth('Get all items')@CommonResponses()@ApiGetResponses()\n                \n            \n\n                    \n                        \n                            Defined in src/bases/base.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        FullUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    FullUpdate(id: number, updateDto: UpdateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiCommonAuth('Fully update a single item')@ApiCreateResponses()\n                \n            \n\n                    \n                        \n                            Defined in src/bases/base.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        PartialUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    PartialUpdate(id: number, updateDto: UpdateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiCommonAuth('Partially update a single item')@ApiCreateResponses()\n                \n            \n\n                    \n                        \n                            Defined in src/bases/base.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Get,\n  Post,\n  Body,\n  Patch,\n  Put,\n  Delete,\n  Param,\n} from '@nestjs/common';\nimport { ApiCreateResponses, ApiDeleteResponses, ApiGetResponses, CommonResponses } from '../common/common-responses.decorator';\n// import { ApiCommonAuth } from 'src/common/common-auth-decorators';\nimport { ApiCommonAuth } from '../common/common-auth-decorators';\n\nexport interface BaseServiceInterface {\n  findAll: () => Promise;\n  create: (dto: CreateDto) => Promise;\n  partialUpdate: (id: number, dto: UpdateDto) => Promise; // For PATCH\n  fullUpdate: (id: number, dto: UpdateDto) => Promise;\n}\n\nexport class BaseController {\n  constructor(private readonly service: BaseServiceInterface) { }\n\n  @Get()\n  @ApiCommonAuth('Get all items')\n  @CommonResponses()\n  @ApiGetResponses()\n  async findAll(): Promise {\n    return this.service.findAll();\n  }\n\n  @Post()\n  @ApiCommonAuth('Create a new item')\n  @ApiCreateResponses()\n  async create(@Body() createDto: CreateDto): Promise {\n    return this.service.create(createDto);\n  }\n\n  @Patch(':id')\n  @ApiCommonAuth('Partially update a single item')\n  @ApiCreateResponses()\n  async PartialUpdate(@Param('id') id: number, @Body() updateDto: UpdateDto): Promise {\n    return this.service.partialUpdate(id, updateDto);\n  }\n\n  @Put(':id')\n  @ApiCommonAuth('Fully update a single item')\n  @ApiCreateResponses()\n  async FullUpdate(@Param('id') id: number, @Body() updateDto: UpdateDto): Promise {\n    return this.service.fullUpdate(id, updateDto);\n  }\n\n  @Delete()\n  @ApiCommonAuth('Delete a single item')\n  @ApiDeleteResponses()\n  async Delete(@Body() createDto: CreateDto): Promise {\n    throw new Error('Method not implemented.');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseRepository.html":{"url":"classes/BaseRepository.html","title":"class - BaseRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repositories/base.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                Base Repository Generic Class.\nThis class is used by all repositories to perform CRUD operations.\nIt is a generic class that accepts a type T.\nTODO: Prepare this class for mocking, and possibly add failover methods on error, or Round Robbin retry logic.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                fullUpdate\n                            \n                            \n                                    Async\n                                partialUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(supabaseService: SupabaseService, tableName: string)\n                    \n                \n                        \n                            \n                                Defined in src/repositories/base.repository.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        supabaseService\n                                                  \n                                                        \n                                                                        SupabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tableName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(item: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositories/base.repository.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositories/base.repository.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositories/base.repository.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositories/base.repository.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fullUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    fullUpdate(id: number | string, item: T, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositories/base.repository.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                item\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        partialUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    partialUpdate(id: number | string, item: Partial, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositories/base.repository.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SupabaseService } from '../supabase/supabase.service';\n\n/**\n * Base Repository Generic Class.\n * This class is used by all repositories to perform CRUD operations.\n * It is a generic class that accepts a type T.\n * TODO: Prepare this class for mocking, and possibly add failover methods on error, or Round Robbin retry logic.\n * @param {SupabaseService} SupabaseService  The target to process see {@link SupabaseService}\n * @param {string} tableName  The database table name to perform operations\n */\nexport class BaseRepository {\n  constructor(\n    protected readonly supabaseService: SupabaseService,\n    private readonly tableName: string\n  ) {}\n\n  async findAll(): Promise {\n    const { data, error } = await this.supabaseService\n      .getSupabaseClient()\n      .from(this.tableName)\n      .select('*');\n    if (error) {\n      throw error;\n    }\n    return data || [];\n  }\n\n  async findById(id: number | string, idColumn = 'id'): Promise {\n    const { data, error } = await this.supabaseService\n      .getSupabaseClient()\n      .from(this.tableName)\n      .select('*')\n      .eq(idColumn, id)\n      .single();\n    if (error) {\n      throw error;\n    }\n    return data || null;\n  }\n\n  async create(item: Partial): Promise {\n    const { data, error } = await this.supabaseService\n      .getSupabaseClient()\n      .from(this.tableName)\n      .insert(item)\n      .select('*')\n      .single();\n    if (error) {\n      throw error;\n    }\n    return data;\n  }\n\n  async partialUpdate(id: number | string, item: Partial, idColumn = 'id'): Promise {\n    const { data, error } = await this.supabaseService\n      .getSupabaseClient()\n      .from(this.tableName)\n      .update(item)\n      .eq(idColumn, id)\n      .select('*')\n      .single();\n    if (error) {\n      throw error;\n    }\n    return data;\n  }\n\n  async fullUpdate(id: number | string, item: T, idColumn = 'id'): Promise {\n    const { data, error } = await this.supabaseService\n      .getSupabaseClient()\n      .from(this.tableName)\n      .update(item) // Accepts full item data\n      .eq(idColumn, id)\n      .select('*')\n      .single();\n    if (error) {\n      throw error;\n    }\n    return data;\n  }\n\n  async delete(id: number | string, idColumn = 'id'): Promise {\n    const { error } = await this.supabaseService\n      .getSupabaseClient()\n      .from(this.tableName)\n      .delete()\n      .eq(idColumn, id);\n    if (error) {\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseService.html":{"url":"classes/BaseService.html","title":"class - BaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bases/base.service.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            BaseServiceInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                fullUpdate\n                            \n                            \n                                    Async\n                                partialUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: BaseRepository)\n                    \n                \n                        \n                            \n                                Defined in src/bases/base.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        BaseRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bases/base.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bases/base.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/bases/base.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bases/base.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fullUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    fullUpdate(id: number, dto: T | UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bases/base.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                        T | UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        partialUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    partialUpdate(id: number, dto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bases/base.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseRepository } from 'src/repositories/base.repository';\n\nexport interface BaseServiceInterface {\n  findAll(): Promise;\n  create(dto: CreateDto): Promise;\n  partialUpdate(id: number, dto: UpdateDto): Promise;\n  fullUpdate(id: number, dto: T | UpdateDto): Promise; // Allow T or UpdateDto for full updates\n}\n\nexport class BaseService, UpdateDto extends Partial> implements BaseServiceInterface {\n  constructor(protected readonly repository: BaseRepository) {}\n\n  async findAll(): Promise {\n    return this.repository.findAll();\n  }\n\n  async findById(id: number): Promise {\n    return this.repository.findById(id);\n  }\n\n  async create(dto: CreateDto): Promise {\n    return this.repository.create(dto);\n  }\n\n  async partialUpdate(id: number, dto: UpdateDto): Promise {\n    return this.repository.partialUpdate(id, dto);\n  }\n\n  async fullUpdate(id: number, dto: T | UpdateDto): Promise {\n    return this.repository.fullUpdate(id, dto as T);\n  }\n\n  async delete(id: number): Promise {\n    return this.repository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseServiceInterface.html":{"url":"interfaces/BaseServiceInterface.html","title":"interface - BaseServiceInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseServiceInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bases/base.controller.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            create\n                                        \n                                \n                                \n                                        \n                                            findAll\n                                        \n                                \n                                \n                                        \n                                            fullUpdate\n                                        \n                                \n                                \n                                        \n                                            partialUpdate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        create:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        findAll\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        findAll:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullUpdate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fullUpdate:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        partialUpdate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        partialUpdate:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Get,\n  Post,\n  Body,\n  Patch,\n  Put,\n  Delete,\n  Param,\n} from '@nestjs/common';\nimport { ApiCreateResponses, ApiDeleteResponses, ApiGetResponses, CommonResponses } from '../common/common-responses.decorator';\n// import { ApiCommonAuth } from 'src/common/common-auth-decorators';\nimport { ApiCommonAuth } from '../common/common-auth-decorators';\n\nexport interface BaseServiceInterface {\n  findAll: () => Promise;\n  create: (dto: CreateDto) => Promise;\n  partialUpdate: (id: number, dto: UpdateDto) => Promise; // For PATCH\n  fullUpdate: (id: number, dto: UpdateDto) => Promise;\n}\n\nexport class BaseController {\n  constructor(private readonly service: BaseServiceInterface) { }\n\n  @Get()\n  @ApiCommonAuth('Get all items')\n  @CommonResponses()\n  @ApiGetResponses()\n  async findAll(): Promise {\n    return this.service.findAll();\n  }\n\n  @Post()\n  @ApiCommonAuth('Create a new item')\n  @ApiCreateResponses()\n  async create(@Body() createDto: CreateDto): Promise {\n    return this.service.create(createDto);\n  }\n\n  @Patch(':id')\n  @ApiCommonAuth('Partially update a single item')\n  @ApiCreateResponses()\n  async PartialUpdate(@Param('id') id: number, @Body() updateDto: UpdateDto): Promise {\n    return this.service.partialUpdate(id, updateDto);\n  }\n\n  @Put(':id')\n  @ApiCommonAuth('Fully update a single item')\n  @ApiCreateResponses()\n  async FullUpdate(@Param('id') id: number, @Body() updateDto: UpdateDto): Promise {\n    return this.service.fullUpdate(id, updateDto);\n  }\n\n  @Delete()\n  @ApiCommonAuth('Delete a single item')\n  @ApiDeleteResponses()\n  async Delete(@Body() createDto: CreateDto): Promise {\n    throw new Error('Method not implemented.');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseServiceInterface-1.html":{"url":"interfaces/BaseServiceInterface-1.html","title":"interface - BaseServiceInterface-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseServiceInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bases/base.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        findAll\n                                    \n                                \n                                \n                                    \n                                        fullUpdate\n                                    \n                                \n                                \n                                    \n                                        partialUpdate\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bases/base.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/bases/base.service.ts:4\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fullUpdate\n                        \n                    \n                \n            \n            \n                \nfullUpdate(id: number, dto: T | UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bases/base.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                        T | UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        partialUpdate\n                        \n                    \n                \n            \n            \n                \npartialUpdate(id: number, dto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bases/base.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BaseRepository } from 'src/repositories/base.repository';\n\nexport interface BaseServiceInterface {\n  findAll(): Promise;\n  create(dto: CreateDto): Promise;\n  partialUpdate(id: number, dto: UpdateDto): Promise;\n  fullUpdate(id: number, dto: T | UpdateDto): Promise; // Allow T or UpdateDto for full updates\n}\n\nexport class BaseService, UpdateDto extends Partial> implements BaseServiceInterface {\n  constructor(protected readonly repository: BaseRepository) {}\n\n  async findAll(): Promise {\n    return this.repository.findAll();\n  }\n\n  async findById(id: number): Promise {\n    return this.repository.findById(id);\n  }\n\n  async create(dto: CreateDto): Promise {\n    return this.repository.create(dto);\n  }\n\n  async partialUpdate(id: number, dto: UpdateDto): Promise {\n    return this.repository.partialUpdate(id, dto);\n  }\n\n  async fullUpdate(id: number, dto: T | UpdateDto): Promise {\n    return this.repository.fullUpdate(id, dto as T);\n  }\n\n  async delete(id: number): Promise {\n    return this.repository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDatumDto.html":{"url":"classes/CreateDatumDto.html","title":"class - CreateDatumDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDatumDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/dto/create-datum.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateDatumDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDeviceDto.html":{"url":"classes/CreateDeviceDto.html","title":"class - CreateDeviceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDeviceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_devices/dto/create-device.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                dev_eui\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                serial_number\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dev_eui\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cw_devices/dto/create-device.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cw_devices/dto/create-device.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        serial_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cw_devices/dto/create-device.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cw_devices/dto/create-device.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cw_devices/dto/create-device.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsString } from 'class-validator';\n\nexport class CreateDeviceDto {\n  @IsNotEmpty()\n  @IsString()\n  dev_eui: string;\n\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  type: number;\n\n  @IsNotEmpty()\n  @IsString()\n  serial_number: string;\n\n  @IsNotEmpty()\n  @IsString()\n  user_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDeviceOwnerDto.html":{"url":"classes/CreateDeviceOwnerDto.html","title":"class - CreateDeviceOwnerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDeviceOwnerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_device_owners/dto/create-device-owner.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                dev_eui\n                            \n                            \n                                    \n                                    \n                                owner_id\n                            \n                            \n                                    \n                                    \n                                permission_level\n                            \n                            \n                                    \n                                    \n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dev_eui\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cw_device_owners/dto/create-device-owner.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        owner_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cw_device_owners/dto/create-device-owner.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        permission_level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cw_device_owners/dto/create-device-owner.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cw_device_owners/dto/create-device-owner.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsString } from 'class-validator';\n\nexport class CreateDeviceOwnerDto {\n  @IsNotEmpty()\n  @IsString()\n  dev_eui: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  owner_id: number;\n\n  @IsNotEmpty()\n  @IsNumber()\n  permission_level: number;\n\n  @IsNotEmpty()\n  @IsString()\n  user_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDeviceTypeDto.html":{"url":"classes/CreateDeviceTypeDto.html","title":"class - CreateDeviceTypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDeviceTypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_device_type/dto/create-device-type.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cw_device_type/dto/create-device-type.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cw_device_type/dto/create-device-type.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateDeviceTypeDto {\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @IsNotEmpty()\n  @IsString()\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLocationDto.html":{"url":"classes/CreateLocationDto.html","title":"class - CreateLocationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLocationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/dto/create-location.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                lat\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                long\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                map_zoom\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                owner_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        lat\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsLatitude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        long\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsLongitude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        map_zoom\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        owner_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsOptional, IsString, IsLatitude, IsLongitude } from 'class-validator';\n\nexport class CreateLocationDto {\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @IsOptional()\n  @IsString()\n  description?: string | null;\n\n  @IsOptional()\n  @IsLatitude()\n  lat?: number | null;\n\n  @IsOptional()\n  @IsLongitude()\n  long?: number | null;\n\n  @IsOptional()\n  @IsNumber()\n  map_zoom?: number | null;\n\n  @IsOptional()\n  @IsString()\n  owner_id?: string | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileDto.html":{"url":"classes/CreateProfileDto.html","title":"class - CreateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profiles/dto/create-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                accepted_agreements\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                avatar_url\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                employer\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                full_name\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                last_login\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                line_notify_token\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                updated_at\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                username\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                website\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        accepted_agreements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profiles/dto/create-profile.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        avatar_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsUrl()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profiles/dto/create-profile.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profiles/dto/create-profile.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        employer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profiles/dto/create-profile.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        full_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profiles/dto/create-profile.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profiles/dto/create-profile.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        last_login\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profiles/dto/create-profile.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        line_notify_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profiles/dto/create-profile.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profiles/dto/create-profile.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profiles/dto/create-profile.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        website\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsUrl()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profiles/dto/create-profile.dto.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsBoolean, IsEmail, IsNotEmpty, IsOptional, IsString, IsUrl } from 'class-validator';\n\nexport class CreateProfileDto {\n  @IsNotEmpty()\n  @IsString()\n  id: string;\n\n  @IsOptional()\n  @IsBoolean()\n  accepted_agreements?: boolean;\n\n  @IsOptional()\n  @IsString()\n  @IsUrl()\n  avatar_url?: string | null;\n\n  @IsOptional()\n  @IsEmail()\n  email?: string | null;\n\n  @IsOptional()\n  @IsString()\n  employer?: string | null;\n\n  @IsOptional()\n  @IsString()\n  full_name?: string | null;\n\n  @IsOptional()\n  @IsString()\n  last_login?: string | null;\n\n  @IsOptional()\n  @IsString()\n  line_notify_token?: string | null;\n\n  @IsOptional()\n  @IsString()\n  updated_at?: string | null;\n\n  @IsOptional()\n  @IsString()\n  username?: string | null;\n\n  @IsOptional()\n  @IsUrl()\n  website?: string | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateReportTemplateDto.html":{"url":"classes/CreateReportTemplateDto.html","title":"class - CreateReportTemplateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateReportTemplateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reports_templates/dto/create-report_template.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                dev_eui\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                serial_number\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dev_eui\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reports_templates/dto/create-report_template.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reports_templates/dto/create-report_template.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        serial_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reports_templates/dto/create-report_template.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reports_templates/dto/create-report_template.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reports_templates/dto/create-report_template.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsString } from 'class-validator';\n\nexport class CreateReportTemplateDto {\n  @IsNotEmpty()\n  @IsString()\n  dev_eui: string;\n\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  type: number;\n\n  @IsNotEmpty()\n  @IsString()\n  serial_number: string;\n\n  @IsNotEmpty()\n  @IsString()\n  user_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CwDeviceOwnersController.html":{"url":"controllers/CwDeviceOwnersController.html","title":"controller - CwDeviceOwnersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CwDeviceOwnersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_device_owners/cw_device_owners.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cw-device-owners\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                Delete\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                FullUpdate\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                PartialUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCommonAuth('Create a new item')@ApiCreateResponses()\n                \n            \n\n                    \n                        \n                            Inherited from         BaseController\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseController:35\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        Delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    Delete(createDto: CreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()@ApiCommonAuth('Delete a single item')@ApiDeleteResponses()\n                \n            \n\n                    \n                        \n                            Inherited from         BaseController\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseController:56\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiCommonAuth('Get all items')@CommonResponses()@ApiGetResponses()\n                \n            \n\n                    \n                        \n                            Inherited from         BaseController\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseController:28\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        FullUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    FullUpdate(id: number, updateDto: UpdateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiCommonAuth('Fully update a single item')@ApiCreateResponses()\n                \n            \n\n                    \n                        \n                            Inherited from         BaseController\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseController:49\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        PartialUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    PartialUpdate(id: number, updateDto: UpdateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiCommonAuth('Partially update a single item')@ApiCreateResponses()\n                \n            \n\n                    \n                        \n                            Inherited from         BaseController\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseController:42\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        // src/cw_device_owners/cw_device_owners.controller.ts\nimport { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { CwDeviceOwnersService } from './cw_device_owners.service';\nimport { ApiTags } from '@nestjs/swagger';\nimport { CreateDeviceOwnerDto } from './dto/create-device-owner.dto';\nimport { BaseController } from 'src/bases/base.controller';\nimport { DevicesOwnersRow } from 'src/common/database-types';\nimport { UpdateDeviceOwnerDto } from './dto/update-device-owner.dto';\n\n@ApiTags('🔒Device-Owners - CRUD operations for linkages between current JWT users profile and devices')\n@Controller('cw-device-owners')\nexport class CwDeviceOwnersController extends BaseController {\n  constructor(cwDeviceOwnersService: CwDeviceOwnersService) {\n    super(cwDeviceOwnersService);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CwDeviceOwnersModule.html":{"url":"modules/CwDeviceOwnersModule.html","title":"module - CwDeviceOwnersModule","body":"\n                   \n\n\n\n\n    Modules\n    CwDeviceOwnersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CwDeviceOwnersModule\n\n\n\ncluster_CwDeviceOwnersModule_imports\n\n\n\ncluster_CwDeviceOwnersModule_exports\n\n\n\ncluster_CwDeviceOwnersModule_providers\n\n\n\n\nSupabaseModule\n\nSupabaseModule\n\n\n\nCwDeviceOwnersModule\n\nCwDeviceOwnersModule\n\nCwDeviceOwnersModule -->\n\nSupabaseModule->CwDeviceOwnersModule\n\n\n\n\n\nCwDeviceOwnersService \n\nCwDeviceOwnersService \n\nCwDeviceOwnersService  -->\n\nCwDeviceOwnersModule->CwDeviceOwnersService \n\n\n\n\n\nCwDeviceOwnersService\n\nCwDeviceOwnersService\n\nCwDeviceOwnersModule -->\n\nCwDeviceOwnersService->CwDeviceOwnersModule\n\n\n\n\n\nDeviceOwnerRepository\n\nDeviceOwnerRepository\n\nCwDeviceOwnersModule -->\n\nDeviceOwnerRepository->CwDeviceOwnersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cw_device_owners/cw_device_owners.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CwDeviceOwnersService\n                        \n                        \n                            DeviceOwnerRepository\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CwDeviceOwnersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SupabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CwDeviceOwnersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // src/cw_device_owners/cw_device_owners.module.ts\nimport { Module } from '@nestjs/common';\nimport { CwDeviceOwnersService } from './cw_device_owners.service';\nimport { CwDeviceOwnersController } from './cw_device_owners.controller';\nimport { SupabaseModule } from '../supabase/supabase.module';\nimport { DeviceOwnerRepository } from 'src/repositories/cw_device_owners';\n\n@Module({\n  imports: [SupabaseModule],\n  providers: [CwDeviceOwnersService, DeviceOwnerRepository], // Add repository and service\n  controllers: [CwDeviceOwnersController],\n  exports: [CwDeviceOwnersService],\n})\nexport class CwDeviceOwnersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CwDeviceOwnersService.html":{"url":"injectables/CwDeviceOwnersService.html","title":"injectable - CwDeviceOwnersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CwDeviceOwnersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_device_owners/cw_device_owners.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getDeviceOwnerByDevEuiAndUID\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                fullUpdate\n                            \n                            \n                                    Async\n                                partialUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deviceOwnerRepository: DeviceOwnerRepository)\n                    \n                \n                        \n                            \n                                Defined in src/cw_device_owners/cw_device_owners.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deviceOwnerRepository\n                                                  \n                                                        \n                                                                        DeviceOwnerRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getDeviceOwnerByDevEuiAndUID\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDeviceOwnerByDevEuiAndUID(devEui: string, user_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cw_device_owners/cw_device_owners.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                devEui\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:21\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:13\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fullUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    fullUpdate(id: number, dto: T | UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:29\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                        T | UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        partialUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    partialUpdate(id: number, dto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:25\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateDeviceOwnerDto } from './dto/create-device-owner.dto';\nimport { UpdateDeviceOwnerDto } from './dto/update-device-owner.dto';\nimport { DeviceOwnerRepository } from 'src/repositories/cw_device_owners';\nimport { BaseService } from 'src/bases/base.service';\nimport { DeviceOwnerRow } from 'src/common/database-types';\n\n@Injectable()\nexport class CwDeviceOwnersService extends BaseService {\n  constructor(private readonly deviceOwnerRepository: DeviceOwnerRepository) {\n    super(deviceOwnerRepository);\n  }\n\n  public async getDeviceOwnerByDevEuiAndUID(devEui: string, user_id: string): Promise {\n    return this.deviceOwnerRepository.findByDevEuiAndUID(devEui, user_id);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CwDeviceTypeController.html":{"url":"controllers/CwDeviceTypeController.html","title":"controller - CwDeviceTypeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CwDeviceTypeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_device_type/cw_device_type.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cw-device-type\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                Delete\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                FullUpdate\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                PartialUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCommonAuth('Create a new item')@ApiCreateResponses()\n                \n            \n\n                    \n                        \n                            Inherited from         BaseController\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseController:35\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        Delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    Delete(createDto: CreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()@ApiCommonAuth('Delete a single item')@ApiDeleteResponses()\n                \n            \n\n                    \n                        \n                            Inherited from         BaseController\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseController:56\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiCommonAuth('Get all items')@CommonResponses()@ApiGetResponses()\n                \n            \n\n                    \n                        \n                            Inherited from         BaseController\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseController:28\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        FullUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    FullUpdate(id: number, updateDto: UpdateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiCommonAuth('Fully update a single item')@ApiCreateResponses()\n                \n            \n\n                    \n                        \n                            Inherited from         BaseController\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseController:49\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        PartialUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    PartialUpdate(id: number, updateDto: UpdateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiCommonAuth('Partially update a single item')@ApiCreateResponses()\n                \n            \n\n                    \n                        \n                            Inherited from         BaseController\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseController:42\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { BaseController } from 'src/bases/base.controller';\nimport { CreateDeviceTypeDto } from './dto/create-device-type.dto';\nimport { CwDeviceTypeService } from './cw_device_type.service';\nimport { ApiTags } from '@nestjs/swagger';\nimport { DeviceTypeRow } from 'src/common/database-types';\nimport { UpdateDeviceTypeDto } from './dto/update-device-type.dto';\n\n@ApiTags('Device Type')\n@Controller('cw-device-type')\nexport class CwDeviceTypeController extends BaseController {\n    constructor(cwDeviceTypeService: CwDeviceTypeService) {\n        super(cwDeviceTypeService);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CwDeviceTypeModule.html":{"url":"modules/CwDeviceTypeModule.html","title":"module - CwDeviceTypeModule","body":"\n                   \n\n\n\n\n    Modules\n    CwDeviceTypeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CwDeviceTypeModule\n\n\n\ncluster_CwDeviceTypeModule_providers\n\n\n\ncluster_CwDeviceTypeModule_imports\n\n\n\ncluster_CwDeviceTypeModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nCwDeviceTypeModule\n\nCwDeviceTypeModule\n\nCwDeviceTypeModule -->\n\nAuthModule->CwDeviceTypeModule\n\n\n\n\n\nSupabaseModule\n\nSupabaseModule\n\nCwDeviceTypeModule -->\n\nSupabaseModule->CwDeviceTypeModule\n\n\n\n\n\nCwDeviceTypeService \n\nCwDeviceTypeService \n\nCwDeviceTypeService  -->\n\nCwDeviceTypeModule->CwDeviceTypeService \n\n\n\n\n\nCwDeviceTypeService\n\nCwDeviceTypeService\n\nCwDeviceTypeModule -->\n\nCwDeviceTypeService->CwDeviceTypeModule\n\n\n\n\n\nDeviceTypeRepository\n\nDeviceTypeRepository\n\nCwDeviceTypeModule -->\n\nDeviceTypeRepository->CwDeviceTypeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cw_device_type/cw_device_type.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CwDeviceTypeService\n                        \n                        \n                            DeviceTypeRepository\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CwDeviceTypeController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            SupabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CwDeviceTypeService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CwDeviceTypeService } from './cw_device_type.service';\nimport { CwDeviceTypeController } from './cw_device_type.controller';\nimport { SupabaseModule } from 'src/supabase/supabase.module';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { DeviceTypeRepository } from 'src/repositories/cw_device_type.repository';\n\n@Module({\n  imports: [SupabaseModule, AuthModule],\n  providers: [\n    CwDeviceTypeService,\n    DeviceTypeRepository,\n    \n  ],\n  controllers: [CwDeviceTypeController],\n  exports: [CwDeviceTypeService],\n})\nexport class CwDeviceTypeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CwDeviceTypeService.html":{"url":"injectables/CwDeviceTypeService.html","title":"injectable - CwDeviceTypeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CwDeviceTypeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_device_type/cw_device_type.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getDeviceTypeByDevType\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                fullUpdate\n                            \n                            \n                                    Async\n                                partialUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deviceTypeRepository: DeviceTypeRepository)\n                    \n                \n                        \n                            \n                                Defined in src/cw_device_type/cw_device_type.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deviceTypeRepository\n                                                  \n                                                        \n                                                                        DeviceTypeRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getDeviceTypeByDevType\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDeviceTypeByDevType(devType: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cw_device_type/cw_device_type.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                devType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:21\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:13\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fullUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    fullUpdate(id: number, dto: T | UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:29\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                        T | UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        partialUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    partialUpdate(id: number, dto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:25\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { BaseService } from 'src/bases/base.service';\nimport { CreateDeviceTypeDto } from './dto/create-device-type.dto';\nimport { UpdateDeviceTypeDto } from './dto/update-device-type.dto';\nimport { DeviceTypeRepository } from 'src/repositories/cw_device_type.repository';\nimport { DeviceTypeRow } from 'src/common/database-types';\n\n@Injectable()\nexport class CwDeviceTypeService extends BaseService {\n  constructor(private readonly deviceTypeRepository: DeviceTypeRepository) {\n    super(deviceTypeRepository);\n  }\n\n  public async getDeviceTypeByDevType(devType: string): Promise {\n    return this.deviceTypeRepository.findByDeviceType({ dev_type: devType });\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CwDevicesController.html":{"url":"controllers/CwDevicesController.html","title":"controller - CwDevicesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CwDevicesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_devices/cw_devices.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cw-devices\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                Delete\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                FullUpdate\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                PartialUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCommonAuth('Create a new item')@ApiCreateResponses()\n                \n            \n\n                    \n                        \n                            Inherited from         BaseController\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseController:35\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        Delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    Delete(createDto: CreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()@ApiCommonAuth('Delete a single item')@ApiDeleteResponses()\n                \n            \n\n                    \n                        \n                            Inherited from         BaseController\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseController:56\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiCommonAuth('Get all items')@CommonResponses()@ApiGetResponses()\n                \n            \n\n                    \n                        \n                            Inherited from         BaseController\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseController:28\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        FullUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    FullUpdate(id: number, updateDto: UpdateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiCommonAuth('Fully update a single item')@ApiCreateResponses()\n                \n            \n\n                    \n                        \n                            Inherited from         BaseController\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseController:49\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        PartialUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    PartialUpdate(id: number, updateDto: UpdateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiCommonAuth('Partially update a single item')@ApiCreateResponses()\n                \n            \n\n                    \n                        \n                            Inherited from         BaseController\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseController:42\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { CwDevicesService } from './cw_devices.service';\nimport { ApiBearerAuth, ApiSecurity, ApiTags } from '@nestjs/swagger';\n// import { BaseController } from 'src/bases/base.controller';\nimport { BaseController } from '../bases/base.controller';\nimport { CreateDeviceDto } from './dto/create-device.dto';\n// import { DevicesRow } from 'src/common/database-types';\nimport { DevicesRow } from '../common/database-types';\nimport { UpdateDeviceDto } from './dto/update-device.dto';\n\n@ApiBearerAuth('JWT')\n@ApiSecurity('x-api-key', ['x-api-key'])\n@ApiTags('Devices', 'Operations related to current JWT device management')\n@Controller('cw-devices')\nexport class CwDevicesController extends BaseController {\n  constructor(cwDevicesService: CwDevicesService) {\n    super(cwDevicesService);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CwDevicesModule.html":{"url":"modules/CwDevicesModule.html","title":"module - CwDevicesModule","body":"\n                   \n\n\n\n\n    Modules\n    CwDevicesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CwDevicesModule\n\n\n\ncluster_CwDevicesModule_exports\n\n\n\ncluster_CwDevicesModule_imports\n\n\n\ncluster_CwDevicesModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nCwDevicesModule\n\nCwDevicesModule\n\nCwDevicesModule -->\n\nAuthModule->CwDevicesModule\n\n\n\n\n\nSupabaseModule\n\nSupabaseModule\n\nCwDevicesModule -->\n\nSupabaseModule->CwDevicesModule\n\n\n\n\n\nCwDevicesService \n\nCwDevicesService \n\nCwDevicesService  -->\n\nCwDevicesModule->CwDevicesService \n\n\n\n\n\nCwDevicesService\n\nCwDevicesService\n\nCwDevicesModule -->\n\nCwDevicesService->CwDevicesModule\n\n\n\n\n\nDeviceRepository\n\nDeviceRepository\n\nCwDevicesModule -->\n\nDeviceRepository->CwDevicesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cw_devices/cw_devices.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CwDevicesService\n                        \n                        \n                            DeviceRepository\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CwDevicesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            SupabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CwDevicesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // src/cw_devices/cw_devices.module.ts\nimport { Module } from '@nestjs/common';\nimport { CwDevicesService } from './cw_devices.service';\nimport { CwDevicesController } from './cw_devices.controller';\nimport { SupabaseModule } from '../supabase/supabase.module';\nimport { AuthModule } from '../auth/auth.module';\nimport { DeviceRepository } from 'src/repositories/cw_devices.repository';\n\n@Module({\n  imports: [SupabaseModule, AuthModule],\n  providers: [CwDevicesService, DeviceRepository],\n  controllers: [CwDevicesController],\n  exports: [CwDevicesService],\n})\nexport class CwDevicesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CwDevicesService.html":{"url":"injectables/CwDevicesService.html","title":"injectable - CwDevicesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CwDevicesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_devices/cw_devices.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getDeviceByDevEui\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                fullUpdate\n                            \n                            \n                                    Async\n                                partialUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deviceRepository: DeviceRepository)\n                    \n                \n                        \n                            \n                                Defined in src/cw_devices/cw_devices.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deviceRepository\n                                                  \n                                                        \n                                                                        DeviceRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getDeviceByDevEui\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDeviceByDevEui(devEui: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cw_devices/cw_devices.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                devEui\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:21\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:13\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fullUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    fullUpdate(id: number, dto: T | UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:29\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                        T | UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        partialUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    partialUpdate(id: number, dto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:25\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { BaseService } from '../bases/base.service';\nimport { DeviceRepository } from '../repositories/cw_devices.repository';\nimport { UpdateDeviceDto } from './dto/update-device.dto';\nimport { CreateDeviceDto } from './dto/create-device.dto';\nimport { DevicesRow } from '../common/database-types';\n\n@Injectable()\nexport class CwDevicesService extends BaseService {\n  constructor(private readonly deviceRepository: DeviceRepository) {\n    super(deviceRepository);\n  }\n\n  public async getDeviceByDevEui(devEui: string): Promise {\n    return this.deviceRepository.findByDevEui({ dev_eui: devEui });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DataController.html":{"url":"controllers/DataController.html","title":"controller - DataController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DataController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/data.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                data\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(req, devEui?: string, skip: number, take: number, order: \"ASC\" | \"DESC\")\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Retrieve data with filters and pagination'})@ApiQuery({name: 'DevEui', required: false, type: String, description: 'Device EUI to filter data by specific device.'})@ApiQuery({name: 'Skip', required: false, type: Number, description: 'Number of records to skip. (default: 0)'})@ApiQuery({name: 'Take', required: false, type: Number, description: 'Number of records to retrieve. (default: 10)'})@ApiQuery({name: 'Order', required: false, type: String, description: 'Created_At Order direction, either ASC or DESC.'})@ApiBearerAuth('JWT')@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/data/data.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                devEui\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                skip\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                        \n                                                take\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                        \n                                                order\n                                            \n                                                        \"ASC\" | \"DESC\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'ASC'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query, Req } from '@nestjs/common';\nimport { DataService } from './data.service';\nimport { CreateDatumDto } from './dto/create-datum.dto';\nimport { UpdateDatumDto } from './dto/update-datum.dto';\nimport { ApiOperation, ApiQuery, ApiTags } from '@nestjs/swagger';\nimport { CwDeviceTypeService } from 'src/cw_device_type/cw_device_type.service';\nimport { CwDevicesService } from 'src/cw_devices/cw_devices.service';\nimport { ApiBearerAuth } from '@nestjs/swagger';\n\n\n@Controller('data')\n@ApiTags('CRUD operations for data related to devices rigistered to current JWT')\nexport class DataController {\n  constructor(\n    private readonly dataService: DataService,\n    private readonly deviceService: CwDevicesService,\n    private readonly deviceTypeService: CwDeviceTypeService,\n  ) { }\n\n  // @Post()\n  // create(@Body() createDatumDto: CreateDatumDto) {\n  //   return this.dataService.create(createDatumDto);\n  // }\n\n  @ApiOperation({ summary: 'Retrieve data with filters and pagination' })\n  @ApiQuery({ name: 'DevEui', required: false, type: String, description: 'Device EUI to filter data by specific device.' })\n  @ApiQuery({ name: 'Skip', required: false, type: Number, description: 'Number of records to skip. (default: 0)' })\n  @ApiQuery({ name: 'Take', required: false, type: Number, description: 'Number of records to retrieve. (default: 10)' })\n  @ApiQuery({ name: 'Order', required: false, type: String, description: 'Created_At Order direction, either ASC or DESC.' })\n  @ApiBearerAuth('JWT')\n  @Get()\n  findAll(\n    @Req() req,\n    @Query('DevEui') devEui?: string,\n    @Query('Skip') skip = 0,\n    @Query('Take') take = 10,\n    @Query('Order') order: 'ASC' | 'DESC' = 'ASC'\n  ) {\n    if (!req.user) {\n      return 'Unauthorized';\n    }\n    return this.dataService.findAll({ devEui, skip, take, order }, req.user.email);\n  }\n\n  // @Get(':id')\n  // findOne(@Param('id') id: string) {\n  //   return this.dataService.findOne(+id);\n  // }\n\n  // @Patch(':id')\n  // update(@Param('id') id: string, @Body() updateDatumDto: UpdateDatumDto) {\n  //   return this.dataService.update(+id, updateDatumDto);\n  // }\n\n  // @Delete(':id')\n  // remove(@Param('id') id: string) {\n  //   return this.dataService.remove(+id);\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n    Modules\n    DataModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataModule\n\n\n\ncluster_DataModule_imports\n\n\n\ncluster_DataModule_providers\n\n\n\ncluster_DataModule_exports\n\n\n\n\nCwDeviceTypeModule\n\nCwDeviceTypeModule\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nCwDeviceTypeModule->DataModule\n\n\n\n\n\nCwDevicesModule\n\nCwDevicesModule\n\nDataModule -->\n\nCwDevicesModule->DataModule\n\n\n\n\n\nDataRepository \n\nDataRepository \n\nDataRepository  -->\n\nDataModule->DataRepository \n\n\n\n\n\nDataService \n\nDataService \n\nDataService  -->\n\nDataModule->DataService \n\n\n\n\n\nCwDeviceOwnersService\n\nCwDeviceOwnersService\n\nDataModule -->\n\nCwDeviceOwnersService->DataModule\n\n\n\n\n\nCwDeviceTypeService\n\nCwDeviceTypeService\n\nDataModule -->\n\nCwDeviceTypeService->DataModule\n\n\n\n\n\nCwDevicesService\n\nCwDevicesService\n\nDataModule -->\n\nCwDevicesService->DataModule\n\n\n\n\n\nDataRepository\n\nDataRepository\n\nDataModule -->\n\nDataRepository->DataModule\n\n\n\n\n\nDataService\n\nDataService\n\nDataModule -->\n\nDataService->DataModule\n\n\n\n\n\nDeviceOwnerRepository\n\nDeviceOwnerRepository\n\nDataModule -->\n\nDeviceOwnerRepository->DataModule\n\n\n\n\n\nDeviceRepository\n\nDeviceRepository\n\nDataModule -->\n\nDeviceRepository->DataModule\n\n\n\n\n\nDeviceTypeRepository\n\nDeviceTypeRepository\n\nDataModule -->\n\nDeviceTypeRepository->DataModule\n\n\n\n\n\nSupabaseService\n\nSupabaseService\n\nDataModule -->\n\nSupabaseService->DataModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/data/data.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CwDeviceOwnersService\n                        \n                        \n                            CwDeviceTypeService\n                        \n                        \n                            CwDevicesService\n                        \n                        \n                            DataRepository\n                        \n                        \n                            DataService\n                        \n                        \n                            DeviceOwnerRepository\n                        \n                        \n                            DeviceRepository\n                        \n                        \n                            DeviceTypeRepository\n                        \n                        \n                            SupabaseService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DataController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CwDeviceTypeModule\n                        \n                        \n                            CwDevicesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DataRepository\n                        \n                        \n                            DataService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DataService } from './data.service';\nimport { DataController } from './data.controller';\nimport { CwDeviceTypeService } from 'src/cw_device_type/cw_device_type.service';\nimport { CwDevicesService } from 'src/cw_devices/cw_devices.service';\nimport { DataRepository } from 'src/repositories/data.repository';\nimport { DeviceRepository } from 'src/repositories/cw_devices.repository';\nimport { DeviceTypeRepository } from 'src/repositories/cw_device_type.repository';\nimport { SupabaseService } from 'src/supabase/supabase.service';\nimport { CwDeviceOwnersService } from 'src/cw_device_owners/cw_device_owners.service';\nimport { DeviceOwnerRepository } from 'src/repositories/cw_device_owners';\nimport { CwDevicesModule } from 'src/cw_devices/cw_devices.module';\nimport { CwDeviceTypeModule } from 'src/cw_device_type/cw_device_type.module';\n\n@Module({\n  imports: [\n    CwDevicesModule,\n    CwDeviceTypeModule,\n  ],\n  controllers: [DataController],\n  providers: [\n    DataService,\n    DeviceOwnerRepository, //WTF IS THIS???\n    CwDevicesService,\n    CwDeviceTypeService,\n    CwDeviceOwnersService,\n    DataRepository,\n    DeviceRepository,\n    DeviceTypeRepository,\n    SupabaseService,\n  ],\n  exports: [\n    DataService,\n    DataRepository,\n  ]\n})\nexport class DataModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataRepository.html":{"url":"injectables/DataRepository.html","title":"injectable - DataRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repositories/data.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findAllByTable\n                            \n                            \n                                    Public\n                                    Async\n                                findByIdInTable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(supabaseService: SupabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/repositories/data.repository.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        supabaseService\n                                                  \n                                                        \n                                                                        SupabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAllByTable\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByTable(tableName: string, devEui: string, skip: number, take: number, order: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositories/data.repository.ts:9\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                devEui\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                skip\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                take\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                order\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findByIdInTable\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByIdInTable(tableName: string, id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositories/data.repository.ts:25\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SupabaseService } from '../supabase/supabase.service';\n\n@Injectable()\nexport class DataRepository {\n  constructor(private readonly supabaseService: SupabaseService) {}\n\n  public async findAllByTable(tableName: string, devEui: string, skip: number, take: number, order: boolean): Promise {\n    const { data, error } = await this.supabaseService\n      .getSupabaseClient()\n      .from(tableName)\n      .select('*')\n      .eq('dev_eui', devEui)\n      .range(skip, skip + take - 1)\n      .order('created_at', { ascending: order });\n\n    if (error) {\n      throw new Error(`Failed to retrieve data from table ${tableName}: ${error.message}`);\n    }\n\n    return data || [];\n  }\n\n  public async findByIdInTable(tableName: string, id: number): Promise {\n    const { data, error } = await this.supabaseService\n      .getSupabaseClient()\n      .from(tableName)\n      .select('*')\n      .eq('id', id)\n      .single();\n\n    if (error) {\n      throw new Error(`Failed to find record with id ${id} in table ${tableName}: ${error.message}`);\n    }\n\n    return data || null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                getDevice\n                            \n                            \n                                    Private\n                                    Async\n                                getDeviceTypeData\n                            \n                            \n                                    Private\n                                validateDevEui\n                            \n                            \n                                    Private\n                                    Async\n                                validateDeviceOwner\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deviceService: CwDevicesService, deviceTypeService: CwDeviceTypeService, deviceOwnerService: CwDeviceOwnersService, dataRepository: DataRepository)\n                    \n                \n                        \n                            \n                                Defined in src/data/data.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deviceService\n                                                  \n                                                        \n                                                                        CwDevicesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deviceTypeService\n                                                  \n                                                        \n                                                                        CwDeviceTypeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deviceOwnerService\n                                                  \n                                                        \n                                                                        CwDeviceOwnersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataRepository\n                                                  \n                                                        \n                                                                        DataRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(params: FindAllParams, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/data.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            FindAllParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getDevice\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDevice(devEui: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/data.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                devEui\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getDeviceTypeData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDeviceTypeData(deviceType: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/data.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                deviceType\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        validateDevEui\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateDevEui(devEui?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/data.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                devEui\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        validateDeviceOwner\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateDeviceOwner(devEui: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/data.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                devEui\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, NotAcceptableException, NotFoundException, NotImplementedException } from '@nestjs/common';\nimport { CreateDatumDto } from './dto/create-datum.dto';\nimport { UpdateDatumDto } from './dto/update-datum.dto';\nimport { CwDevicesService } from 'src/cw_devices/cw_devices.service';\nimport { CwDeviceTypeService } from 'src/cw_device_type/cw_device_type.service';\nimport { Database } from 'database.types';\nimport { DataRepository } from 'src/repositories/data.repository';\nimport { CwDeviceOwnersService } from 'src/cw_device_owners/cw_device_owners.service';\n\nexport interface FindAllParams {\n  devEui?: string;\n  skip: number;\n  take: number;\n  order: 'ASC' | 'DESC';\n}\n\n@Injectable()\nexport class DataService {\n  constructor(\n    private readonly deviceService: CwDevicesService,\n    private readonly deviceTypeService: CwDeviceTypeService,\n    private readonly deviceOwnerService: CwDeviceOwnersService,\n    private readonly dataRepository: DataRepository,\n  ) { }\n\n  // create(createDatumDto: CreateDatumDto) {\n  //   return new NotImplementedException();\n  // }\n\n  async findAll(params: FindAllParams, email: string): Promise {\n    const { devEui, skip, take, order } = params;\n    this.validateDevEui(devEui);\n    await this.validateDeviceOwner(devEui, email);\n    const device = await this.getDevice(devEui);\n    const deviceTypeData = await this.getDeviceTypeData(device.type);\n    return this.dataRepository.findAllByTable(\n      deviceTypeData.data_table,\n      devEui,\n      skip,\n      take,\n      order === 'ASC'\n    );\n  }\n\n  private validateDevEui(devEui?: string): void {\n    if (!devEui) {\n      throw new BadRequestException('DevEui is required');\n    }\n  }\n\n  private async validateDeviceOwner(devEui: string, email: string): Promise {\n    const deviceOwner = await this.deviceOwnerService.getDeviceOwnerByDevEuiAndUID(devEui, email);\n    if (!deviceOwner) {\n      throw new NotAcceptableException('Device does not exist OR Device Owner not found');\n    }\n  }\n\n  private async getDevice(devEui: string) {\n    const device = await this.deviceService.getDeviceByDevEui(devEui);\n    if (!device) {\n      throw new NotFoundException('Device not found');\n    }\n    return device;\n  }\n\n  private async getDeviceTypeData(deviceType: number) {\n    if (!deviceType) {\n      throw new NotFoundException('Device type not found');\n    }\n    const deviceTypeData = await this.deviceTypeService.findById(deviceType);\n    if (!deviceTypeData || !deviceTypeData.data_table) {\n      throw new NotFoundException('Device type data or data table not found');\n    }\n    return deviceTypeData;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Datum.html":{"url":"classes/Datum.html","title":"class - Datum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Datum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/entities/datum.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Datum {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeviceOwnerRepository.html":{"url":"injectables/DeviceOwnerRepository.html","title":"injectable - DeviceOwnerRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeviceOwnerRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repositories/cw_device_owners.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findByDevEuiAndUID\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                fullUpdate\n                            \n                            \n                                    Async\n                                partialUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(supabaseService: SupabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/repositories/cw_device_owners.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        supabaseService\n                                                  \n                                                        \n                                                                        SupabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findByDevEuiAndUID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByDevEuiAndUID(dev_eui: string, user_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositories/cw_device_owners.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dev_eui\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(item: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:41\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:82\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:17\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:28\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fullUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    fullUpdate(id: number | string, item: T, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:68\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                item\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        partialUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    partialUpdate(id: number | string, item: Partial, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:54\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SupabaseService } from '../supabase/supabase.service';\nimport { BaseRepository } from './base.repository';\nimport { DeviceOwnerRow } from 'src/common/database-types';\n\n@Injectable()\nexport class DeviceOwnerRepository extends BaseRepository {\n  constructor(supabaseService: SupabaseService) {\n    super(supabaseService, 'cw_device_owners');\n  }\n\n  public async findByDevEuiAndUID(dev_eui: string, user_id: string): Promise {\n    const { data, error } = await this.supabaseService\n      .getSupabaseClient()\n      .from('cw_device_owners')\n      .select('*')\n      .eq('dev_eui', dev_eui)\n      .eq('user_id', user_id)\n      .single();\n    if (error) {\n      throw new Error(`Failed to find device owner with dev_eui ${dev_eui}: ${error.message}`);\n    }\n    if (!data) {\n      throw new Error(`Device owner with dev_eui ${dev_eui} not found.`);\n    }\n    return data as DeviceOwnerRow;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeviceRepository.html":{"url":"injectables/DeviceRepository.html","title":"injectable - DeviceRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeviceRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repositories/cw_devices.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findByDevEui\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                fullUpdate\n                            \n                            \n                                    Async\n                                partialUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(supabaseService: SupabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/repositories/cw_devices.repository.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        supabaseService\n                                                  \n                                                        \n                                                                        SupabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findByDevEui\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByDevEui(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositories/cw_devices.repository.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(item: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:41\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:82\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:17\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:28\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fullUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    fullUpdate(id: number | string, item: T, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:68\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                item\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        partialUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    partialUpdate(id: number | string, item: Partial, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:54\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SupabaseService } from '../supabase/supabase.service';\nimport { BaseRepository } from './base.repository';\nimport { DeviceRow } from 'src/common/database-types';\n\n@Injectable()\nexport class DeviceRepository extends BaseRepository {\n    constructor(supabaseService: SupabaseService) {\n        super(supabaseService, 'cw_devices');\n    }\n\n    public async findByDevEui({ dev_eui }: { dev_eui: string }): Promise {\n        const { data, error } = await this.supabaseService\n            .getSupabaseClient()\n            .from('cw_devices')\n            .select('*')\n            .eq('dev_eui', dev_eui)\n            .single();\n        if (error) {\n            throw new Error(`Failed to find device with dev_eui ${dev_eui}: ${error.message}`);\n        }\n        if (!data) {\n            throw new Error(`Device with dev_eui ${dev_eui} not found.`);\n        }\n        return data as DeviceRow;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeviceTypeRepository.html":{"url":"injectables/DeviceTypeRepository.html","title":"injectable - DeviceTypeRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeviceTypeRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repositories/cw_device_type.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findByDeviceType\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                fullUpdate\n                            \n                            \n                                    Async\n                                partialUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(supabaseService: SupabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/repositories/cw_device_type.repository.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        supabaseService\n                                                  \n                                                        \n                                                                        SupabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findByDeviceType\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByDeviceType(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositories/cw_device_type.repository.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(item: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:41\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:82\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:17\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:28\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fullUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    fullUpdate(id: number | string, item: T, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:68\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                item\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        partialUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    partialUpdate(id: number | string, item: Partial, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:54\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SupabaseService } from '../supabase/supabase.service';\nimport { BaseRepository } from './base.repository';\nimport { DeviceTypeRow } from 'src/common/database-types';\n\n@Injectable()\nexport class DeviceTypeRepository extends BaseRepository {\n    constructor(supabaseService: SupabaseService) {\n        super(supabaseService, 'cw_device_type');\n    }\n\n    public async findByDeviceType({ dev_type }: { dev_type: string }): Promise {\n        const { data, error } = await this.supabaseService\n            .getSupabaseClient()\n            .from('cw_device_type')\n            .select('*')\n            .eq('dev_type', dev_type)\n            .single();\n        if (error) {\n            throw new Error(`Failed to find device type with dev_type ${dev_type}: ${error.message}`);\n        }\n        if (!data) {\n            throw new Error(`Device type with dev_type ${dev_type} not found.`);\n        }\n        return data as DeviceTypeRow;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FindAllParams.html":{"url":"interfaces/FindAllParams.html","title":"interface - FindAllParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FindAllParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/data.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            devEui\n                                        \n                                \n                                \n                                        \n                                            order\n                                        \n                                \n                                \n                                        \n                                            skip\n                                        \n                                \n                                \n                                        \n                                            take\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        devEui\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        devEui:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:     \"ASC\" | \"DESC\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"ASC\" | \"DESC\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        take\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        take:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BadRequestException, Injectable, NotAcceptableException, NotFoundException, NotImplementedException } from '@nestjs/common';\nimport { CreateDatumDto } from './dto/create-datum.dto';\nimport { UpdateDatumDto } from './dto/update-datum.dto';\nimport { CwDevicesService } from 'src/cw_devices/cw_devices.service';\nimport { CwDeviceTypeService } from 'src/cw_device_type/cw_device_type.service';\nimport { Database } from 'database.types';\nimport { DataRepository } from 'src/repositories/data.repository';\nimport { CwDeviceOwnersService } from 'src/cw_device_owners/cw_device_owners.service';\n\nexport interface FindAllParams {\n  devEui?: string;\n  skip: number;\n  take: number;\n  order: 'ASC' | 'DESC';\n}\n\n@Injectable()\nexport class DataService {\n  constructor(\n    private readonly deviceService: CwDevicesService,\n    private readonly deviceTypeService: CwDeviceTypeService,\n    private readonly deviceOwnerService: CwDeviceOwnersService,\n    private readonly dataRepository: DataRepository,\n  ) { }\n\n  // create(createDatumDto: CreateDatumDto) {\n  //   return new NotImplementedException();\n  // }\n\n  async findAll(params: FindAllParams, email: string): Promise {\n    const { devEui, skip, take, order } = params;\n    this.validateDevEui(devEui);\n    await this.validateDeviceOwner(devEui, email);\n    const device = await this.getDevice(devEui);\n    const deviceTypeData = await this.getDeviceTypeData(device.type);\n    return this.dataRepository.findAllByTable(\n      deviceTypeData.data_table,\n      devEui,\n      skip,\n      take,\n      order === 'ASC'\n    );\n  }\n\n  private validateDevEui(devEui?: string): void {\n    if (!devEui) {\n      throw new BadRequestException('DevEui is required');\n    }\n  }\n\n  private async validateDeviceOwner(devEui: string, email: string): Promise {\n    const deviceOwner = await this.deviceOwnerService.getDeviceOwnerByDevEuiAndUID(devEui, email);\n    if (!deviceOwner) {\n      throw new NotAcceptableException('Device does not exist OR Device Owner not found');\n    }\n  }\n\n  private async getDevice(devEui: string) {\n    const device = await this.deviceService.getDeviceByDevEui(devEui);\n    if (!device) {\n      throw new NotFoundException('Device not found');\n    }\n    return device;\n  }\n\n  private async getDeviceTypeData(deviceType: number) {\n    if (!deviceType) {\n      throw new NotFoundException('Device type not found');\n    }\n    const deviceTypeData = await this.deviceTypeService.findById(deviceType);\n    if (!deviceTypeData || !deviceTypeData.data_table) {\n      throw new NotFoundException('Device type data or data table not found');\n    }\n    return deviceTypeData;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GeolocationController.html":{"url":"controllers/GeolocationController.html","title":"controller - GeolocationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GeolocationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/geolocation/geolocation.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                geolocation\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getProtectedRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getProtectedRoute\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProtectedRoute()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('JWT')@Get('address')@UseGuards(SupabaseAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/geolocation/geolocation.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { SupabaseAuthGuard } from 'src/auth/guards/supabase.guard';\nimport { GeolocationService } from './geolocation.service';\n\n@ApiTags('Addresses')\n@Controller('geolocation')\nexport class GeolocationController {\n    constructor(private readonly geoLocationService: GeolocationService) { }\n\n    @ApiBearerAuth('JWT')\n    @Get('address')\n    @UseGuards(SupabaseAuthGuard)\n    async getProtectedRoute() {\n        const location = await this.geoLocationService.getGeolocation('Africa House, 70 Kingsway, London WC2B 6AH, United Kingdom');\n        return { message: 'Geolocation fetched', location };\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GeolocationModule.html":{"url":"modules/GeolocationModule.html","title":"module - GeolocationModule","body":"\n                   \n\n\n\n\n    Modules\n    GeolocationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GeolocationModule\n\n\n\ncluster_GeolocationModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nGeolocationModule\n\nGeolocationModule\n\nGeolocationModule -->\n\nAuthService->GeolocationModule\n\n\n\n\n\nGeolocationService\n\nGeolocationService\n\nGeolocationModule -->\n\nGeolocationService->GeolocationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/geolocation/geolocation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            GeolocationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GeolocationController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GeolocationController } from './geolocation.controller';\nimport { GeolocationService } from './geolocation.service';\nimport { AuthService } from 'src/auth/auth.service';\n\n@Module({\n  controllers: [GeolocationController],\n  providers: [GeolocationService, AuthService]\n})\nexport class GeolocationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeolocationService.html":{"url":"injectables/GeolocationService.html","title":"injectable - GeolocationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GeolocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/geolocation/geolocation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getGeolocation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getGeolocation\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGeolocation(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/geolocation/geolocation.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class GeolocationService {\n\n    public async getGeolocation(address: string) {\n        const response = await fetch(`https://geocode.maps.co/search?q=${address}&api_key=${process.env.GEOCODING_API_KEY}`);\n        \n        if (!response.ok) {\n            throw new Error(`Error fetching geolocation: ${response.statusText}`);\n        }\n\n        const data = await response.json();\n        return data;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@HealthCheck()\n                \n            \n\n                    \n                        \n                            Defined in src/health/health.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { HealthCheckService, HttpHealthIndicator, HealthCheck } from '@nestjs/terminus';\nimport { Public } from 'src/auth/public.decorator';\n\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n  ) {}\n\n  @Get()\n  @Public()\n  @HealthCheck()\n  check() {\n    return this.health.check([\n      () => this.http.pingCheck('nestjs-docs', 'https://docs.nestjs.com'),\n    ]);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HttpModule } from '@nestjs/axios';\nimport { HealthController } from './health.controller';\n\n@Module({\n  imports: [TerminusModule, HttpModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpCacheInterceptor.html":{"url":"injectables/HttpCacheInterceptor.html","title":"injectable - HttpCacheInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpCacheInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/http-cache.interceptor.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CacheInterceptor\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                trackBy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        trackBy\n                        \n                    \n                \n            \n            \n                \ntrackBy(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/http-cache.interceptor.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CacheInterceptor } from '@nestjs/cache-manager';\nimport { ExecutionContext, Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class HttpCacheInterceptor extends CacheInterceptor {\n  trackBy(context: ExecutionContext): string | undefined {\n    const request = context.switchToHttp().getRequest();\n    const { httpAdapter } = this.httpAdapterHost;\n\n    const isGetRequest = httpAdapter.getRequestMethod(request) === 'GET';\n    const excludePaths = [\n      // Routes to be excluded\n    ];\n    if (\n      !isGetRequest ||\n      (isGetRequest &&\n        excludePaths.includes(httpAdapter.getRequestUrl(request)))\n    ) {\n      return undefined;\n    }\n    return httpAdapter.getRequestUrl(request);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRepositoryBase.html":{"url":"interfaces/IRepositoryBase.html","title":"interface - IRepositoryBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRepositoryBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/repositoryBase.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        findAll\n                                    \n                                \n                                \n                                    \n                                        findOne\n                                    \n                                \n                                \n                                    \n                                        remove\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interfaces/repositoryBase.interface.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/interfaces/repositoryBase.interface.ts:3\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interfaces/repositoryBase.interface.ts:2\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interfaces/repositoryBase.interface.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interfaces/repositoryBase.interface.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface IRepositoryBase {\n  findOne(id: number): Promise;\n  findAll(): Promise;\n  create(entity: T): Promise;\n  update(id: number, entity: T): Promise;\n  remove(id: number): Promise;\n}\n\n\nexport interface RepositoryInterface {\n  findAll(): Promise;\n  findById(id: string): Promise;\n  create(entity: T): Promise;\n  update(id: string, entity: Partial): Promise;\n  delete(id: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/JwtAuthGuard.html":{"url":"guards/JwtAuthGuard.html","title":"guard - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/jwt-auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                    Async\n                                checkApiKey\n                            \n                            \n                                    Private\n                                    Async\n                                checkJwtToken\n                            \n                            \n                                    Private\n                                extractTokenFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/jwt-auth.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt-auth.guard.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        checkApiKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkApiKey(request: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt-auth.guard.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        checkJwtToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkJwtToken(request: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt-auth.guard.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractTokenFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractTokenFromHeader(request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt-auth.guard.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\nimport { IS_PUBLIC_KEY } from '../public.decorator';\nimport { Reflector } from '@nestjs/core';\n\n\n@Injectable()\nexport class JwtAuthGuard implements CanActivate {\n    constructor(\n        private reflector: Reflector,\n        private authService: AuthService\n    ) { }\n\n    async canActivate(context: ExecutionContext): Promise {\n        const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n            context.getHandler(),\n            context.getClass(),\n        ]);\n        if (isPublic) {\n            return true;\n        }\n\n        const request = context.switchToHttp().getRequest();\n        if (await this.checkApiKey(request)) return true;\n\n        // If no API key? check for Bearer token\n        if (await this.checkJwtToken(request)) return true;\n    }\n\n    private async checkJwtToken(request: any): Promise {\n        const token = this.extractTokenFromHeader(request);\n        if (!token) {\n            throw new UnauthorizedException('Token not found');\n        }\n        try {\n            const user = await this.authService.validateUser(token);\n            request.user = user;\n            return true;\n        } catch (error) {\n            throw new UnauthorizedException(error);\n        }\n    }\n\n    private async checkApiKey(request: any): Promise {\n        request.user = {};\n        const apiKey = request.headers['x-api-key'];\n        if (apiKey) {\n            const isValidApiKey = await this.authService.validateApiKey(apiKey);\n            if (!isValidApiKey) {\n                throw new UnauthorizedException('Invalid API key');\n            }\n            request.user.id = isValidApiKey;\n            return true;\n        }\n    }\n\n    private extractTokenFromHeader(request): string | null {\n        const authHeader = request.headers.authorization;\n        if (!authHeader || !authHeader.startsWith('Bearer ')) {\n            return null;\n        }\n        return authHeader.split(' ')[1];\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Location.html":{"url":"classes/Location.html","title":"class - Location","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Location\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/entities/location.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Location {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LocationController.html":{"url":"controllers/LocationController.html","title":"controller - LocationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LocationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/location.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                location\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                Delete\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                FullUpdate\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                PartialUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCommonAuth('Create a new item')@ApiCreateResponses()\n                \n            \n\n                    \n                        \n                            Inherited from         BaseController\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseController:35\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        Delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    Delete(createDto: CreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()@ApiCommonAuth('Delete a single item')@ApiDeleteResponses()\n                \n            \n\n                    \n                        \n                            Inherited from         BaseController\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseController:56\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiCommonAuth('Get all items')@CommonResponses()@ApiGetResponses()\n                \n            \n\n                    \n                        \n                            Inherited from         BaseController\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseController:28\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        FullUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    FullUpdate(id: number, updateDto: UpdateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiCommonAuth('Fully update a single item')@ApiCreateResponses()\n                \n            \n\n                    \n                        \n                            Inherited from         BaseController\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseController:49\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        PartialUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    PartialUpdate(id: number, updateDto: UpdateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiCommonAuth('Partially update a single item')@ApiCreateResponses()\n                \n            \n\n                    \n                        \n                            Inherited from         BaseController\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseController:42\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { LocationService } from './location.service';\nimport { CreateLocationDto } from './dto/create-location.dto';\nimport { ApiTags } from '@nestjs/swagger';\nimport { BaseController } from 'src/bases/base.controller';\nimport { LocationsRow } from 'src/common/database-types';\nimport { UpdateLocationDto } from './dto/update-location.dto';\n\n@ApiTags('Locations')\n@Controller('location')\nexport class LocationController extends BaseController  {\n  constructor(locationService: LocationService) {\n    super(locationService);\n  }\n\n  // @Post()\n  // create(@Body() createLocationDto: CreateLocationDto) {\n  //   return this.locationService.create(createLocationDto);\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocationModule.html":{"url":"modules/LocationModule.html","title":"module - LocationModule","body":"\n                   \n\n\n\n\n    Modules\n    LocationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_imports\n\n\n\ncluster_LocationModule_providers\n\n\n\n\nSupabaseModule\n\nSupabaseModule\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nSupabaseModule->LocationModule\n\n\n\n\n\nLocationRepository\n\nLocationRepository\n\nLocationModule -->\n\nLocationRepository->LocationModule\n\n\n\n\n\nLocationService\n\nLocationService\n\nLocationModule -->\n\nLocationService->LocationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/location/location.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LocationRepository\n                        \n                        \n                            LocationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LocationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SupabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LocationController } from './location.controller';\nimport { LocationService } from './location.service';\nimport { LocationRepository } from 'src/repositories/cw_location.repository';\nimport { SupabaseModule } from 'src/supabase/supabase.module';\nimport { BaseRepository } from 'src/repositories/base.repository';\n\n@Module({\n  imports: [SupabaseModule],\n  controllers: [LocationController],\n  providers: [\n    LocationService,\n    LocationRepository,\n    BaseRepository,\n  ],\n})\nexport class LocationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocationRepository.html":{"url":"injectables/LocationRepository.html","title":"injectable - LocationRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocationRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repositories/cw_location.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                fullUpdate\n                            \n                            \n                                    Async\n                                partialUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(supabaseService: SupabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/repositories/cw_location.repository.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        supabaseService\n                                                  \n                                                        \n                                                                        SupabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(item: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:41\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:82\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:17\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:28\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fullUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    fullUpdate(id: number | string, item: T, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:68\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                item\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        partialUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    partialUpdate(id: number | string, item: Partial, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:54\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SupabaseService } from '../supabase/supabase.service';\nimport { BaseRepository } from './base.repository';\nimport { LocationRow } from 'src/common/database-types';\n\n@Injectable()\nexport class LocationRepository extends BaseRepository {\n  constructor(supabaseService: SupabaseService) {\n    super(supabaseService, 'cw_locations');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocationService.html":{"url":"injectables/LocationService.html","title":"injectable - LocationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/location.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                fullUpdate\n                            \n                            \n                                    Async\n                                partialUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: BaseRepository)\n                    \n                \n                        \n                            \n                                Defined in src/location/location.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        BaseRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:21\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:13\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fullUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    fullUpdate(id: number, dto: T | UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:29\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                        T | UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        partialUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    partialUpdate(id: number, dto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:25\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateLocationDto } from './dto/create-location.dto';\nimport { UpdateLocationDto } from './dto/update-location.dto';\nimport { BaseService } from 'src/bases/base.service';\nimport { BaseRepository } from 'src/repositories/base.repository';\nimport { LocationRow } from 'src/common/database-types';\n\n@Injectable()\nexport class LocationService extends BaseService {\n  constructor(repository: BaseRepository) {\n    super(repository);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/DTOs/userAuth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User email address'})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/DTOs/userAuth.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User password'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/DTOs/userAuth.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsEmail } from 'class-validator';\n\nexport class UserAuthDto {\n  @ApiProperty({ description: 'JWT authentication token' })\n  @IsString()\n  token: string;\n}\n\nexport class LoginDto {\n  @ApiProperty({ description: 'User email address' })\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({ description: 'User password' })\n  @IsString()\n  password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PdfController.html":{"url":"controllers/PdfController.html","title":"controller - PdfController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PdfController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pdf/pdf.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                pdf\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        getFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFile(res: Response, req, devEui: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiSecurity('x-api-key', ['x-api-key'])@ApiBearerAuth('JWT')@UseGuards(SupabaseAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/pdf/pdf.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                devEui\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        // pdf.controller.ts\nimport { Controller, Get, Res, UseGuards, Req, Body, Query } from '@nestjs/common';\nimport { ApiBearerAuth, ApiSecurity, ApiTags } from '@nestjs/swagger';\nimport { Response } from 'express';\nimport { PdfService } from './pdf.service';\nimport { SupabaseAuthGuard } from 'src/auth/guards/supabase.guard';\n\n@ApiTags('📄 PDF - Serve a PDF file')\n@Controller('pdf')\nexport class PdfController {\n    constructor(private readonly pdfService: PdfService) { }\n\n    @Get()\n    @ApiSecurity('x-api-key', ['x-api-key'])\n    @ApiBearerAuth('JWT')\n    @UseGuards(SupabaseAuthGuard)\n    async getFile(\n        @Res() res: Response,\n        @Req() req,\n        @Query('devEui') devEui: string\n    ): Promise {\n        const user_id = req.user.id;\n        const pdfBuffer = await this.pdfService.createPdfBinary(user_id, devEui);\n        res.set({\n            'Content-Type': 'application/pdf',\n            'Content-Disposition': 'attachment; filename=\"report.pdf\"',\n            'Content-Length': pdfBuffer.length,\n        });\n        res.send(pdfBuffer);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PdfDTO.html":{"url":"classes/PdfDTO.html","title":"class - PdfDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PdfDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pdf/dto/pdf.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                devEui\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        devEui\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Dev Eui of the device to generate a report for.'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pdf/dto/pdf.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class PdfDTO {\n  @ApiProperty({ description: 'Dev Eui of the device to generate a report for.' })\n  @IsString()\n  devEui: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PdfModule.html":{"url":"modules/PdfModule.html","title":"module - PdfModule","body":"\n                   \n\n\n\n\n    Modules\n    PdfModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PdfModule\n\n\n\ncluster_PdfModule_imports\n\n\n\ncluster_PdfModule_providers\n\n\n\n\nCwDeviceOwnersModule\n\nCwDeviceOwnersModule\n\n\n\nPdfModule\n\nPdfModule\n\nPdfModule -->\n\nCwDeviceOwnersModule->PdfModule\n\n\n\n\n\nCwDeviceTypeModule\n\nCwDeviceTypeModule\n\nPdfModule -->\n\nCwDeviceTypeModule->PdfModule\n\n\n\n\n\nCwDevicesModule\n\nCwDevicesModule\n\nPdfModule -->\n\nCwDevicesModule->PdfModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nPdfModule -->\n\nDataModule->PdfModule\n\n\n\n\n\nReportsTemplatesModule\n\nReportsTemplatesModule\n\nPdfModule -->\n\nReportsTemplatesModule->PdfModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nPdfModule -->\n\nAuthService->PdfModule\n\n\n\n\n\nDataService\n\nDataService\n\nPdfModule -->\n\nDataService->PdfModule\n\n\n\nPdfModule -->\n\nDataService->PdfModule\n\n\n\n\n\nPdfService\n\nPdfService\n\nPdfModule -->\n\nPdfService->PdfModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/pdf/pdf.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            DataService\n                        \n                        \n                            DataService\n                        \n                        \n                            PdfService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PdfController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CwDeviceOwnersModule\n                        \n                        \n                            CwDeviceTypeModule\n                        \n                        \n                            CwDevicesModule\n                        \n                        \n                            DataModule\n                        \n                        \n                            ReportsTemplatesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PdfController } from './pdf.controller';\nimport { PdfService } from './pdf.service';\nimport { DataService } from 'src/data/data.service';\nimport { DataModule } from 'src/data/data.module';\nimport { CwDevicesModule } from 'src/cw_devices/cw_devices.module';\nimport { CwDeviceTypeModule } from 'src/cw_device_type/cw_device_type.module';\nimport { CwDeviceOwnersModule } from 'src/cw_device_owners/cw_device_owners.module';\nimport { AuthService } from 'src/auth/auth.service';\nimport { ReportsTemplatesModule } from 'src/reports_templates/reports_templates.module';\n\n@Module({\n  imports: [\n    DataModule,\n    CwDevicesModule,\n    CwDeviceTypeModule,\n    CwDeviceOwnersModule,\n    ReportsTemplatesModule,\n  ],\n  controllers: [PdfController],\n  providers: [\n    PdfService,\n    DataService,\n    DataService,\n    AuthService,\n  ]\n})\nexport class PdfModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PdfService.html":{"url":"injectables/PdfService.html","title":"injectable - PdfService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PdfService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pdf/pdf.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                fonts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createPdfBinary\n                            \n                            \n                                    Private\n                                    Async\n                                fetchDataAndReportFromDB\n                            \n                            \n                                    Private\n                                insertDataIntoReport\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, reportsTemplatesService: ReportsTemplatesService)\n                    \n                \n                        \n                            \n                                Defined in src/pdf/pdf.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reportsTemplatesService\n                                                  \n                                                        \n                                                                        ReportsTemplatesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createPdfBinary\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPdfBinary(user_id: string, devEui: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/pdf/pdf.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                devEui\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        fetchDataAndReportFromDB\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchDataAndReportFromDB(devEui: string, user_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/pdf/pdf.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                devEui\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        insertDataIntoReport\n                        \n                    \n                \n            \n            \n                \n                        \n                    insertDataIntoReport(reportJson: string, data: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/pdf/pdf.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reportJson\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fonts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TFontDictionary\n\n                    \n                \n                \n                    \n                        Default value : {\n        Roboto: {\n            normal: join(process.cwd(), 'dist', '', 'src/assets/fonts/Roboto/Roboto-Regular.ttf'),\n            bold: join(process.cwd(), 'dist', '', 'src/assets/fonts/Roboto/Roboto-Medium.ttf'),\n            italics: join(process.cwd(), 'dist', '', 'src/assets/fonts/Roboto/Roboto-Italic.ttf'),\n            bolditalics: join(process.cwd(), 'dist', '', 'src/assets/fonts/Roboto/Roboto-MediumItalic.ttf'),\n        },\n        Noto_Sans_JP: {\n            normal: join(process.cwd(), 'dist', '', 'src/assets/fonts/Noto_Sans_JP/static/NotoSansJP-Regular.ttf'),\n            bold: join(process.cwd(), 'dist', '', 'src/assets/fonts/Noto_Sans_JP/static/NotoSansJP-Medium.ttf'),\n            italics: join(process.cwd(), 'dist', '', 'src/assets/fonts/Noto_Sans_JP/static/NotoSansJP-Light.ttf'),\n            bolditalics: join(process.cwd(), 'dist', '', 'src/assets/fonts/Noto_Sans_JP/static/NotoSansJP-Light.ttf'),\n        },\n    }\n                    \n                \n                    \n                        \n                                Defined in src/pdf/pdf.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { join } from 'path';\nimport PdfPrinter from 'pdfmake';\nimport { TDocumentDefinitions, TFontDictionary } from 'pdfmake/build/pdfmake';\nimport { DataService } from 'src/data/data.service';\nimport { ReportsTemplatesService } from 'src/reports_templates/reports_templates.service';\n\n\n@Injectable()\nexport class PdfService {\n    constructor(\n        private readonly dataService: DataService,\n        private readonly reportsTemplatesService: ReportsTemplatesService\n    ) { }\n\n    private fonts: TFontDictionary = {\n        Roboto: {\n            normal: join(process.cwd(), 'dist', '', 'src/assets/fonts/Roboto/Roboto-Regular.ttf'),\n            bold: join(process.cwd(), 'dist', '', 'src/assets/fonts/Roboto/Roboto-Medium.ttf'),\n            italics: join(process.cwd(), 'dist', '', 'src/assets/fonts/Roboto/Roboto-Italic.ttf'),\n            bolditalics: join(process.cwd(), 'dist', '', 'src/assets/fonts/Roboto/Roboto-MediumItalic.ttf'),\n        },\n        Noto_Sans_JP: {\n            normal: join(process.cwd(), 'dist', '', 'src/assets/fonts/Noto_Sans_JP/static/NotoSansJP-Regular.ttf'),\n            bold: join(process.cwd(), 'dist', '', 'src/assets/fonts/Noto_Sans_JP/static/NotoSansJP-Medium.ttf'),\n            italics: join(process.cwd(), 'dist', '', 'src/assets/fonts/Noto_Sans_JP/static/NotoSansJP-Light.ttf'),\n            bolditalics: join(process.cwd(), 'dist', '', 'src/assets/fonts/Noto_Sans_JP/static/NotoSansJP-Light.ttf'),\n        },\n    };\n\n    public async createPdfBinary(user_id: string, devEui: string): Promise {\n        if (!user_id) {\n            throw new Error('User ID is required');\n        }\n        if (!devEui) {\n            throw new Error('DevEui is required');\n        }\n\n        const { reportString, reportData } = await this.fetchDataAndReportFromDB(devEui, user_id);\n        const reportJson = this.insertDataIntoReport(reportString, reportData);\n\n        const printer: PdfPrinter = new PdfPrinter(this.fonts);\n        const docDefinition: TDocumentDefinitions = reportJson; // `report` is already an object\n\n        return new Promise((resolve, reject) => {\n            const pdfDoc = printer.createPdfKitDocument(docDefinition);\n            const chunks: Buffer[] = [];\n\n            pdfDoc.on('data', (chunk) => chunks.push(chunk));\n            pdfDoc.on('end', () => resolve(Buffer.concat(chunks)));\n            pdfDoc.on('error', reject);\n\n            pdfDoc.end();\n        });\n    }\n\n    private async fetchDataAndReportFromDB(devEui: string, user_id: string) {\n        // Fetch data from correct type (no clue how to map it later though....)\n        const reportData: any[] = await this.dataService.findAll({\n            devEui,\n            skip: 0,\n            take: 10,\n            order: 'ASC',\n        }, user_id);\n\n\n        let reportJsonResponse = await this.reportsTemplatesService.getReportTemplateByDevEui(devEui);\n        let reportString = JSON.stringify(reportJsonResponse.template);\n        return { reportString, reportData };\n    }\n\n    private insertDataIntoReport(reportJson: string, data: any[]) {\n\n        // Prepare data rows for the table\n        const dataRows = data.map(item => [\n            item.id,\n            item.created_at,\n            item.dewPointC,\n            item.humidity,\n            item.temperatureC,\n            item.vpd,\n            item.dev_eui,\n            item.profile_id\n        ]);\n\n        // Parse JSON and directly insert `dataRows` as an array\n        reportJson = reportJson.replace(/{{dev_eui}}/g, data[0]?.dev_eui || '');\n        const report = JSON.parse(reportJson); // Parse to an object only once\n        report.content[2].table.body = [\n            report.content[2].table.body[0], // Header row\n            ...dataRows                      // Data rows\n        ];\n\n        return report;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Profile.html":{"url":"classes/Profile.html","title":"class - Profile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Profile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profiles/entities/profile.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Profile {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileRepository.html":{"url":"injectables/ProfileRepository.html","title":"injectable - ProfileRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProfileRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repositories/profiles.repositories.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(supabaseService: SupabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/repositories/profiles.repositories.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        supabaseService\n                                                  \n                                                        \n                                                                        SupabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('JWT')\n                \n            \n\n                    \n                        \n                            Defined in src/repositories/profiles.repositories.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Req } from '@nestjs/common';\nimport { SupabaseService } from '../supabase/supabase.service';\nimport { ApiBearerAuth } from '@nestjs/swagger';\nimport { ProfileRow } from 'src/common/database-types';\n\n@Injectable()\nexport class ProfileRepository {\n  constructor(private readonly supabaseService: SupabaseService) {}\n\n  @ApiBearerAuth('JWT')\n  async findById(id: string): Promise {\n    const {data: user, error: userError } = await this.supabaseService.getSupabaseClient().auth.getUser(id);\n    if (userError) {\n      throw userError;\n    }\n    const { data, error } = await this.supabaseService\n      .getSupabaseClient()\n      .from('profiles')\n      .select('*')\n      .eq('id', user.user.id)\n      .single();\n    if (error) {\n      throw error;\n    }\n    return data || null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfilesController.html":{"url":"controllers/ProfilesController.html","title":"controller - ProfilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profiles/profiles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                profiles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiBearerAuth('JWT')\n                \n            \n\n                    \n                        \n                            Defined in src/profiles/profiles.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Req } from '@nestjs/common';\nimport { ProfilesService } from './profiles.service';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Profiles')\n@Controller('profiles')\nexport class ProfilesController {\n  constructor(private readonly profilesService: ProfilesService) {}\n  \n  @Get()\n  @ApiBearerAuth('JWT')\n  findOne(@Req() req) {\n    const id = req.headers['authorization'];\n    return this.profilesService.findOne(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfilesModule.html":{"url":"modules/ProfilesModule.html","title":"module - ProfilesModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfilesModule\n\n\n\ncluster_ProfilesModule_imports\n\n\n\ncluster_ProfilesModule_providers\n\n\n\n\nSupabaseModule\n\nSupabaseModule\n\n\n\nProfilesModule\n\nProfilesModule\n\nProfilesModule -->\n\nSupabaseModule->ProfilesModule\n\n\n\n\n\nProfileRepository\n\nProfileRepository\n\nProfilesModule -->\n\nProfileRepository->ProfilesModule\n\n\n\n\n\nProfilesService\n\nProfilesService\n\nProfilesModule -->\n\nProfilesService->ProfilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/profiles/profiles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProfileRepository\n                        \n                        \n                            ProfilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfilesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SupabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProfilesService } from './profiles.service';\nimport { ProfilesController } from './profiles.controller';\nimport { SupabaseService } from 'src/supabase/supabase.service';\nimport { ProfileRepository } from 'src/repositories/profiles.repositories';\nimport { SupabaseModule } from 'src/supabase/supabase.module';\n\n@Module({\n  imports: [SupabaseModule],\n  controllers: [ProfilesController],\n  providers: [ProfilesService, ProfileRepository],\n})\nexport class ProfilesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfilesService.html":{"url":"injectables/ProfilesService.html","title":"injectable - ProfilesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProfilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profiles/profiles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profilesRepository: ProfileRepository)\n                    \n                \n                        \n                            \n                                Defined in src/profiles/profiles.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profilesRepository\n                                                  \n                                                        \n                                                                        ProfileRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/profiles/profiles.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Req } from '@nestjs/common';\nimport { CreateProfileDto } from './dto/create-profile.dto';\nimport { ProfileRepository } from 'src/repositories/profiles.repositories';\n\n@Injectable()\nexport class ProfilesService {\n  constructor(private readonly profilesRepository: ProfileRepository) {}\n  findOne(id: string) {\n    id = id.replace('Bearer ', '');\n    return this.profilesRepository.findById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RelayController.html":{"url":"controllers/RelayController.html","title":"controller - RelayController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RelayController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/relay/relay.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                relay\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getProtectedRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getProtectedRoute\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProtectedRoute(state: RelayState, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('control')@ApiQuery({name: 'state', enum: RelayState, description: 'Set the relay state to Open or Close'})@ApiResponse({status: 202, description: 'Action Queued'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 402, description: 'Payment Required'})@ApiResponse({status: 403, description: 'Forbidden'})\n                \n            \n\n                    \n                        \n                            Defined in src/relay/relay.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            RelayState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req, Query } from '@nestjs/common';\nimport { RelayService } from './relay.service';\nimport { ApiTags, ApiQuery, ApiResponse } from '@nestjs/swagger';\nimport { Public } from 'src/auth/public.decorator';\n\nenum RelayState {\n    Open = 'open (OFF)', // OFF\n    Close = 'close (ON)' // ON\n}\n\n@ApiTags('Relay - Automation')\n@Controller('relay')\nexport class RelayController {\n    constructor(private readonly relayService: RelayService) { }\n\n    @Public()\n    @Get('control')\n    @ApiQuery({\n        name: 'state',\n        enum: RelayState,\n        description: 'Set the relay state to Open or Close'\n    })\n    @ApiResponse({ status: 202, description: 'Action Queued' })\n    @ApiResponse({ status: 400, description: 'Bad Request' })\n    @ApiResponse({ status: 401, description: 'Unauthorized' })\n    @ApiResponse({ status: 402, description: 'Payment Required' })\n    @ApiResponse({ status: 403, description: 'Forbidden' })\n    async getProtectedRoute(@Query('state') state: RelayState, @Req() req) {\n        const relayOn = state === RelayState.Open;\n        const response = await this.relayService.sendDownlink(relayOn);\n        return { message: 'Relay state updated', response };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RelayModule.html":{"url":"modules/RelayModule.html","title":"module - RelayModule","body":"\n                   \n\n\n\n\n    Modules\n    RelayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RelayModule\n\n\n\ncluster_RelayModule_providers\n\n\n\n\nRelayService\n\nRelayService\n\n\n\nRelayModule\n\nRelayModule\n\nRelayModule -->\n\nRelayService->RelayModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/relay/relay.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RelayService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RelayController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RelayController } from './relay.controller';\nimport { RelayService } from './relay.service';\n\n@Module({\n  controllers: [RelayController],\n  providers: [RelayService]\n})\nexport class RelayModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RelayService.html":{"url":"injectables/RelayService.html","title":"injectable - RelayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RelayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/relay/relay.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hexToBase64\n                            \n                            \n                                    Private\n                                    Async\n                                makeTTIApiRequest\n                            \n                            \n                                    Public\n                                    Async\n                                sendDownlink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/relay/relay.service.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hexToBase64\n                        \n                    \n                \n            \n            \n                \n                        \n                    hexToBase64(hexString)\n                \n            \n\n\n                    \n                        \n                            Defined in src/relay/relay.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                hexString\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        makeTTIApiRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    makeTTIApiRequest(url: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/relay/relay.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendDownlink\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendDownlink(state: boolean, deviceId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/relay/relay.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                deviceId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class RelayService {\n    constructor() {}\n    \n    public async sendDownlink(state: boolean, deviceId: string) {\n        const appId = 'dragino-lt-22222';\n    \n        const url = `${process.env.TTI_BASE_URL}/api/v3/as/applications/${appId}/devices/${deviceId}/down/replace`;\n        const onCommand = \"030011\";\n        const offCommand = \"030111\";\n        const command = state ? onCommand : offCommand;\n\n        const data = {\n            downlinks: [\n                {\n                    frm_payload: this.hexToBase64(command), // Base64-encoded payload\n                    f_port: 1, // Change as needed\n                    confirmed: true,\n                    priority: 'HIGH',\n                }\n            ]\n        };\n    \n        return await this.makeTTIApiRequest(url, data);\n    }\n\n    private async makeTTIApiRequest(url: string, data: any) {\n        try {\n            const response = await fetch(url, {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${process.env.DRAGINO_API_KEY}`,\n                    'Content-Type': 'application/json',\n                    'User-Agent': 'my-integration/my-integration-version'\n                },\n                body: JSON.stringify(data)\n            });\n    \n            if (!response.ok) {\n                throw new Error(`Error sending downlink: ${response.statusText}`);\n            }\n    \n            const responseData = await response.json();\n            console.log('Downlink sent successfully:', responseData);\n            return responseData;\n        } catch (error) {\n            throw new Error(`Error sending downlink: ${error.message}`);\n        }\n    }\n\n    private hexToBase64(hexString) {\n        const bytes = new Uint8Array(hexString.match(/.{1,2}/g).map(byte => parseInt(byte, 16)));\n        return btoa(String.fromCharCode(...bytes));\n    }\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReportTemplatesRepository.html":{"url":"injectables/ReportTemplatesRepository.html","title":"injectable - ReportTemplatesRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReportTemplatesRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repositories/reports_templates.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findByDevEui\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                fullUpdate\n                            \n                            \n                                    Async\n                                partialUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(supabaseService: SupabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/repositories/reports_templates.repository.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        supabaseService\n                                                  \n                                                        \n                                                                        SupabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findByDevEui\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByDevEui(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositories/reports_templates.repository.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(item: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:41\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:82\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:17\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:28\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fullUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    fullUpdate(id: number | string, item: T, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:68\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                item\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        partialUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    partialUpdate(id: number | string, item: Partial, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:54\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SupabaseService } from '../supabase/supabase.service';\nimport { BaseRepository } from './base.repository';\nimport { ReportsTemplatesRow } from 'src/common/database-types';\n\n@Injectable()\nexport class ReportTemplatesRepository extends BaseRepository {\n    constructor(supabaseService: SupabaseService) {\n        super(supabaseService, 'reports_templates');\n    }\n\n    public async findByDevEui({ dev_eui }: { dev_eui: string }): Promise {\n        const { data, error } = await this.supabaseService\n            .getSupabaseClient()\n            .from('reports_templates')\n            .select('*')\n            .eq('dev_eui', dev_eui)\n            .single();\n        if (error) {\n            throw new Error(`Failed to find device with dev_eui ${dev_eui}: ${error.message}`);\n        }\n        if (!data) {\n            throw new Error(`Device with dev_eui ${dev_eui} not found.`);\n        }\n        return data;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ReportsTemplatesController.html":{"url":"controllers/ReportsTemplatesController.html","title":"controller - ReportsTemplatesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ReportsTemplatesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reports_templates/reports_templates.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                reports-templates\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                GetReportTemplates\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        GetReportTemplates\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetReportTemplates()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/reports_templates/reports_templates.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ReportsTemplatesService } from './reports_templates.service';\n\n@Controller('reports-templates')\nexport class ReportsTemplatesController {\n    constructor(private readonly reportTemplatesService: ReportsTemplatesService) {\n\n    }\n\n    @Get()\n    GetReportTemplates() {\n        return this.reportTemplatesService.findAll();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReportsTemplatesModule.html":{"url":"modules/ReportsTemplatesModule.html","title":"module - ReportsTemplatesModule","body":"\n                   \n\n\n\n\n    Modules\n    ReportsTemplatesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReportsTemplatesModule\n\n\n\ncluster_ReportsTemplatesModule_providers\n\n\n\ncluster_ReportsTemplatesModule_imports\n\n\n\ncluster_ReportsTemplatesModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nReportsTemplatesModule\n\nReportsTemplatesModule\n\nReportsTemplatesModule -->\n\nAuthModule->ReportsTemplatesModule\n\n\n\n\n\nSupabaseModule\n\nSupabaseModule\n\nReportsTemplatesModule -->\n\nSupabaseModule->ReportsTemplatesModule\n\n\n\n\n\nReportsTemplatesService \n\nReportsTemplatesService \n\nReportsTemplatesService  -->\n\nReportsTemplatesModule->ReportsTemplatesService \n\n\n\n\n\nReportTemplatesRepository\n\nReportTemplatesRepository\n\nReportsTemplatesModule -->\n\nReportTemplatesRepository->ReportsTemplatesModule\n\n\n\n\n\nReportsTemplatesService\n\nReportsTemplatesService\n\nReportsTemplatesModule -->\n\nReportsTemplatesService->ReportsTemplatesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/reports_templates/reports_templates.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ReportTemplatesRepository\n                        \n                        \n                            ReportsTemplatesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ReportsTemplatesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            SupabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ReportsTemplatesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ReportsTemplatesController } from './reports_templates.controller';\nimport { ReportsTemplatesService } from './reports_templates.service';\nimport { ReportTemplatesRepository } from 'src/repositories/reports_templates.repository';\nimport { SupabaseModule } from 'src/supabase/supabase.module';\nimport { AuthModule } from 'src/auth/auth.module';\n\n@Module({\n  imports: [SupabaseModule, AuthModule],\n  controllers: [ReportsTemplatesController],\n  providers: [ReportsTemplatesService, ReportTemplatesRepository],\n  exports: [ReportsTemplatesService],\n})\nexport class ReportsTemplatesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReportsTemplatesService.html":{"url":"injectables/ReportsTemplatesService.html","title":"injectable - ReportsTemplatesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReportsTemplatesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reports_templates/reports_templates.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getReportTemplateByDevEui\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                fullUpdate\n                            \n                            \n                                    Async\n                                partialUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reportTemplatesRepository: ReportTemplatesRepository)\n                    \n                \n                        \n                            \n                                Defined in src/reports_templates/reports_templates.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reportTemplatesRepository\n                                                  \n                                                        \n                                                                        ReportTemplatesRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getReportTemplateByDevEui\n                        \n                    \n                \n            \n            \n                \ngetReportTemplateByDevEui(devEui: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/reports_templates/reports_templates.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                devEui\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:21\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:13\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fullUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    fullUpdate(id: number, dto: T | UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:29\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                        T | UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        partialUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    partialUpdate(id: number, dto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:25\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { BaseService } from 'src/bases/base.service';\nimport { UpdateReportDto } from './dto/update-report_template.dto';\nimport { ReportTemplatesRepository } from 'src/repositories/reports_templates.repository';\nimport { CreateReportTemplateDto } from './dto/create-report_template.dto';\nimport { ReportsTemplatesRow } from 'src/common/database-types';\n\n@Injectable()\nexport class ReportsTemplatesService extends BaseService {\n    constructor(private readonly reportTemplatesRepository: ReportTemplatesRepository) {\n        super(reportTemplatesRepository);\n    }\n\n    getReportTemplateByDevEui(devEui: string): Promise {\n        return this.reportTemplatesRepository.findByDevEui({ dev_eui: devEui });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RepositoryInterface.html":{"url":"interfaces/RepositoryInterface.html","title":"interface - RepositoryInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RepositoryInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/repositoryBase.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        findAll\n                                    \n                                \n                                \n                                    \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interfaces/repositoryBase.interface.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interfaces/repositoryBase.interface.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/interfaces/repositoryBase.interface.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interfaces/repositoryBase.interface.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interfaces/repositoryBase.interface.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface IRepositoryBase {\n  findOne(id: number): Promise;\n  findAll(): Promise;\n  create(entity: T): Promise;\n  update(id: number, entity: T): Promise;\n  remove(id: number): Promise;\n}\n\n\nexport interface RepositoryInterface {\n  findAll(): Promise;\n  findById(id: string): Promise;\n  create(entity: T): Promise;\n  update(id: string, entity: Partial): Promise;\n  delete(id: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/SupabaseAuthGuard.html":{"url":"guards/SupabaseAuthGuard.html","title":"guard - SupabaseAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    SupabaseAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/supabase.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/supabase.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/supabase.guard.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { AuthService } from \"../auth.service\";\n\n// AuthGuard implementation using the AuthService\n// AuthGuard implementation using the AuthService\n@Injectable()\nexport class SupabaseAuthGuard implements CanActivate {\n  constructor(private authService: AuthService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const apiKey = request.headers['x-api-key'];\n    const authHeader = request.headers['authorization'];\n\n    // Check if API key is provided\n    if (apiKey) {\n      const isValidApiKey = await this.authService.validateApiKey(apiKey);\n      if (!isValidApiKey) {\n        throw new UnauthorizedException('Invalid API key');\n      }\n      return true;\n    }\n\n    // If no API key, check for Bearer token\n    if (!authHeader) {\n      throw new UnauthorizedException('Authorization header not found');\n    }\n\n    const token = authHeader.split(' ')[1];\n    if (!token) {\n      throw new UnauthorizedException('Invalid authorization token format');\n    }\n\n    const user = await this.authService.validateUser(token);\n    if (!user) {\n      throw new UnauthorizedException('User not found');\n    }\n\n    // Attach user to request object for use in subsequent controllers\n    request.user = user;\n    return true;\n  }\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SupabaseModule.html":{"url":"modules/SupabaseModule.html","title":"module - SupabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    SupabaseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SupabaseModule\n\n\n\ncluster_SupabaseModule_providers\n\n\n\ncluster_SupabaseModule_exports\n\n\n\n\nSupabaseService \n\nSupabaseService \n\n\n\nSupabaseModule\n\nSupabaseModule\n\nSupabaseService  -->\n\nSupabaseModule->SupabaseService \n\n\n\n\n\nSupabaseService\n\nSupabaseService\n\nSupabaseModule -->\n\nSupabaseService->SupabaseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/supabase/supabase.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SupabaseService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SupabaseService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // src/supabase/supabase.module.ts\nimport { Module } from '@nestjs/common';\nimport { SupabaseService } from './supabase.service';\n\n@Module({\n  providers: [SupabaseService],\n  exports: [SupabaseService], // Export so it can be used in other modules\n})\nexport class SupabaseModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SupabaseService.html":{"url":"injectables/SupabaseService.html","title":"injectable - SupabaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SupabaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/supabase/supabase.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                supabase\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSupabaseClient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/supabase/supabase.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSupabaseClient\n                        \n                    \n                \n            \n            \n                \ngetSupabaseClient()\n                \n            \n\n\n                    \n                        \n                            Defined in src/supabase/supabase.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Description: getSupabaseClient() returns the Supabase client instance, this will be the single source of truth for all Supabase operations.\n\n\n                        \n                            Returns :     SupabaseClient\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        supabase\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SupabaseClient\n\n                    \n                \n                    \n                        \n                                Defined in src/supabase/supabase.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { createClient, SupabaseClient } from '@supabase/supabase-js';\nimport { Database } from 'database.types';\n\n@Injectable()\nexport class SupabaseService {\n    private supabase: SupabaseClient;\n\n    constructor(private configService: ConfigService) {\n        const supabaseUrl = this.configService.get('SUPABASE_URL');\n        const supabaseKey = this.configService.get('SUPABASE_KEY');\n\n        // Initialize Supabase client with version 2 package\n        this.supabase = createClient(supabaseUrl, supabaseKey);\n    }\n\n    /**\n   * Description: getSupabaseClient() returns the Supabase client instance, this will be the single source of truth for all Supabase operations.\n   * @param {string} feedback\n   * @returns {void}\n   * @memberof ChildComponent\n   */\n    getSupabaseClient(): SupabaseClient {\n        return this.supabase;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDatumDto.html":{"url":"classes/UpdateDatumDto.html","title":"class - UpdateDatumDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDatumDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/dto/update-datum.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateDatumDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateDatumDto } from './create-datum.dto';\n\nexport class UpdateDatumDto extends PartialType(CreateDatumDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDeviceDto.html":{"url":"classes/UpdateDeviceDto.html","title":"class - UpdateDeviceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDeviceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_devices/dto/update-device.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateDeviceDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateDeviceDto } from './create-device.dto';\n\nexport class UpdateDeviceDto extends PartialType(CreateDeviceDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDeviceOwnerDto.html":{"url":"classes/UpdateDeviceOwnerDto.html","title":"class - UpdateDeviceOwnerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDeviceOwnerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_device_owners/dto/update-device-owner.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateDeviceOwnerDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateDeviceOwnerDto } from './create-device-owner.dto';\n\nexport class UpdateDeviceOwnerDto extends PartialType(CreateDeviceOwnerDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDeviceTypeDto.html":{"url":"classes/UpdateDeviceTypeDto.html","title":"class - UpdateDeviceTypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDeviceTypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_device_type/dto/update-device-type.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateDeviceTypeDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateDeviceTypeDto } from './create-device-type.dto';\n\nexport class UpdateDeviceTypeDto extends PartialType(CreateDeviceTypeDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateLocationDto.html":{"url":"classes/UpdateLocationDto.html","title":"class - UpdateLocationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateLocationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/dto/update-location.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateLocationDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateLocationDto } from './create-location.dto';\n\nexport class UpdateLocationDto extends PartialType(CreateLocationDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileDto.html":{"url":"classes/UpdateProfileDto.html","title":"class - UpdateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profiles/dto/update-profile.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateProfileDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateProfileDto } from './create-profile.dto';\n\nexport class UpdateProfileDto extends PartialType(CreateProfileDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateReportDto.html":{"url":"classes/UpdateReportDto.html","title":"class - UpdateReportDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateReportDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reports_templates/dto/update-report_template.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateReportTemplateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateReportTemplateDto } from './create-report_template.dto';\n\nexport class UpdateReportDto extends PartialType(CreateReportTemplateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserAuthDto.html":{"url":"classes/UserAuthDto.html","title":"class - UserAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/DTOs/userAuth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'JWT authentication token'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/DTOs/userAuth.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsEmail } from 'class-validator';\n\nexport class UserAuthDto {\n  @ApiProperty({ description: 'JWT authentication token' })\n  @IsString()\n  token: string;\n}\n\nexport class LoginDto {\n  @ApiProperty({ description: 'User email address' })\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({ description: 'User password' })\n  @IsString()\n  password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        database.types.ts\n            \n            type alias\n            CompositeTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        database.types.ts\n            \n            type alias\n            Database\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        database.types.ts\n            \n            type alias\n            Enums\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        database.types.ts\n            \n            type alias\n            Json\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        database.types.ts\n            \n            type alias\n            PublicSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        database.types.ts\n            \n            type alias\n            Tables\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        database.types.ts\n            \n            type alias\n            TablesInsert\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        database.types.ts\n            \n            type alias\n            TablesUpdate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/DTOs/userAuth.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/DTOs/userAuth.dto.ts\n            \n            class\n            UserAuthDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            guard\n            JwtAuthGuard\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/guards/supabase.guard.ts\n            \n            guard\n            SupabaseAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/auth/public.decorator.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/public.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/bases/base.controller.ts\n            \n            class\n            BaseController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/bases/base.controller.ts\n            \n            interface\n            BaseServiceInterface\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/bases/base.service.ts\n            \n            class\n            BaseService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/bases/base.service.ts\n            \n            interface\n            BaseServiceInterface\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/common/common-auth-decorators.ts\n            \n            function\n            ApiCommonAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/common-responses.decorator.ts\n            \n            function\n            ApiCreateResponses\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/common-responses.decorator.ts\n            \n            function\n            ApiDeleteResponses\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/common-responses.decorator.ts\n            \n            function\n            ApiGetResponses\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/common-responses.decorator.ts\n            \n            function\n            CommonResponses\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/database-types.ts\n            \n            type alias\n            DeviceOwnerRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/database-types.ts\n            \n            type alias\n            DeviceRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/database-types.ts\n            \n            type alias\n            DevicesOwnersRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/database-types.ts\n            \n            type alias\n            DevicesRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/database-types.ts\n            \n            type alias\n            DeviceTypeRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/database-types.ts\n            \n            type alias\n            LocationRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/database-types.ts\n            \n            type alias\n            LocationsRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/database-types.ts\n            \n            type alias\n            ProfileRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/database-types.ts\n            \n            type alias\n            ReportsTemplatesRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/http-cache.interceptor.ts\n            \n            injectable\n            HttpCacheInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cw_device_owners/cw_device_owners.controller.ts\n            \n            controller\n            CwDeviceOwnersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cw_device_owners/cw_device_owners.service.ts\n            \n            injectable\n            CwDeviceOwnersService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/cw_device_owners/dto/create-device-owner.dto.ts\n            \n            class\n            CreateDeviceOwnerDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/cw_device_owners/dto/update-device-owner.dto.ts\n            \n            class\n            UpdateDeviceOwnerDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cw_device_type/cw_device_type.controller.ts\n            \n            controller\n            CwDeviceTypeController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cw_device_type/cw_device_type.service.ts\n            \n            injectable\n            CwDeviceTypeService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/cw_device_type/dto/create-device-type.dto.ts\n            \n            class\n            CreateDeviceTypeDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cw_device_type/dto/update-device-type.dto.ts\n            \n            class\n            UpdateDeviceTypeDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cw_devices/cw_devices.controller.ts\n            \n            controller\n            CwDevicesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cw_devices/cw_devices.service.ts\n            \n            injectable\n            CwDevicesService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/cw_devices/dto/create-device.dto.ts\n            \n            class\n            CreateDeviceDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cw_devices/dto/update-device.dto.ts\n            \n            class\n            UpdateDeviceDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/data/data.controller.ts\n            \n            controller\n            DataController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/data/data.service.ts\n            \n            injectable\n            DataService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/data/data.service.ts\n            \n            interface\n            FindAllParams\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/data/dto/create-datum.dto.ts\n            \n            class\n            CreateDatumDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/data/dto/update-datum.dto.ts\n            \n            class\n            UpdateDatumDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/data/entities/datum.entity.ts\n            \n            class\n            Datum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/geolocation/geolocation.controller.ts\n            \n            controller\n            GeolocationController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/geolocation/geolocation.service.ts\n            \n            injectable\n            GeolocationService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interfaces/repositoryBase.interface.ts\n            \n            interface\n            IRepositoryBase\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/interfaces/repositoryBase.interface.ts\n            \n            interface\n            RepositoryInterface\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/location/dto/create-location.dto.ts\n            \n            class\n            CreateLocationDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/location/dto/update-location.dto.ts\n            \n            class\n            UpdateLocationDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/location/entities/location.entity.ts\n            \n            class\n            Location\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/location/location.controller.ts\n            \n            controller\n            LocationController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/location/location.service.ts\n            \n            injectable\n            LocationService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            getSwaggerConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/pdf/dto/pdf.dto.ts\n            \n            class\n            PdfDTO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/pdf/pdf.controller.ts\n            \n            controller\n            PdfController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/pdf/pdf.service.ts\n            \n            injectable\n            PdfService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/profiles/dto/create-profile.dto.ts\n            \n            class\n            CreateProfileDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/profiles/dto/update-profile.dto.ts\n            \n            class\n            UpdateProfileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profiles/entities/profile.entity.ts\n            \n            class\n            Profile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profiles/profiles.controller.ts\n            \n            controller\n            ProfilesController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/profiles/profiles.service.ts\n            \n            injectable\n            ProfilesService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/relay/relay.controller.ts\n            \n            controller\n            RelayController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/relay/relay.service.ts\n            \n            injectable\n            RelayService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/reports_templates/dto/create-report_template.dto.ts\n            \n            class\n            CreateReportTemplateDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/reports_templates/dto/update-report_template.dto.ts\n            \n            class\n            UpdateReportDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/reports_templates/reports_templates.controller.ts\n            \n            controller\n            ReportsTemplatesController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/reports_templates/reports_templates.service.ts\n            \n            injectable\n            ReportsTemplatesService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/repositories/base.repository.ts\n            \n            class\n            BaseRepository\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/repositories/cw_device_owners.ts\n            \n            injectable\n            DeviceOwnerRepository\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/repositories/cw_device_type.repository.ts\n            \n            injectable\n            DeviceTypeRepository\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/repositories/cw_devices.repository.ts\n            \n            injectable\n            DeviceRepository\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/repositories/cw_location.repository.ts\n            \n            injectable\n            LocationRepository\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/repositories/data.repository.ts\n            \n            injectable\n            DataRepository\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/repositories/profiles.repositories.ts\n            \n            injectable\n            ProfileRepository\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/repositories/reports_templates.repository.ts\n            \n            injectable\n            ReportTemplatesRepository\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/supabase/supabase.service.ts\n            \n            injectable\n            SupabaseService\n            \n                25 %\n                (1/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^3.1.1\n        \n            @nestjs/cache-manager : ^2.3.0\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.3.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/serve-static : ^4.0.2\n        \n            @nestjs/swagger : ^7.4.2\n        \n            @nestjs/terminus : ^10.2.3\n        \n            @nestjs/throttler : ^6.2.1\n        \n            @supabase/supabase-js : ^2.45.6\n        \n            axios : ^1.7.7\n        \n            cache-manager : ^5.7.6\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            compression : ^1.7.5\n        \n            helmet : ^8.0.0\n        \n            passport-jwt : ^4.0.1\n        \n            pdfmake : ^0.2.15\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RelayState   (src/.../relay.controller.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/relay/relay.controller.ts\n    \n        \n            \n                \n                    \n                        \n                        RelayState\n                    \n                \n                        \n                            \n                                 Open\n                            \n                        \n                        \n                            \n                                Value : open (OFF)\n                            \n                        \n                        \n                            \n                                 Close\n                            \n                        \n                        \n                            \n                                Value : close (ON)\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiCommonAuth   (src/.../common-auth-decorators.ts)\n                        \n                        \n                            ApiCreateResponses   (src/.../common-responses.decorator.ts)\n                        \n                        \n                            ApiDeleteResponses   (src/.../common-responses.decorator.ts)\n                        \n                        \n                            ApiGetResponses   (src/.../common-responses.decorator.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            CommonResponses   (src/.../common-responses.decorator.ts)\n                        \n                        \n                            getSwaggerConfig   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/common-auth-decorators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiCommonAuth\n                        \n                    \n                \n            \n            \n                \nApiCommonAuth(summary: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                summary\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/common/common-responses.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiCreateResponses\n                        \n                    \n                \n            \n            \n                \nApiCreateResponses()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ApiDeleteResponses\n                        \n                    \n                \n            \n            \n                \nApiDeleteResponses()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ApiGetResponses\n                        \n                    \n                \n            \n            \n                \nApiGetResponses()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CommonResponses\n                        \n                    \n                \n            \n            \n                \nCommonResponses()\n                \n            \n\n\n\n\n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSwaggerConfig\n                        \n                    \n                \n            \n            \n                \ngetSwaggerConfig(version: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                version\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCropWatch API\n\n  \n\n\nOverview\n  \n  This documentation serves as a supliment to help understand the inner workings of CropWatch's API.\n  \n\n  \n  Development of this api is open to all via valid Pull Request on GitHub\n\n\n  Maintainability and Code Cleanliness is highly important and tracked via CodeClimate\n\n\nDevelopment Stack\nThe required stack for development is as follows:\n\nVS Code\nNODE.JS 22.6.0 or above\nNEST JS\nTypescript\nPNPM\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CwDeviceOwnersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CwDevicesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CwDeviceTypeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GeolocationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PdfModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RelayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReportsTemplatesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SupabaseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_CwDeviceOwnersModule\n\n\n\ncluster_CwDeviceOwnersModule_exports\n\n\n\ncluster_CwDeviceOwnersModule_providers\n\n\n\ncluster_CwDevicesModule\n\n\n\ncluster_CwDevicesModule_exports\n\n\n\ncluster_CwDevicesModule_providers\n\n\n\ncluster_CwDeviceTypeModule\n\n\n\ncluster_CwDeviceTypeModule_exports\n\n\n\ncluster_CwDeviceTypeModule_providers\n\n\n\ncluster_DataModule\n\n\n\ncluster_DataModule_exports\n\n\n\ncluster_DataModule_providers\n\n\n\ncluster_GeolocationModule\n\n\n\ncluster_GeolocationModule_providers\n\n\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_PdfModule\n\n\n\ncluster_PdfModule_providers\n\n\n\ncluster_ProfilesModule\n\n\n\ncluster_ProfilesModule_providers\n\n\n\ncluster_RelayModule\n\n\n\ncluster_RelayModule_providers\n\n\n\ncluster_ReportsTemplatesModule\n\n\n\ncluster_ReportsTemplatesModule_exports\n\n\n\ncluster_ReportsTemplatesModule_providers\n\n\n\ncluster_SupabaseModule\n\n\n\ncluster_SupabaseModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nCwDevicesModule\n\nCwDevicesModule\n\nCwDevicesModule -->\n\nAuthModule->CwDevicesModule\n\n\n\n\n\nReportsTemplatesModule\n\nReportsTemplatesModule\n\nReportsTemplatesModule -->\n\nAuthModule->ReportsTemplatesModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCwDeviceTypeModule\n\nCwDeviceTypeModule\n\nCwDeviceTypeModule -->\n\nAuthModule->CwDeviceTypeModule\n\n\n\n\n\nCwDeviceOwnersModule\n\nCwDeviceOwnersModule\n\n\n\nPdfModule\n\nPdfModule\n\nPdfModule -->\n\nCwDeviceOwnersModule->PdfModule\n\n\n\nAppModule -->\n\nCwDeviceOwnersModule->AppModule\n\n\n\n\n\nCwDeviceOwnersService \n\nCwDeviceOwnersService \n\nCwDeviceOwnersService  -->\n\nCwDeviceOwnersModule->CwDeviceOwnersService \n\n\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nCwDevicesModule->DataModule\n\n\n\nPdfModule -->\n\nCwDevicesModule->PdfModule\n\n\n\nAppModule -->\n\nCwDevicesModule->AppModule\n\n\n\n\n\nCwDevicesService \n\nCwDevicesService \n\nCwDevicesService  -->\n\nCwDevicesModule->CwDevicesService \n\n\n\nPdfModule -->\n\nDataModule->PdfModule\n\n\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nDataRepository \n\nDataRepository \n\nDataRepository  -->\n\nDataModule->DataRepository \n\n\n\n\n\nDataService \n\nDataService \n\nDataService  -->\n\nDataModule->DataService \n\n\n\n\n\nGeolocationModule\n\nGeolocationModule\n\nAppModule -->\n\nGeolocationModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nAppModule -->\n\nLocationModule->AppModule\n\n\n\nAppModule -->\n\nPdfModule->AppModule\n\n\n\n\n\nProfilesModule\n\nProfilesModule\n\nAppModule -->\n\nProfilesModule->AppModule\n\n\n\n\n\nRelayModule\n\nRelayModule\n\nAppModule -->\n\nRelayModule->AppModule\n\n\n\nPdfModule -->\n\nReportsTemplatesModule->PdfModule\n\n\n\nAppModule -->\n\nReportsTemplatesModule->AppModule\n\n\n\n\n\nReportsTemplatesService \n\nReportsTemplatesService \n\nReportsTemplatesService  -->\n\nReportsTemplatesModule->ReportsTemplatesService \n\n\n\n\n\nSupabaseModule\n\nSupabaseModule\n\nCwDeviceOwnersModule -->\n\nSupabaseModule->CwDeviceOwnersModule\n\n\n\nCwDevicesModule -->\n\nSupabaseModule->CwDevicesModule\n\n\n\nLocationModule -->\n\nSupabaseModule->LocationModule\n\n\n\nProfilesModule -->\n\nSupabaseModule->ProfilesModule\n\n\n\nReportsTemplatesModule -->\n\nSupabaseModule->ReportsTemplatesModule\n\n\n\nAppModule -->\n\nSupabaseModule->AppModule\n\n\n\nCwDeviceTypeModule -->\n\nSupabaseModule->CwDeviceTypeModule\n\n\n\n\n\nSupabaseService \n\nSupabaseService \n\nSupabaseService  -->\n\nSupabaseModule->SupabaseService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\nGeolocationModule -->\n\nAuthService->GeolocationModule\n\n\n\nPdfModule -->\n\nAuthService->PdfModule\n\n\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nCwDeviceOwnersService\n\nCwDeviceOwnersService\n\nCwDeviceOwnersModule -->\n\nCwDeviceOwnersService->CwDeviceOwnersModule\n\n\n\nDataModule -->\n\nCwDeviceOwnersService->DataModule\n\n\n\n\n\nDeviceOwnerRepository\n\nDeviceOwnerRepository\n\nCwDeviceOwnersModule -->\n\nDeviceOwnerRepository->CwDeviceOwnersModule\n\n\n\nDataModule -->\n\nDeviceOwnerRepository->DataModule\n\n\n\n\n\nCwDevicesService\n\nCwDevicesService\n\nCwDevicesModule -->\n\nCwDevicesService->CwDevicesModule\n\n\n\nDataModule -->\n\nCwDevicesService->DataModule\n\n\n\n\n\nDeviceRepository\n\nDeviceRepository\n\nCwDevicesModule -->\n\nDeviceRepository->CwDevicesModule\n\n\n\nDataModule -->\n\nDeviceRepository->DataModule\n\n\n\nDataModule -->\n\nCwDeviceTypeModule->DataModule\n\n\n\nPdfModule -->\n\nCwDeviceTypeModule->PdfModule\n\n\n\n\n\nCwDeviceTypeService \n\nCwDeviceTypeService \n\nCwDeviceTypeService  -->\n\nCwDeviceTypeModule->CwDeviceTypeService \n\n\n\n\n\nCwDeviceTypeService\n\nCwDeviceTypeService\n\nDataModule -->\n\nCwDeviceTypeService->DataModule\n\n\n\nCwDeviceTypeModule -->\n\nCwDeviceTypeService->CwDeviceTypeModule\n\n\n\n\n\nDeviceTypeRepository\n\nDeviceTypeRepository\n\nDataModule -->\n\nDeviceTypeRepository->DataModule\n\n\n\nCwDeviceTypeModule -->\n\nDeviceTypeRepository->CwDeviceTypeModule\n\n\n\n\n\nDataRepository\n\nDataRepository\n\nDataModule -->\n\nDataRepository->DataModule\n\n\n\n\n\nDataService\n\nDataService\n\nDataModule -->\n\nDataService->DataModule\n\n\n\nPdfModule -->\n\nDataService->PdfModule\n\n\n\nPdfModule -->\n\nDataService->PdfModule\n\n\n\n\n\nSupabaseService\n\nSupabaseService\n\nDataModule -->\n\nSupabaseService->DataModule\n\n\n\nSupabaseModule -->\n\nSupabaseService->SupabaseModule\n\n\n\n\n\nGeolocationService\n\nGeolocationService\n\nGeolocationModule -->\n\nGeolocationService->GeolocationModule\n\n\n\n\n\nLocationRepository\n\nLocationRepository\n\nLocationModule -->\n\nLocationRepository->LocationModule\n\n\n\n\n\nLocationService\n\nLocationService\n\nLocationModule -->\n\nLocationService->LocationModule\n\n\n\n\n\nPdfService\n\nPdfService\n\nPdfModule -->\n\nPdfService->PdfModule\n\n\n\n\n\nProfileRepository\n\nProfileRepository\n\nProfilesModule -->\n\nProfileRepository->ProfilesModule\n\n\n\n\n\nProfilesService\n\nProfilesService\n\nProfilesModule -->\n\nProfilesService->ProfilesModule\n\n\n\n\n\nRelayService\n\nRelayService\n\nRelayModule -->\n\nRelayService->RelayModule\n\n\n\n\n\nReportTemplatesRepository\n\nReportTemplatesRepository\n\nReportsTemplatesModule -->\n\nReportTemplatesRepository->ReportsTemplatesModule\n\n\n\n\n\nReportsTemplatesService\n\nReportsTemplatesService\n\nReportsTemplatesModule -->\n\nReportsTemplatesService->ReportsTemplatesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    21 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    23 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CompositeTypes   (database.types.ts)\n                        \n                        \n                            Database   (database.types.ts)\n                        \n                        \n                            DeviceOwnerRow   (src/.../database-types.ts)\n                        \n                        \n                            DeviceRow   (src/.../database-types.ts)\n                        \n                        \n                            DevicesOwnersRow   (src/.../database-types.ts)\n                        \n                        \n                            DevicesRow   (src/.../database-types.ts)\n                        \n                        \n                            DeviceTypeRow   (src/.../database-types.ts)\n                        \n                        \n                            Enums   (database.types.ts)\n                        \n                        \n                            Json   (database.types.ts)\n                        \n                        \n                            LocationRow   (src/.../database-types.ts)\n                        \n                        \n                            LocationsRow   (src/.../database-types.ts)\n                        \n                        \n                            ProfileRow   (src/.../database-types.ts)\n                        \n                        \n                            PublicSchema   (database.types.ts)\n                        \n                        \n                            ReportsTemplatesRow   (src/.../database-types.ts)\n                        \n                        \n                            Tables   (database.types.ts)\n                        \n                        \n                            TablesInsert   (database.types.ts)\n                        \n                        \n                            TablesUpdate   (database.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    database.types.ts\n    \n    \n        \n            \n                \n                    \n                    CompositeTypes\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Database\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Enums\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Json\n                \n            \n            \n                \n                            string | number | boolean | null | literal type | Json[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PublicSchema\n                \n            \n            \n                \n                            Database\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Tables\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TablesInsert\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TablesUpdate\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/common/database-types.ts\n    \n    \n        \n            \n                \n                    \n                    DeviceOwnerRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DeviceRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DevicesOwnersRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DevicesRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DeviceTypeRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LocationRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LocationsRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ProfileRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ReportsTemplatesRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            IS_PUBLIC_KEY   (src/.../public.decorator.ts)\n                        \n                        \n                            Public   (src/.../public.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
