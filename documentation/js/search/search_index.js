var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.25,1,2.936]],["body/controllers/AppController.html",[0,1.833,1,4.307,2,1.342,3,0.16,4,0.16,5,0.143,6,3.929,7,0.478,8,1.094,9,1.729,10,6.173,11,1.544,12,0.013,13,4.509,14,3.548,15,0.64,16,4.509,17,0.8,18,2.684,19,0.428,20,3.548,21,0.567,22,2.846,23,2.302,24,1.438,25,3.929,26,4.509,27,3.263,28,3.263,29,5.186,30,3.263,31,2.456,32,4.509,33,4.509,34,5.95,35,4.509,36,4.509,37,0.16,38,0.114,39,1.296,40,2.302,41,3.548,42,3.542,43,3.548,44,3.929,45,0.954,46,1.296,47,0.8,48,4.509,49,4.509,50,0.009,51,0.009]],["title/modules/AppModule.html",[52,1.166,53,2.936]],["body/modules/AppModule.html",[1,3.717,2,1.267,3,0.1,4,0.1,5,0.089,12,0.013,19,0.455,21,0.354,27,2.036,28,2.036,30,2.036,37,0.1,38,0.071,41,2.214,43,3.35,50,0.007,51,0.007,52,1.477,53,5.856,54,1.161,55,1.208,56,1.313,57,1.313,58,1.208,59,2.397,60,1.313,61,2.452,62,2.452,63,2.452,64,3.853,65,4.357,66,4.357,67,4.357,68,4.357,69,4.357,70,4.357,71,4.357,72,4.357,73,3.305,74,3.305,75,1.987,76,1.313,77,1.313,78,4.257,79,2.4,80,2.813,81,1.894,82,2.452,83,2.813,84,2.813,85,2.214,86,2.813,87,2.813,88,2.813,89,4.257,90,2.813,91,5.136,92,2.214,93,2.813,94,3.717,95,2.813,96,2.813,97,2.813,98,2.813,99,2.813,100,2.813,101,2.813,102,2.813,103,2.813,104,2.813,105,2.813,106,2.813,107,4.257,108,2.534,109,2.813,110,2.813,111,2.813,112,2.813,113,2.813,114,2.452,115,2.813,116,2.813,117,2.813,118,2.813,119,0.837,120,2.214,121,2.452,122,4.257,123,4.257,124,2.813,125,2.813,126,1.894]],["title/injectables/AppService.html",[127,0.645,128,3.192]],["body/injectables/AppService.html",[3,0.197,4,0.197,5,0.177,7,0.591,8,1.253,10,6.677,12,0.013,15,0.792,17,0.99,19,0.324,21,0.702,37,0.197,38,0.142,45,1.18,50,0.011,51,0.011,127,1.084,128,5.362,129,1.91,130,4.863,131,5.58,132,1.492,133,5.58,134,5.58]],["title/controllers/AuthController.html",[0,1.25,135,2.936]],["body/controllers/AuthController.html",[0,1.24,2,0.778,3,0.093,4,0.093,5,0.083,7,0.277,8,0.741,9,1.633,11,1.379,12,0.013,14,2.058,15,0.571,17,0.715,18,2.397,19,0.381,21,0.329,22,1.651,23,1.335,24,0.834,29,3.509,30,1.893,31,1.662,37,0.093,38,0.066,40,1.335,41,2.058,42,1.557,43,2.058,44,2.279,45,0.852,46,0.752,47,0.715,50,0.006,51,0.006,74,2.507,135,2.914,136,2.279,137,1.335,138,2.615,139,3.169,140,7.211,141,2.615,142,2.615,143,4.806,144,4.084,145,4.026,146,4.34,147,4.34,148,3.169,149,4.34,150,3.169,151,4.34,152,4.34,153,3.169,154,4.34,155,4.026,156,5.515,157,3.109,158,0.697,159,4.555,160,4.026,161,2.615,162,1.038,163,0.767,164,2.631,165,2.615,166,2.615,167,2.615,168,2.615,169,2.615,170,2.615,171,2.279,172,1.401,173,1.401,174,5.832,175,1.761,176,2.615,177,2.615,178,1.893,179,2.279,180,2.615,181,2.615,182,0.999,183,1.761,184,2.615,185,2.279,186,5.759,187,4.026,188,2.542,189,2.914,190,2.542,191,3.169,192,2.615,193,2.615,194,2.615,195,2.615,196,2.615,197,2.615,198,2.27,199,2.279,200,2.279,201,2.615,202,2.615,203,3.169,204,2.279,205,2.615,206,2.279,207,2.615,208,2.615,209,0.928,210,2.279,211,1.038,212,2.615,213,2.615,214,2.615,215,1.651,216,2.615]],["title/modules/AuthModule.html",[52,1.166,64,2.415]],["body/modules/AuthModule.html",[2,1.875,3,0.174,4,0.174,5,0.157,12,0.013,19,0.404,21,0.62,37,0.174,38,0.125,50,0.01,51,0.01,52,1.998,54,2.032,55,2.114,56,2.298,57,2.298,58,2.114,59,3.244,60,3.244,64,4.687,74,4.196,75,2.941,76,2.298,77,2.298,135,5.029,178,3.563,217,4.291,218,4.923,219,4.291,220,4.923,221,4.923]],["title/injectables/AuthService.html",[74,2.071,127,0.645]],["body/injectables/AuthService.html",[3,0.096,4,0.096,5,0.086,7,0.287,8,0.761,9,1.82,12,0.013,15,0.859,17,0.891,19,0.292,21,0.341,37,0.096,38,0.069,39,1.19,45,1.062,47,0.997,50,0.007,51,0.007,74,2.113,81,1.825,127,0.658,129,0.928,132,1.615,158,0.859,162,1.188,163,1.071,198,2.333,209,1.995,210,3.607,211,1.993,215,2.612,222,2.362,223,1.852,224,3.243,225,5.275,226,4.139,227,4.139,228,4.139,229,2.362,230,5.02,231,4.139,232,4.139,233,5.02,234,2.71,235,3.168,236,2.035,237,4.139,238,2.71,239,3.607,240,4.139,241,2.71,242,4.375,243,2.133,244,1.962,245,2.133,246,2.71,247,2.71,248,2.71,249,2.362,250,2.133,251,2.133,252,4.139,253,2.362,254,2.362,255,3.607,256,2.362,257,2.362,258,2.362,259,1.962,260,2.133,261,1.962,262,3.607,263,2.362,264,3.257,265,4.139,266,1.962,267,2.362,268,3.257,269,2.344,270,3.667,271,2.71,272,2.952,273,2.438,274,4.139,275,2.71,276,3.257,277,2.71,278,2.71,279,2.71,280,3.607,281,4.375,282,2.71,283,2.71,284,2.71,285,2.71,286,2.71,287,2.71,288,4.139,289,2.71,290,1.613,291,2.71,292,2.71,293,2.71,294,1.613,295,3.607,296,4.139,297,2.71,298,2.71,299,2.71,300,2.71]],["title/classes/BaseController.html",[38,0.103,301,2.561]],["body/classes/BaseController.html",[3,0.145,4,0.145,5,0.13,7,0.434,8,1.026,9,1.909,11,1.91,12,0.013,15,0.9,17,0.99,19,0.324,20,3.222,21,0.515,24,1.306,37,0.197,38,0.104,39,1.177,45,1.18,47,0.99,50,0.009,51,0.009,120,3.222,158,0.792,162,1.18,163,1.063,172,2.194,173,2.989,182,1.565,236,2.346,273,2.132,301,3.521,302,1.353,303,3.222,304,1.85,305,2.274,306,4.095,307,4.055,308,4.095,309,4.39,310,3.222,311,3.941,312,3.756,313,3.222,314,4.095,315,3.222,316,4.095,317,4.592,318,1.759,319,2.438,320,1.402,321,4.037,322,3.569,323,2.309,324,2.757,325,3.569]],["title/classes/BaseRepository.html",[38,0.103,326,2.071]],["body/classes/BaseRepository.html",[3,0.091,4,0.091,5,0.082,7,0.274,8,0.734,9,1.959,12,0.013,15,0.888,17,1.051,19,0.15,37,0.091,38,0.066,39,1.147,40,2.489,45,1.159,46,2.098,47,1.051,50,0.006,51,0.006,119,2.058,132,1.691,158,0.841,162,1.253,163,1.129,204,2.253,209,2.103,211,2.352,224,1.385,236,2.253,269,3.146,270,4.045,272,2.889,290,3.263,294,2.901,302,0.854,304,1.036,305,1.748,320,1.366,323,3.09,326,2.038,327,2.253,328,1.935,329,1.863,330,1.584,331,1.457,332,2.584,333,4.248,334,2.585,335,2.519,336,3.197,337,2.585,338,1.786,339,4.366,340,2.585,341,2.612,342,2.585,343,1.714,344,2.585,345,1.469,346,2.585,347,1.457,348,3.739,349,3.526,350,5.923,351,4.874,352,1.539,353,2.585,354,2.585]],["title/classes/BaseService.html",[38,0.103,355,2.415]],["body/classes/BaseService.html",[3,0.122,4,0.122,5,0.11,7,0.366,8,0.91,9,2.06,12,0.013,15,0.989,17,1.188,19,0.2,37,0.175,38,0.088,39,0.992,45,1.416,46,1.664,47,1.188,50,0.008,51,0.008,119,2.224,158,0.95,162,1.416,163,1.275,236,2.474,302,1.14,304,1.285,305,2.135,307,3.445,311,3.388,318,1.482,319,3.984,320,1.182,326,3.228,328,1.965,329,2.31,330,1.965,336,1.762,338,2.215,343,2.126,345,1.823,355,2.946,356,2.716,357,3.582,358,3.451,359,3.451,360,3.895,361,3.896,362,3.451,363,3.451,364,3.451,365,3.451,366,4.256,367,3.451,368,3.008,369,3.008,370,1.225,371,3.008,372,3.008,373,3.008,374,3.008,375,3.008,376,3.008]],["title/interfaces/BaseServiceInterface.html",[307,2.415,318,1.742]],["body/interfaces/BaseServiceInterface.html",[3,0.163,4,0.163,5,0.146,7,0.487,9,1.565,12,0.013,19,0.35,20,3.621,21,0.579,24,1.468,37,0.213,38,0.117,45,1.276,50,0.01,51,0.01,120,3.621,158,0.856,172,2.466,173,3.231,182,1.759,223,2.699,236,2.278,264,5.619,273,1.759,301,2.905,303,3.621,304,1.924,305,2.365,307,4.005,309,3.621,311,3.605,317,4.869,318,1.976,319,2.739,320,1.576,321,4.365,322,4.01,323,2.594,324,3.098,325,4.01,377,2.905]],["title/interfaces/BaseServiceInterface-1.html",[42,2.015,307,2.015,318,1.454]],["body/interfaces/BaseServiceInterface-1.html",[3,0.152,4,0.152,5,0.136,7,0.455,8,1.059,9,1.88,12,0.013,15,0.817,17,1.022,19,0.249,37,0.204,38,0.109,45,1.532,47,0.762,50,0.009,51,0.009,119,1.934,158,0.609,162,0.908,163,0.818,236,2.502,304,1.495,305,2.311,307,3.869,311,3.721,318,1.843,319,3.869,320,1.47,326,2.941,336,2.192,338,1.92,343,1.843,345,1.58,355,2.555,356,3.377,357,3.106,360,3.377,361,4.375,366,3.877,368,3.74,369,3.74,370,1.523,371,3.74,372,3.74,373,3.74,374,3.74,375,3.74,376,3.74,377,2.709,378,4.292,379,4.292]],["title/classes/CreateDatumDto.html",[38,0.103,380,2.415]],["body/classes/CreateDatumDto.html",[3,0.219,4,0.219,5,0.197,12,0.012,37,0.219,38,0.157,50,0.011,51,0.011,302,2.049,380,4.32,381,5.403,382,4.879]],["title/classes/CreateDeviceDto.html",[38,0.103,383,2.561]],["body/classes/CreateDeviceDto.html",[3,0.156,4,0.156,5,0.14,7,0.468,11,2.505,12,0.013,15,1.038,19,0.257,37,0.156,38,0.149,47,1.17,50,0.009,51,0.009,119,1.747,132,1.706,158,1.106,223,2.628,302,1.46,383,3.707,384,6.554,385,3.478,386,4.44,387,6.595,388,5.748,389,4.731,390,4.419,391,4.419,392,4.419,393,3.852,394,4.419,395,4.419,396,5.063,397,4.621,398,4.355,399,2.492]],["title/classes/CreateDeviceOwnerDto.html",[38,0.103,400,2.561]],["body/classes/CreateDeviceOwnerDto.html",[3,0.162,4,0.162,5,0.145,7,0.484,11,2.438,12,0.013,15,1.011,19,0.265,37,0.162,38,0.152,50,0.009,51,0.009,119,2.119,132,1.559,158,1.011,223,2.686,302,1.51,386,4.514,388,5.844,389,4.042,393,5.233,396,4.979,397,5.276,398,3.991,399,2.577,400,3.79,401,6.446,402,3.052,403,3.596,404,5.844,405,6.705,406,4.57,407,4.57,408,4.57,409,4.57]],["title/classes/CreateDeviceTypeDto.html",[38,0.103,410,2.561]],["body/classes/CreateDeviceTypeDto.html",[3,0.182,4,0.182,5,0.164,7,0.546,11,2.22,12,0.013,15,0.92,19,0.299,37,0.182,38,0.164,47,1.259,50,0.01,51,0.01,132,1.63,144,3.624,158,0.92,223,2.901,302,1.702,389,4.365,396,4.777,398,4.224,399,2.904,402,2.929,410,4.093,411,6.184,412,4.053,413,5.15,414,5.15]],["title/classes/CreateLocationDto.html",[38,0.103,415,2.561]],["body/classes/CreateLocationDto.html",[3,0.135,4,0.135,5,0.121,7,0.404,11,2.464,12,0.013,15,1.021,19,0.222,37,0.135,38,0.135,47,1.085,50,0.008,51,0.008,119,2.142,132,1.575,144,3.122,158,1.021,163,1.476,223,2.377,302,1.261,352,4.611,389,2.568,396,3.577,397,4.181,398,3.935,399,2.151,404,5.328,415,3.354,416,6.436,417,3.002,418,6.113,419,6.113,420,6.113,421,4.63,422,3.815,423,3.815,424,3.815,425,3.815,426,3.815,427,3.815,428,3.815,429,3.815,430,3.815,431,6.273,432,5.313,433,5.313]],["title/classes/CreateProfileDto.html",[38,0.103,434,2.731]],["body/classes/CreateProfileDto.html",[3,0.105,4,0.105,5,0.094,7,0.313,11,2.543,12,0.013,15,1.054,19,0.172,37,0.105,38,0.112,46,1.521,50,0.007,51,0.007,132,1.744,158,1.054,163,1.518,223,1.977,235,2.983,302,0.977,352,4.696,389,1.99,396,2.975,398,4.276,399,1.666,421,5.747,431,6.472,434,2.975,435,6.554,436,2.326,437,5.292,438,5.292,439,5.292,440,5.292,441,5.292,442,5.292,443,5.292,444,5.292,445,5.292,446,3.198,447,2.956,448,2.956,449,2.956,450,2.956,451,2.956,452,2.956,453,2.956,454,2.956,455,2.956,456,2.956,457,2.956,458,2.956,459,2.956,460,2.956,461,2.956,462,4.419,463,3.477,464,5.292]],["title/controllers/CwDeviceOwnersController.html",[0,1.25,465,2.936]],["body/controllers/CwDeviceOwnersController.html",[0,0.927,2,0.895,3,0.106,4,0.106,5,0.096,7,0.319,8,0.824,11,2.168,12,0.013,15,0.899,17,1.124,19,0.368,21,0.379,23,1.536,24,0.96,37,0.106,38,0.076,45,1.339,46,2.075,47,1.051,50,0.007,51,0.007,119,2.148,137,1.536,158,0.841,162,1.253,163,1.129,172,2.399,173,2.399,182,1.15,273,1.711,304,1.537,305,1.89,312,4.263,317,4.804,320,1.03,321,4.583,324,2.026,328,2.123,330,2.352,345,1.108,400,4.19,402,3.178,465,3.241,466,3.902,467,2.368,468,5.348,469,2.524,470,3.015,471,3.009,472,3.009,473,3.009,474,3.009,475,3.009,476,1.612,477,4.976,478,3.009,479,3.009,480,1.791,481,3.009,482,3.009,483,4.756,484,3.009,485,3.009,486,2.026,487,2.026,488,2.866,489,2.622,490,1.405,491,3.524,492,1.612,493,3.009,494,2.368,495,3.009,496,2.368,497,2.368,498,3.009,499,3.009,500,2.368,501,2.368,502,3.009,503,2.368,504,2.368,505,3.009]],["title/modules/CwDeviceOwnersModule.html",[52,1.166,65,2.731]],["body/modules/CwDeviceOwnersModule.html",[2,1.771,3,0.16,4,0.16,5,0.143,12,0.013,19,0.428,21,0.567,37,0.16,38,0.114,50,0.009,51,0.009,52,1.915,54,1.861,55,1.936,56,2.105,57,2.105,58,1.936,59,3.109,60,2.105,65,5.384,73,3.862,75,2.778,76,2.105,77,2.105,79,3.355,85,3.548,309,3.548,360,3.548,465,4.82,488,4.052,489,3.929,506,3.929,507,3.929,508,4.509,509,4.502,510,5.95,511,4.509,512,3.548,513,4.509]],["title/injectables/CwDeviceOwnersService.html",[127,0.645,488,2.174]],["body/injectables/CwDeviceOwnersService.html",[3,0.115,4,0.115,5,0.103,7,0.343,8,0.87,9,2.008,12,0.013,15,0.999,17,1.21,19,0.396,21,0.408,31,2.305,37,0.115,38,0.082,39,0.932,45,0.686,46,1.606,47,1.21,50,0.007,51,0.007,119,2.029,127,0.752,129,1.11,132,1.493,158,0.999,162,1.442,163,1.299,182,1.239,235,3.462,236,2.246,304,1.228,305,1.782,311,2.535,319,3.325,320,1.11,328,1.878,329,2.208,330,1.878,338,1.451,343,1.392,345,1.194,355,4.296,361,2.183,366,3.185,370,1.679,400,2.047,402,1.952,483,2.183,488,2.535,490,1.513,491,3.723,492,1.737,509,4.059,512,2.551,514,2.551,515,4.731,516,3.242,517,3.242,518,4.731,519,3.242,520,2.047,521,3.335,522,2.551,523,2.551,524,2.551,525,2.551,526,2.551,527,1.287,528,1.392,529,2.551,530,2.346,531,2.826,532,3.242,533,3.242]],["title/controllers/CwDeviceTypeController.html",[0,1.25,534,2.936]],["body/controllers/CwDeviceTypeController.html",[0,1.314,2,1.269,3,0.151,4,0.151,5,0.136,7,0.452,8,1.055,9,1.798,11,1.963,12,0.013,15,0.814,17,1.018,19,0.432,21,0.537,23,2.178,24,1.36,37,0.151,38,0.108,47,0.757,50,0.009,51,0.009,137,2.178,158,1.026,162,0.902,163,0.813,236,1.829,273,1.63,301,4.373,304,1.681,305,2.066,310,3.356,311,3.471,312,3.86,313,3.356,315,3.356,370,2.035,402,2.674,410,2.692,467,3.356,490,1.991,494,3.356,521,2.928,527,1.693,528,1.831,534,4.15,535,3.356,536,3.717,537,3.717,538,3.717,539,3.356,540,2.928,541,3.717,542,2.871,543,3.356,544,4.264,545,4.264,546,4.264]],["title/modules/CwDeviceTypeModule.html",[52,1.166,547,2.936]],["body/modules/CwDeviceTypeModule.html",[2,1.74,3,0.155,4,0.155,5,0.14,12,0.013,19,0.436,21,0.553,37,0.155,38,0.111,50,0.009,51,0.009,52,1.89,54,1.812,55,1.886,56,2.049,57,2.049,58,1.886,59,3.068,60,2.049,64,4.468,73,3.833,75,2.729,76,2.049,77,2.049,79,3.296,534,4.757,540,3.833,541,3.826,547,5.848,548,3.826,549,3.826,550,4.39,551,4.468,552,4.39,553,4.39,554,3.455,555,4.39,556,3.455]],["title/injectables/CwDeviceTypeService.html",[127,0.645,540,2.071]],["body/injectables/CwDeviceTypeService.html",[3,0.116,4,0.116,5,0.104,7,0.347,8,0.876,9,2.012,12,0.013,15,1.002,17,1.214,19,0.397,21,0.412,31,2.318,37,0.116,38,0.083,39,0.941,45,0.692,46,1.615,47,1.214,50,0.008,51,0.008,119,2.036,127,0.758,129,1.121,132,1.23,158,1.002,162,1.447,163,1.304,182,1.251,236,2.253,304,1.237,305,1.792,311,2.553,319,3.344,320,1.121,328,1.891,329,2.224,330,1.891,338,1.465,343,1.406,345,1.205,355,4.307,361,2.204,366,3.208,370,1.691,402,1.966,410,2.067,490,1.528,492,1.754,521,3.348,522,2.576,523,2.576,524,2.576,525,2.576,526,2.576,527,1.3,528,1.406,529,2.576,539,3.749,540,2.433,542,2.204,543,2.576,551,4.073,556,2.576,557,2.576,558,4.765,559,3.274,560,3.274,561,4.765,562,3.274,563,4.765,564,2.369,565,3.274,566,3.274,567,2.853]],["title/controllers/CwDevicesController.html",[0,1.25,568,2.936]],["body/controllers/CwDevicesController.html",[0,1.31,2,1.265,3,0.15,4,0.15,5,0.135,7,0.45,8,1.052,9,1.796,11,1.959,12,0.013,15,0.812,17,1.015,19,0.432,21,0.535,23,2.171,24,1.356,37,0.15,38,0.108,47,0.754,50,0.009,51,0.009,137,2.171,158,0.812,162,0.899,163,0.81,172,2.278,173,2.278,236,1.825,273,1.625,301,4.367,304,1.679,305,2.063,310,3.345,311,3.465,312,3.852,313,3.345,315,3.345,328,1.688,370,2.031,383,2.683,467,3.345,486,2.862,487,2.862,490,1.984,494,3.345,521,2.922,527,1.688,528,1.826,536,3.705,537,3.705,538,3.705,568,4.141,569,3.345,570,5.722,571,2.922,572,3.705,573,3.345,574,3.076,575,3.345,576,4.251,577,4.251,578,4.251]],["title/modules/CwDevicesModule.html",[52,1.166,66,2.731]],["body/modules/CwDevicesModule.html",[2,1.74,3,0.155,4,0.155,5,0.14,12,0.013,19,0.436,21,0.553,37,0.155,38,0.111,50,0.009,51,0.009,52,1.89,54,1.812,55,1.886,56,2.049,57,2.049,58,1.886,59,3.068,60,2.049,64,4.468,66,5.44,73,3.833,75,2.729,76,2.049,77,2.049,79,3.296,82,3.826,85,3.455,568,4.757,571,3.833,572,3.826,579,3.826,580,4.39,581,3.826,582,4.468,583,5.847,584,4.39,585,3.455]],["title/injectables/CwDevicesService.html",[127,0.645,571,2.071]],["body/injectables/CwDevicesService.html",[3,0.116,4,0.116,5,0.105,7,0.348,8,0.879,9,2.014,12,0.013,15,1.004,17,1.216,19,0.398,21,0.414,31,2.325,37,0.116,38,0.083,39,0.946,45,0.696,46,1.62,47,1.216,50,0.008,51,0.008,119,2.039,127,0.761,129,1.126,132,1.233,158,1.004,162,1.449,163,1.306,182,1.257,236,2.256,304,1.241,305,1.797,311,2.562,319,3.353,320,1.126,328,1.898,329,2.232,330,1.898,338,1.472,343,1.413,345,1.211,355,4.313,361,2.215,366,3.219,370,1.697,383,2.077,386,2.215,490,1.536,492,1.763,520,3.018,521,3.354,522,2.589,523,2.589,524,2.589,525,2.589,526,2.589,527,1.306,528,1.413,529,2.589,571,2.442,573,3.763,574,2.381,575,2.589,582,4.08,585,2.589,586,2.589,587,4.782,588,3.29,589,3.29,590,4.782,591,3.29,592,2.381,593,3.29,594,3.29]],["title/controllers/DataController.html",[0,1.25,595,2.936]],["body/controllers/DataController.html",[0,0.733,2,0.708,3,0.084,4,0.084,5,0.076,7,0.252,8,0.688,11,1.583,12,0.013,15,0.656,17,0.82,19,0.381,21,0.299,22,1.501,23,1.214,24,1.193,37,0.084,38,0.06,39,0.684,40,2.909,45,1.279,46,1.506,47,1.123,50,0.006,51,0.006,114,4.028,119,2.128,132,1.566,137,1.214,144,3.347,158,0.998,162,0.978,163,0.881,164,2.807,172,2.004,173,2.476,183,1.601,189,1.721,190,4.137,206,2.073,224,2.476,269,2.659,304,0.971,305,1.474,312,1.601,317,2.707,320,1.583,321,1.721,324,1.601,328,0.944,341,1.274,380,3.6,402,1.907,469,2.108,476,1.274,486,1.601,487,1.601,490,1.11,492,1.274,496,2.943,497,1.871,500,1.871,501,1.871,503,1.871,504,1.871,520,3.818,540,1.91,571,1.91,595,2.707,596,2.073,597,1.871,598,2.378,599,2.378,600,4.413,601,4.377,602,4.743,603,4.979,604,4.123,605,4.567,606,3.74,607,2.378,608,5.157,609,3.74,610,3.74,611,3.74,612,2.378,613,5.24,614,2.378,615,2.378,616,3.74,617,3.74,618,2.378,619,2.378,620,2.378,621,4.028,622,2.378,623,1.721,624,2.751,625,2.073,626,2.707,627,3.308,628,4.965,629,1.721,630,1.721,631,2.378,632,2.378,633,1.871,634,1.871,635,2.378,636,2.378,637,2.378,638,2.378,639,2.378,640,2.378,641,2.378,642,2.378,643,2.378,644,2.378,645,2.378]],["title/modules/DataModule.html",[52,1.166,67,2.731]],["body/modules/DataModule.html",[2,1.518,3,0.127,4,0.127,5,0.114,12,0.013,19,0.45,21,0.453,37,0.127,38,0.091,50,0.008,51,0.008,52,1.703,54,1.486,55,1.546,56,1.68,57,1.68,58,1.546,59,2.765,60,1.68,67,5.53,75,2.381,76,1.68,77,1.68,79,2.029,332,2.915,488,3.785,509,4.205,512,2.832,540,3.607,551,4.205,556,2.832,571,3.607,582,4.205,585,2.832,595,4.287,624,4.205,625,3.137,629,2.605,630,2.605,646,3.137,647,3.137,648,4.205,649,3.599,650,3.599,651,2.832,652,3.137,653,2.832,654,3.599]],["title/injectables/DataRepository.html",[127,0.645,648,2.415]],["body/injectables/DataRepository.html",[3,0.116,4,0.116,5,0.104,7,0.348,8,0.878,9,1.777,12,0.013,15,0.798,17,0.847,19,0.277,21,0.413,31,2.826,37,0.116,38,0.083,39,0.944,42,1.954,45,1.01,46,1.969,47,0.998,50,0.008,51,0.008,119,2.197,127,0.759,129,1.124,132,1.616,158,0.931,162,1.388,163,1.072,182,1.254,209,1.694,211,1.895,236,1.97,269,3.063,270,3.309,272,2.328,273,1.824,290,2.841,294,1.954,320,1.124,331,1.85,332,2.826,333,5.383,347,1.85,348,3.013,349,2.841,352,1.954,446,4.071,520,3.899,600,4.158,601,4.47,602,4.47,605,2.86,648,2.841,655,2.86,656,4.773,657,4.773,658,3.282,659,4.773,660,3.282,661,3.756,662,4.773,663,3.282,664,4.773,665,2.582,666,3.282,667,3.282,668,3.282,669,3.454,670,3.454,671,3.213,672,2.86,673,2.375,674,3.282]],["title/injectables/DataService.html",[127,0.645,624,2.415]],["body/injectables/DataService.html",[3,0.086,4,0.086,5,0.077,7,0.256,8,0.697,9,1.212,12,0.013,15,0.864,17,1.081,18,1.439,19,0.383,21,0.304,37,0.086,38,0.061,39,1.089,45,1.494,46,1.751,47,1.13,50,0.006,51,0.006,108,1.439,119,2.103,127,0.602,129,0.828,132,1.483,157,3.236,158,0.935,162,1.288,163,1.16,164,1.295,190,1.526,209,2.26,211,1.854,224,2.832,235,2.633,269,2.468,273,0.924,304,0.983,305,1.208,318,1.038,320,1.81,330,1.504,345,1.395,380,3.417,402,2.627,469,2.135,470,2.55,476,2.029,477,1.749,480,2.254,488,2.832,490,1.128,492,1.295,520,3.624,527,0.959,528,1.038,540,2.699,571,2.699,597,2.98,600,3.144,601,3.38,602,3.38,603,2.98,604,1.902,608,1.902,623,1.749,624,2.254,626,2.741,627,4.018,629,1.749,630,1.749,633,2.98,634,3.675,648,3.789,651,1.902,653,1.902,670,1.749,675,1.902,676,2.417,677,4.07,678,2.417,679,2.417,680,3.301,681,3.826,682,2.417,683,3.301,684,2.417,685,2.417,686,2.417,687,3.826,688,2.106,689,3.559,690,3.301,691,2.106,692,2.106,693,2.106,694,3.301,695,2.106,696,3.301,697,2.106,698,4.07,699,2.106,700,2.106,701,2.106,702,2.106,703,2.106,704,1.902,705,1.902]],["title/classes/Datum.html",[38,0.103,689,2.731]],["body/classes/Datum.html",[3,0.22,4,0.22,5,0.198,12,0.012,37,0.22,38,0.158,50,0.011,51,0.011,302,2.058,689,4.899,706,5.428]],["title/injectables/DeviceLocationRepository.html",[127,0.645,707,3.192]],["body/injectables/DeviceLocationRepository.html",[3,0.12,4,0.12,5,0.108,7,0.359,8,0.899,9,1.961,12,0.013,15,0.983,17,1.18,19,0.364,21,0.427,37,0.12,38,0.086,39,0.975,40,2.926,46,1.991,47,1.18,50,0.008,51,0.008,119,2.06,127,0.777,129,1.161,132,1.692,158,0.983,162,1.406,163,1.266,236,2.12,304,1.268,305,1.828,323,3.23,326,3.73,328,1.94,329,2.281,330,1.94,331,2.755,332,2.743,335,2.14,336,3.202,338,1.517,339,4.371,341,3.07,343,1.456,345,1.248,347,1.911,370,1.735,521,3.394,527,1.346,528,1.456,707,3.845,708,2.667,709,3.39,710,2.282,711,2.282,712,2.282,713,2.282,714,2.282,715,2.282,716,2.667,717,3.39,718,2.282,719,3.39]],["title/injectables/DeviceOwnerRepository.html",[127,0.645,509,2.415]],["body/injectables/DeviceOwnerRepository.html",[3,0.101,4,0.101,5,0.091,7,0.302,8,0.792,9,1.959,12,0.013,15,0.959,17,1.155,19,0.335,21,0.359,31,2.139,37,0.101,38,0.072,39,0.821,40,2.646,45,0.604,46,1.871,47,1.155,50,0.007,51,0.007,119,1.937,127,0.685,129,0.978,132,1.718,157,1.61,158,0.959,162,1.377,163,1.24,209,1.013,211,1.133,235,3.253,236,2.155,269,2.419,270,2.307,272,2.1,273,1.645,290,1.699,294,1.699,304,1.117,305,1.653,323,2.922,326,3.551,328,1.709,329,2.01,330,1.709,331,2.427,332,2.555,335,1.802,336,2.947,338,1.277,339,4.109,341,2.777,343,1.226,345,1.051,347,1.61,348,1.802,349,1.699,370,1.528,386,4.382,402,1.178,477,3.116,509,2.563,521,3.162,527,1.133,528,1.226,530,3.116,531,2.488,665,2.247,669,2.066,671,1.922,673,2.066,710,1.922,711,1.922,712,1.922,713,1.922,714,1.922,715,1.922,718,1.922,720,2.247,721,4.305,722,2.855,723,4.305,724,2.855,725,2.855,726,2.855,727,2.855,728,2.247]],["title/injectables/DeviceRepository.html",[127,0.645,582,2.415]],["body/injectables/DeviceRepository.html",[3,0.102,4,0.102,5,0.092,7,0.305,8,0.797,9,1.963,12,0.013,15,0.962,17,1.159,19,0.337,21,0.362,31,2.15,37,0.102,38,0.073,39,0.828,40,2.66,45,0.609,46,1.878,47,1.159,50,0.007,51,0.007,119,1.943,127,0.689,129,0.986,132,1.655,157,1.623,158,1.012,162,1.381,163,1.244,209,1.022,211,1.143,236,2.161,269,2.432,270,2.322,272,2.113,273,1.656,290,1.714,294,1.714,304,1.125,305,1.662,323,2.937,326,3.56,328,1.72,329,2.023,330,1.72,331,2.443,332,2.565,335,1.818,336,2.959,338,1.288,339,4.122,341,2.791,343,1.237,345,1.06,347,1.623,348,1.818,349,1.714,370,1.538,386,4.562,402,1.188,521,3.174,527,1.143,528,1.237,575,2.266,582,2.579,665,2.266,669,2.084,671,1.939,673,2.084,710,1.939,711,1.939,712,1.939,713,1.939,714,1.939,715,1.939,718,1.939,728,2.266,729,2.266,730,5.209,731,2.879,732,2.879,733,3.41,734,2.879,735,3.41,736,2.879,737,2.879]],["title/injectables/DeviceTypeRepository.html",[127,0.645,551,2.415]],["body/injectables/DeviceTypeRepository.html",[3,0.101,4,0.101,5,0.091,7,0.304,8,0.794,9,1.961,12,0.013,15,0.96,17,1.157,19,0.336,21,0.361,31,2.144,37,0.101,38,0.073,39,0.824,40,2.653,45,0.606,46,1.874,47,1.157,50,0.007,51,0.007,119,1.94,127,0.687,129,0.982,132,1.654,157,1.616,158,1.046,162,1.379,163,1.242,209,1.018,211,1.138,236,2.158,269,2.425,270,2.314,272,2.107,273,1.651,290,1.707,294,1.707,304,1.121,305,1.657,323,2.929,326,3.556,328,1.715,329,2.016,330,1.715,331,2.435,332,2.56,335,1.81,336,2.953,338,1.283,339,4.115,341,2.784,343,1.231,345,1.056,347,1.616,348,1.81,349,1.707,370,1.533,402,1.183,521,3.168,527,1.138,528,1.231,542,2.908,543,2.256,551,2.571,567,5.897,669,2.075,671,1.93,673,2.075,710,1.93,711,1.93,712,1.93,713,1.93,714,1.93,715,1.93,718,1.93,728,2.256,733,3.399,738,2.256,739,5.196,740,2.867,741,2.867,742,2.867,743,2.867,744,2.867,745,2.867]],["title/interfaces/FindAllParams.html",[318,1.742,681,2.936]],["body/interfaces/FindAllParams.html",[3,0.1,4,0.1,5,0.09,7,0.299,9,0.733,12,0.013,17,0.501,19,0.403,21,0.355,37,0.1,38,0.072,39,0.812,45,1.554,46,1.48,47,0.501,50,0.007,51,0.007,108,1.681,119,2.111,127,0.679,132,1.349,157,3.475,158,0.92,163,0.814,164,1.514,190,1.783,209,2.39,211,2.044,223,1.911,224,3.075,235,1.593,269,2.679,273,1.08,318,1.213,320,1.965,345,1.04,377,1.783,380,2.542,402,2.778,476,1.514,477,2.044,480,1.681,488,2.288,490,1.319,492,1.514,520,4.376,527,1.121,528,1.213,540,2.181,571,2.181,597,2.223,600,4.365,601,4.692,602,4.692,603,4.516,604,4.052,608,2.223,623,2.044,624,1.681,626,3.091,627,3.25,629,2.044,630,2.044,633,2.223,634,2.223,648,3.065,651,2.223,653,2.223,670,2.044,675,2.223,677,2.462,680,2.462,681,3.727,683,2.462,687,4.154,688,2.462,689,3.864,690,3.722,691,2.462,692,2.462,693,2.462,694,3.722,695,2.462,696,3.722,697,2.462,698,4.488,699,2.462,700,2.462,701,2.462,702,2.462,703,2.462,704,2.223,705,2.223]],["title/controllers/GeolocationController.html",[0,1.25,746,2.936]],["body/controllers/GeolocationController.html",[0,1.432,2,1.384,3,0.165,4,0.165,5,0.148,7,0.492,8,1.117,9,1.755,11,1.592,12,0.013,15,0.66,17,0.825,18,2.768,19,0.416,21,0.585,22,2.935,23,2.374,24,1.483,37,0.165,38,0.118,45,0.983,50,0.01,51,0.01,137,2.374,139,5.641,164,2.491,171,4.052,175,3.13,182,1.777,183,3.13,185,4.052,203,3.659,209,1.65,211,1.846,320,1.592,746,4.394,747,4.052,748,5.292,749,4.649,750,4.649,751,4.649,752,4.268,753,4.052,754,4.649,755,4.649,756,4.649,757,3.833,758,4.649,759,4.649,760,4.649,761,4.649,762,4.649,763,4.649]],["title/modules/GeolocationModule.html",[52,1.166,68,2.731]],["body/modules/GeolocationModule.html",[2,1.862,3,0.172,4,0.172,5,0.155,12,0.013,19,0.424,21,0.613,37,0.172,38,0.124,50,0.01,51,0.01,52,1.988,54,2.01,55,2.091,56,2.273,57,2.273,58,2.091,59,3.227,60,2.273,68,5.357,74,3.944,75,2.921,76,2.273,77,2.273,746,5.003,752,4.875,753,4.244,764,4.244,765,4.244,766,4.869,767,4.869,768,4.869]],["title/injectables/GeolocationService.html",[127,0.645,752,2.561]],["body/injectables/GeolocationService.html",[3,0.174,4,0.174,5,0.157,7,0.521,8,1.159,9,1.804,12,0.013,15,0.699,17,0.874,18,2.931,19,0.286,21,0.62,31,2.868,37,0.174,38,0.125,45,1.041,47,0.874,50,0.01,51,0.01,127,1.002,129,1.686,132,1.521,158,0.699,162,1.041,163,0.938,209,2.237,211,2.501,269,2.941,272,2.401,273,1.882,748,4.291,752,3.977,769,4.291,770,6.301,771,6.301,772,4.923,773,3.874,774,3.874,775,4.923,776,4.291,777,4.291,778,4.923,779,4.291,780,4.291]],["title/controllers/HealthController.html",[0,1.25,781,2.936]],["body/controllers/HealthController.html",[0,1.557,2,1.504,3,0.179,4,0.179,5,0.161,7,0.535,8,1.178,11,1.73,12,0.013,15,0.717,17,0.897,19,0.372,21,0.636,37,0.179,38,0.128,39,1.453,45,1.069,50,0.01,51,0.01,137,2.58,224,3.433,781,4.636,782,4.404,783,6.406,784,6.446,785,5.053,786,5.053,787,6.406,788,6.406,789,6.406,790,3.976,791,5.053,792,5.053,793,5.053,794,5.053,795,5.053,796,5.053]],["title/modules/HealthModule.html",[52,1.166,69,2.731]],["body/modules/HealthModule.html",[2,2.007,3,0.194,4,0.194,5,0.174,12,0.013,19,0.442,21,0.691,37,0.194,38,0.139,50,0.011,51,0.011,52,1.939,54,2.265,69,4.541,79,3.094,781,5.285,790,4.319,797,5.488,798,6.745,799,6.745,800,4.783,801,5.488]],["title/injectables/HttpCacheInterceptor.html",[127,0.645,802,3.192]],["body/injectables/HttpCacheInterceptor.html",[3,0.158,4,0.158,5,0.142,7,0.474,8,1.09,12,0.013,14,5.224,15,0.636,17,0.795,19,0.344,21,0.564,25,5.786,27,3.241,28,3.241,37,0.158,38,0.114,45,1.253,47,0.795,50,0.009,51,0.009,127,0.942,129,1.533,132,1.297,158,0.636,162,0.947,163,0.853,188,2.827,209,2.508,244,5.113,370,2.103,802,4.662,803,5.163,804,3.903,805,5.924,806,5.924,807,4.478,808,3.524,809,3.524,810,4.478,811,4.478,812,6.639,813,4.478,814,4.478,815,4.478,816,4.478,817,4.478,818,4.478]],["title/interfaces/IRepositoryBase.html",[318,1.742,819,2.936]],["body/interfaces/IRepositoryBase.html",[3,0.143,4,0.143,5,0.128,7,0.427,8,1.015,12,0.013,15,1.006,17,1.258,37,0.195,46,1.81,47,1.201,50,0.009,51,0.009,119,2.304,132,1.378,158,0.961,162,1.432,163,1.29,236,2.589,304,1.433,305,2.262,318,2.371,330,2.192,336,2.06,338,1.805,343,1.732,345,2.318,377,2.546,469,3.113,470,3.717,476,2.958,480,3.286,661,5.899,819,3.996,820,3.174,821,5.486,822,4.033,823,6.18,824,4.033,825,4.033,826,4.033,827,4.033,828,2.919]],["title/guards/JwtAuthGuard.html",[94,2.936,126,2.731]],["body/guards/JwtAuthGuard.html",[3,0.12,4,0.12,5,0.107,7,0.358,8,0.897,9,1.485,12,0.013,15,0.812,17,0.866,19,0.364,21,0.426,31,1.395,37,0.12,38,0.086,39,1.402,42,2.013,45,1.325,47,1.015,50,0.008,51,0.008,74,3.642,92,2.661,94,3.53,108,2.903,126,2.276,127,0.776,132,1.068,157,1.906,158,0.692,162,1.21,163,1.09,178,2.447,179,2.947,188,3.612,198,3.226,209,2.357,211,1.342,215,3.079,224,3.558,236,1.556,243,4.929,244,4.533,245,2.661,268,2.661,270,1.812,272,2.379,273,1.864,276,2.661,352,3.406,357,2.447,600,2.276,808,2.661,809,2.661,829,2.661,830,5.458,831,2.947,832,4.877,833,3.381,834,6.918,835,3.381,836,4.251,837,3.381,838,4.877,839,3.381,840,2.661,841,4.251,842,3.381,843,3.381,844,3.381,845,3.381,846,3.381,847,3.381,848,3.381,849,2.947,850,2.947,851,2.947,852,3.381,853,4.251,854,3.381,855,3.381,856,2.947]],["title/classes/Location.html",[38,0.103,757,2.561]],["body/classes/Location.html",[3,0.22,4,0.22,5,0.198,12,0.012,37,0.22,38,0.158,50,0.011,51,0.011,302,2.058,757,4.593,857,5.428]],["title/controllers/LocationController.html",[0,1.25,858,2.936]],["body/controllers/LocationController.html",[0,0.77,2,0.743,3,0.088,4,0.088,5,0.079,7,0.265,8,0.715,11,1.996,12,0.013,15,0.827,17,1.035,19,0.339,21,0.314,23,1.276,24,0.797,37,0.088,38,0.063,45,1.233,46,1.775,47,0.955,50,0.006,51,0.006,132,1.498,137,1.276,143,4.69,144,4.123,146,4.858,147,4.858,148,3.754,149,4.858,150,3.754,151,4.858,152,4.858,153,3.754,154,4.858,158,0.764,162,1.138,163,1.025,172,2.082,173,2.556,174,5.953,182,0.955,186,5.9,188,3.011,189,3.452,190,3.011,191,4.858,304,1.009,305,1.717,320,0.855,324,1.682,328,0.992,330,1.543,345,0.92,415,3.897,469,2.191,470,2.616,476,1.338,480,1.487,486,1.682,487,1.682,490,1.166,492,1.338,496,1.966,497,1.966,500,3.058,501,1.966,503,1.966,504,1.966,757,1.577,858,2.813,859,2.177,860,2.177,861,2.498,862,2.498,863,3.886,864,2.498,865,2.498,866,2.498,867,2.498,868,3.886,869,2.498,870,2.498,871,4.487,872,2.498,873,3.011,874,2.177,875,3.058,876,2.498,877,2.498,878,2.498,879,3.886,880,2.498,881,2.498,882,2.498,883,2.177,884,2.498]],["title/modules/LocationModule.html",[52,1.166,70,2.731]],["body/modules/LocationModule.html",[2,1.791,3,0.162,4,0.162,5,0.146,12,0.013,19,0.43,21,0.577,37,0.162,38,0.116,50,0.009,51,0.009,52,1.931,54,1.893,55,1.97,56,2.141,57,2.141,58,1.97,59,3.135,60,2.141,70,5.4,73,3.88,75,2.809,76,2.141,77,2.141,79,3.393,554,3.609,858,4.861,873,4.797,874,3.997,885,3.997,886,3.997,887,4.586,888,4.797,889,4.586,890,4.586,891,3.997]],["title/injectables/LocationRepository.html",[127,0.645,888,2.561]],["body/injectables/LocationRepository.html",[3,0.12,4,0.12,5,0.108,7,0.359,8,0.899,9,1.961,12,0.013,15,0.983,17,1.18,19,0.364,21,0.427,37,0.12,38,0.086,39,0.975,40,2.926,46,1.991,47,1.18,50,0.008,51,0.008,119,2.06,127,0.777,129,1.161,132,1.692,158,0.983,162,1.406,163,1.266,236,2.12,304,1.268,305,1.828,323,3.23,326,3.73,328,1.94,329,2.281,330,1.94,331,2.755,332,2.743,335,2.14,336,3.202,338,1.517,339,4.371,341,3.07,343,1.456,345,1.248,347,1.911,370,1.735,521,3.394,527,1.346,528,1.456,710,2.282,711,2.282,712,2.282,713,2.282,714,2.282,715,2.282,718,2.282,888,3.084,892,2.667,893,3.39,894,2.667,895,3.39,896,3.39]],["title/injectables/LocationService.html",[127,0.645,873,2.561]],["body/injectables/LocationService.html",[3,0.128,4,0.128,5,0.115,7,0.384,8,0.943,12,0.013,15,1.005,17,1.211,19,0.376,21,0.457,37,0.128,38,0.092,39,1.043,45,1.443,46,1.962,47,1.211,50,0.008,51,0.008,119,2.251,127,0.816,129,1.242,132,1.123,158,0.968,162,1.443,163,1.3,182,1.387,304,1.331,305,2.063,320,1.242,330,2.036,345,1.889,415,4.307,469,2.892,470,3.454,476,2.749,480,3.054,490,1.694,492,1.944,687,3.712,704,2.855,705,2.855,757,3.238,860,4.471,871,4.902,873,3.238,875,4.037,888,4.471,891,3.163,897,3.163,898,3.629,899,3.629,900,3.629,901,3.629,902,3.629,903,3.629,904,3.629,905,3.629,906,3.629,907,3.629]],["title/classes/LoginDto.html",[38,0.103,159,2.731]],["body/classes/LoginDto.html",[3,0.165,4,0.165,5,0.148,7,0.494,11,2.084,12,0.013,15,0.864,19,0.354,24,1.488,37,0.215,38,0.172,50,0.01,51,0.01,132,1.63,144,3.459,158,0.864,159,4.097,198,4.047,215,3.842,223,2.723,233,5.649,235,4.198,266,3.377,302,1.542,398,4.032,399,2.63,463,4.789,773,3.672,908,3.672,909,5.304,910,4.666,911,4.666,912,4.666,913,4.666,914,6.256,915,3.377,916,4.066]],["title/classes/Profile.html",[38,0.103,917,3.192]],["body/classes/Profile.html",[3,0.22,4,0.22,5,0.198,12,0.012,37,0.22,38,0.158,50,0.011,51,0.011,302,2.058,917,5.726,918,5.428]],["title/injectables/ProfileRepository.html",[127,0.645,919,2.561]],["body/injectables/ProfileRepository.html",[3,0.145,4,0.145,5,0.13,7,0.434,8,1.026,9,1.647,11,1.402,12,0.013,15,0.792,17,0.727,19,0.396,21,0.515,22,2.585,24,1.306,37,0.145,38,0.104,39,1.177,45,0.866,46,1.177,47,0.99,50,0.009,51,0.009,127,0.887,129,1.402,132,1.389,158,0.9,162,1.18,163,1.063,164,2.194,182,1.565,183,3.756,198,2.309,209,1.98,211,2.215,236,1.78,269,2.962,270,3.65,272,2.721,290,2.438,294,2.438,320,1.402,329,2.604,331,2.309,332,3.036,343,2.396,347,2.309,348,2.585,349,2.438,352,2.438,527,1.626,528,1.759,672,3.569,919,3.521,920,3.222,921,4.095,922,4.095,923,3.222,924,4.095,925,6.345,926,4.095,927,4.095,928,4.095]],["title/controllers/ProfilesController.html",[0,1.25,929,2.936]],["body/controllers/ProfilesController.html",[0,1.495,2,1.444,3,0.172,4,0.172,5,0.154,7,0.514,8,1.148,11,1.661,12,0.013,15,0.688,17,0.861,19,0.401,21,0.611,22,3.063,23,2.478,24,1.548,37,0.172,38,0.123,45,1.026,46,1.395,47,0.861,50,0.01,51,0.01,137,2.478,162,1.026,163,0.924,164,3.698,172,2.6,173,2.6,182,1.854,183,3.266,209,1.722,320,1.661,328,1.926,469,3.519,486,3.266,487,3.266,929,4.517,930,4.228,931,4.852,932,4.852,933,4.852,934,4.852,935,4.356,936,4.228,937,4.852,938,4.852,939,4.852,940,4.852,941,4.852]],["title/modules/ProfilesModule.html",[52,1.166,71,2.731]],["body/modules/ProfilesModule.html",[2,1.775,3,0.16,4,0.16,5,0.144,12,0.013,19,0.44,21,0.569,37,0.16,38,0.115,50,0.009,51,0.009,52,1.918,54,1.867,55,1.943,56,2.112,57,2.112,58,1.943,59,3.114,60,2.112,71,5.387,73,3.866,75,2.784,76,2.112,77,2.112,79,3.362,332,1.867,554,3.56,652,3.943,919,4.779,929,4.828,935,4.779,936,3.943,942,3.943,943,3.943,944,4.524,945,4.524,946,4.524,947,3.943]],["title/injectables/ProfilesService.html",[127,0.645,935,2.561]],["body/injectables/ProfilesService.html",[3,0.169,4,0.169,5,0.152,7,0.507,8,1.137,12,0.013,15,0.878,17,0.849,19,0.398,21,0.602,37,0.169,38,0.121,39,1.375,45,1.011,46,1.778,47,1.098,50,0.01,51,0.01,127,0.984,129,1.637,132,1.5,158,0.878,162,1.308,163,1.178,164,2.562,182,1.828,320,1.637,434,3.22,469,3.487,476,3.314,490,2.232,919,4.574,935,3.904,947,4.168,948,4.168,949,4.782,950,4.782,951,6.184,952,4.782,953,4.168,954,4.782,955,4.782]],["title/controllers/RelayController.html",[0,1.25,956,2.936]],["body/controllers/RelayController.html",[0,1.058,2,1.022,3,0.121,4,0.121,5,0.109,7,0.364,8,0.907,9,1.498,11,1.176,12,0.013,15,0.487,17,0.609,18,2.044,19,0.366,21,0.432,23,1.753,24,1.095,31,2.035,37,0.121,38,0.087,45,0.726,47,0.875,50,0.008,51,0.008,137,1.753,139,3.881,144,3.957,146,3.881,147,3.881,148,2.702,149,3.881,150,2.702,151,3.881,152,3.881,153,2.702,154,3.881,158,0.487,162,0.726,163,0.654,164,3.579,174,5.472,182,1.312,186,5.257,188,2.167,189,2.485,190,2.167,191,3.881,203,2.702,209,1.751,211,1.363,320,1.176,623,2.485,628,4.298,687,3.569,774,3.881,956,3.569,957,2.702,958,6.307,959,3.433,960,6.061,961,3.433,962,6.388,963,5.771,964,4.931,965,5.497,966,3.433,967,4.931,968,3.433,969,3.433,970,3.643,971,2.992,972,3.433,973,5.029,974,3.433,975,3.433,976,3.433,977,3.433,978,3.433,979,3.433,980,3.433,981,3.433,982,3.433,983,3.433]],["title/modules/RelayModule.html",[52,1.166,72,2.731]],["body/modules/RelayModule.html",[2,1.925,3,0.182,4,0.182,5,0.163,12,0.013,19,0.411,21,0.646,37,0.182,38,0.13,50,0.01,51,0.01,52,2.037,54,2.117,55,2.203,56,2.395,57,2.395,58,2.203,59,3.307,60,2.395,72,5.271,75,3.019,76,2.395,77,2.395,956,5.126,970,4.942,971,4.471,984,4.471,985,4.471,986,5.131,987,5.131]],["title/injectables/RelayService.html",[127,0.645,970,2.561]],["body/injectables/RelayService.html",[3,0.117,4,0.117,5,0.105,7,0.349,8,0.881,9,1.464,12,0.013,15,0.8,17,0.85,18,1.963,19,0.278,21,0.415,31,2.328,37,0.117,38,0.084,39,1.622,42,1.963,45,1.013,47,0.85,50,0.008,51,0.008,81,2.22,108,1.963,127,0.762,129,1.129,158,0.68,162,1.013,163,0.913,172,1.767,173,1.767,198,1.859,200,2.874,209,2.7,211,1.902,224,3.022,230,2.595,259,2.387,268,2.595,269,1.539,270,1.767,272,1.609,273,1.831,276,2.595,446,4.082,671,2.22,774,2.595,776,2.874,777,2.874,779,2.874,780,2.874,883,2.874,962,4.175,970,3.024,988,2.874,989,4.79,990,4.79,991,3.298,992,4.79,993,3.298,994,3.298,995,4.79,996,3.298,997,3.298,998,4.79,999,3.298,1000,3.298,1001,3.298,1002,3.298,1003,4.79,1004,3.298,1005,3.298,1006,4.79,1007,3.298,1008,4.79,1009,3.298,1010,3.298,1011,3.298,1012,3.298,1013,3.298,1014,3.298,1015,3.298,1016,3.298,1017,3.298,1018,3.298,1019,3.298,1020,3.298,1021,3.298,1022,3.298,1023,3.298,1024,3.298,1025,3.298,1026,2.874,1027,2.874,1028,3.298,1029,3.298,1030,3.298,1031,3.298,1032,3.298,1033,4.79,1034,4.79,1035,5.641,1036,3.298,1037,3.298,1038,3.298,1039,3.298,1040,3.298,1041,3.298,1042,3.298,1043,3.298,1044,3.298]],["title/interfaces/RepositoryInterface.html",[318,1.742,828,2.936]],["body/interfaces/RepositoryInterface.html",[3,0.143,4,0.143,5,0.128,7,0.427,8,1.015,12,0.013,15,1.006,17,1.258,37,0.195,46,1.81,47,1.201,50,0.009,51,0.009,119,1.873,132,1.695,158,0.961,162,1.432,163,1.29,236,2.589,304,1.433,305,2.262,318,2.371,328,2.192,329,2.577,330,2.192,336,3.215,338,2.47,343,2.371,345,2.318,377,2.546,476,2.161,480,2.401,661,5.58,819,2.919,820,3.174,821,5.486,823,6.18,828,3.996,1045,4.033,1046,4.033,1047,4.033,1048,4.033,1049,4.033]],["title/guards/SupabaseAuthGuard.html",[126,2.731,175,2.731]],["body/guards/SupabaseAuthGuard.html",[2,1.04,3,0.124,4,0.124,5,0.111,7,0.37,8,0.919,9,1.513,12,0.013,15,0.709,17,0.62,19,0.29,21,0.44,37,0.124,38,0.089,39,1.005,42,2.081,45,1.057,47,0.887,50,0.008,51,0.008,74,3.761,108,2.974,127,0.795,157,2.817,158,0.709,162,1.057,163,0.952,175,3.363,178,2.53,182,1.336,188,3.154,198,3.586,209,2.484,211,1.983,215,4.015,236,1.594,239,4.354,243,5.005,244,4.603,245,2.751,267,4.354,272,3.102,273,2.431,280,5.543,281,5.543,295,4.354,357,2.53,784,4.354,808,2.751,809,2.751,829,2.751,836,4.354,849,3.047,850,3.047,851,3.047,853,4.354,856,3.047,1026,3.047,1027,3.047,1050,3.047,1051,3.496,1052,3.496,1053,3.496,1054,4.996,1055,4.996,1056,3.496,1057,3.496,1058,3.496,1059,4.996,1060,3.496,1061,3.496,1062,3.496,1063,3.496,1064,3.496,1065,3.496,1066,3.496,1067,3.496]],["title/modules/SupabaseModule.html",[52,1.166,73,2.071]],["body/modules/SupabaseModule.html",[3,0.176,4,0.176,5,0.158,12,0.013,19,0.369,21,0.626,37,0.225,38,0.126,50,0.01,51,0.01,52,2.008,54,2.619,55,2.138,56,2.324,57,2.324,58,2.138,59,3.261,60,3.261,73,4.031,75,2.962,76,2.324,77,2.324,332,3.396,1068,4.338,1069,4.978,1070,4.338,1071,6.345,1072,4.978,1073,4.978]],["title/injectables/SupabaseService.html",[127,0.645,332,1.674]],["body/injectables/SupabaseService.html",[3,0.155,4,0.155,5,0.139,7,0.464,8,1.073,12,0.013,15,0.931,17,0.777,19,0.407,21,0.551,37,0.155,38,0.111,39,1.258,45,0.926,47,0.777,50,0.009,51,0.009,81,2.946,127,0.928,129,1.498,158,0.828,162,0.926,163,0.834,182,1.672,209,2.071,223,2.61,224,3.516,225,6.101,229,3.814,230,5.902,242,6.355,249,3.814,250,3.444,251,3.444,253,3.814,254,3.814,255,5.084,256,3.814,257,3.814,258,3.814,259,3.167,260,3.444,261,3.167,262,5.084,263,3.814,332,2.408,349,4.167,527,1.737,528,1.879,1074,3.814,1075,5.834,1076,4.376]],["title/classes/UpdateDatumDto.html",[38,0.103,627,2.561]],["body/classes/UpdateDatumDto.html",[3,0.205,4,0.205,5,0.184,12,0.013,19,0.405,24,1.849,37,0.205,38,0.147,50,0.011,51,0.011,302,1.916,304,1.505,370,2.475,380,3.451,382,4.562,626,4.195,627,4.402,1077,5.052,1078,6.973,1079,3.659]],["title/classes/UpdateDeviceDto.html",[38,0.103,592,2.936]],["body/classes/UpdateDeviceDto.html",[3,0.205,4,0.205,5,0.184,12,0.013,19,0.405,24,1.849,37,0.205,38,0.147,50,0.011,51,0.011,302,1.916,304,1.505,370,2.475,383,3.659,385,4.562,573,4.562,592,5.047,1079,3.659,1080,5.052,1081,6.973]],["title/classes/UpdateDeviceOwnerDto.html",[38,0.103,483,2.731]],["body/classes/UpdateDeviceOwnerDto.html",[3,0.203,4,0.203,5,0.183,12,0.013,19,0.403,24,1.833,37,0.203,38,0.146,50,0.011,51,0.011,302,1.899,304,1.492,370,2.463,400,3.628,402,2.863,403,4.523,483,4.671,491,4.523,1079,3.628,1082,5.009,1083,6.937]],["title/classes/UpdateDeviceTypeDto.html",[38,0.103,564,2.936]],["body/classes/UpdateDeviceTypeDto.html",[3,0.203,4,0.203,5,0.183,12,0.013,19,0.403,24,1.833,37,0.203,38,0.146,50,0.011,51,0.011,302,1.899,304,1.492,370,2.463,402,2.863,410,3.628,412,4.523,539,4.523,564,5.021,1079,3.628,1084,5.009,1085,6.937]],["title/classes/UpdateLocationDto.html",[38,0.103,871,2.731]],["body/classes/UpdateLocationDto.html",[3,0.205,4,0.205,5,0.184,12,0.013,19,0.405,24,1.849,37,0.205,38,0.147,50,0.011,51,0.011,302,1.916,304,1.505,370,2.475,415,3.659,417,4.562,871,4.695,875,4.562,1079,3.659,1086,5.052,1087,6.973]],["title/classes/UpdateProfileDto.html",[38,0.103,1088,3.192]],["body/classes/UpdateProfileDto.html",[3,0.205,4,0.205,5,0.184,12,0.013,19,0.405,24,1.849,37,0.205,38,0.147,50,0.011,51,0.011,302,1.916,304,1.505,370,2.475,434,3.903,436,4.562,953,5.052,1079,3.659,1088,5.487,1089,5.052,1090,6.973]],["title/classes/UserAuthDto.html",[38,0.103,915,2.936]],["body/classes/UserAuthDto.html",[3,0.172,4,0.172,5,0.155,7,0.516,11,1.667,12,0.013,15,0.691,19,0.363,24,1.553,37,0.221,38,0.175,50,0.01,51,0.01,132,1.597,144,3.53,158,0.691,159,3.278,198,3.527,215,4.605,223,2.799,233,4.923,235,3.527,266,4.528,302,1.609,398,4.115,399,2.745,463,4.923,773,3.832,908,3.832,909,4.244,914,6.358,915,4.528,916,5.453,1091,4.869,1092,4.869]],["title/coverage.html",[1093,4.831]],["body/coverage.html",[0,2.012,1,1.336,5,0.059,6,1.609,12,0.013,31,0.762,38,0.187,50,0.005,51,0.005,58,0.793,74,0.943,94,1.336,126,2.053,127,1.163,128,1.453,130,1.609,135,1.336,136,1.609,158,1.046,159,1.243,175,1.243,222,1.609,264,1.453,273,0.706,301,1.166,303,2.4,307,1.815,318,2.15,326,0.943,327,1.609,332,0.762,355,1.099,356,2.4,380,1.099,381,1.609,382,2.4,383,1.166,384,1.609,385,2.4,400,1.166,401,1.609,402,1.867,403,2.4,410,1.166,411,1.609,412,2.4,415,1.166,416,1.609,417,2.4,434,1.243,435,1.609,436,2.4,465,1.336,466,1.609,483,1.243,488,0.989,509,1.099,514,2.4,527,0.733,530,2.207,534,1.336,535,2.4,540,0.943,542,2.623,551,1.099,557,2.4,564,1.336,568,1.336,569,2.4,571,0.943,574,2.207,582,1.099,586,2.4,592,1.336,595,1.336,596,1.609,621,7.28,624,1.099,627,1.166,648,1.099,655,1.609,670,1.336,675,2.4,681,1.336,689,1.243,706,1.609,707,1.453,708,2.4,716,1.453,720,2.4,729,2.4,735,1.453,738,2.4,746,1.336,747,1.609,752,1.166,757,1.166,769,1.609,781,1.336,782,1.609,802,1.453,803,1.609,804,1.609,819,1.336,820,2.4,828,1.336,830,1.609,831,1.609,840,1.453,857,1.609,858,1.336,859,1.609,871,1.243,873,1.166,888,1.166,892,2.4,894,1.453,897,1.609,908,2.4,915,1.336,917,1.453,918,1.609,919,1.166,920,2.4,923,1.453,929,1.336,930,1.609,935,1.166,948,1.609,956,1.336,957,1.453,970,1.166,988,1.609,1050,1.609,1074,1.609,1077,1.609,1080,1.609,1082,1.609,1084,1.609,1086,1.609,1088,1.453,1089,1.609,1093,1.609,1094,1.847,1095,1.847,1096,1.847,1097,5.197,1098,7.31,1099,1.609,1100,7.834,1101,1.609,1102,1.609,1103,1.609,1104,1.609,1105,1.609,1106,1.609,1107,6.181,1108,6.368,1109,5.391,1110,5.391,1111,2.658,1112,3.05,1113,5.703,1114,5.391,1115,3.05,1116,1.609,1117,1.847,1118,1.847]],["title/dependencies.html",[55,2.096,261,2.449]],["body/dependencies.html",[12,0.013,21,0.622,24,1.576,27,3.576,28,4.571,30,3.576,38,0.16,50,0.01,51,0.01,55,2.122,81,3.327,92,3.888,121,4.306,250,3.888,251,3.888,266,3.576,399,2.786,790,3.888,800,4.306,1119,4.941,1120,4.941,1121,6.961,1122,4.941,1123,4.941,1124,4.941,1125,4.941,1126,4.941,1127,4.941,1128,4.941,1129,4.941,1130,4.941,1131,4.941,1132,4.941,1133,4.941,1134,4.941,1135,4.941,1136,4.941,1137,4.941,1138,4.941,1139,4.941,1140,4.941,1141,4.941,1142,4.941,1143,4.941,1144,4.941,1145,4.941]],["title/miscellaneous/enumerations.html",[1146,1.908,1147,4.254]],["body/miscellaneous/enumerations.html",[7,0.645,12,0.012,50,0.011,51,0.011,341,3.847,957,4.79,960,6.257,965,6.257,973,6.257,1146,3.432,1147,5.305,1148,6.087]],["title/miscellaneous/functions.html",[1146,1.908,1149,4.254]],["body/miscellaneous/functions.html",[7,0.666,12,0.012,50,0.012,51,0.012,58,3.324,1116,5.479,1146,3.545,1149,5.479,1150,6.287]],["title/index.html",[7,0.358,1151,3.384,1152,3.384]],["body/index.html",[12,0.011,50,0.011,51,0.011,144,3.181,199,5.428,1153,6.229,1154,6.229,1155,6.229,1156,6.229,1157,6.229,1158,6.229,1159,6.229,1160,6.229]],["title/modules.html",[54,2.288]],["body/modules.html",[12,0.01,50,0.01,51,0.01,53,3.657,54,2.085,64,3.008,65,3.402,66,3.402,67,3.402,68,3.402,69,3.402,70,3.402,71,3.402,72,3.402,73,2.58,547,3.657,1161,8.203,1162,8.203,1163,8.203,1164,8.246,1165,5.053,1166,5.053]],["title/overview.html",[1167,4.831]],["body/overview.html",[2,0.816,12,0.013,50,0.007,51,0.007,52,0.789,53,5.802,54,1.132,55,1.178,56,1.281,57,1.281,58,1.178,59,1.281,60,1.281,61,2.391,62,2.391,63,2.391,64,4.089,65,4.738,66,4.913,67,5.334,68,4.487,69,3.406,70,4.738,71,4.738,72,4.097,73,3.726,74,3.594,75,1.95,76,1.281,77,1.281,129,0.939,217,2.391,219,2.391,260,2.159,302,0.907,332,2.835,377,1.732,488,3.03,506,2.391,507,2.391,509,3.366,540,2.888,547,5.195,548,2.391,549,2.391,551,3.366,571,2.888,579,2.391,581,2.391,582,3.366,624,3.011,646,2.391,647,2.391,648,3.011,752,3.193,764,2.391,765,2.391,829,2.159,873,3.193,885,2.391,886,2.391,888,3.193,919,3.193,935,3.193,942,2.391,943,2.391,970,3.193,984,2.391,985,2.391,1068,2.391,1070,2.391,1167,2.391,1168,2.744,1169,2.744,1170,2.744,1171,2.744,1172,2.744]],["title/properties.html",[223,2.184,261,2.449]],["body/properties.html",[12,0.013,50,0.011,51,0.011,144,3.166,223,2.774,259,4.487,1173,6.2,1174,6.2,1175,6.2,1176,6.2]],["title/miscellaneous/typealiases.html",[1146,1.908,1177,4.881]],["body/miscellaneous/typealiases.html",[7,0.484,12,0.012,50,0.009,51,0.009,119,1.36,132,1,158,0.952,352,2.72,446,3.307,514,3.596,527,2.662,530,5.154,535,3.596,542,5.111,557,3.596,569,3.596,574,5.154,586,3.596,708,3.596,716,4.725,720,3.596,729,3.596,733,4.725,735,4.725,738,3.596,892,3.596,894,4.725,920,3.596,923,4.725,1097,6.921,1099,5.233,1101,5.233,1102,5.844,1103,5.233,1104,5.233,1105,5.233,1106,5.233,1146,2.577,1178,4.57,1179,4.57,1180,4.57,1181,4.57,1182,4.57,1183,4.57,1184,4.57,1185,4.57,1186,4.57,1187,4.57,1188,4.57,1189,4.57]],["title/miscellaneous/variables.html",[1146,1.908,1190,4.254]],["body/miscellaneous/variables.html",[7,0.619,12,0.013,31,2.893,40,3.58,50,0.011,51,0.011,108,3.481,132,1.28,158,0.83,341,3.756,840,5.516,841,5.097,1111,5.097,1146,3.297,1190,5.097,1191,7.01,1192,5.848]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDatumDto.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"classes/Datum.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"classes/Profile.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"modules/RelayModule.html":{},"injectables/RelayService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UserAuthDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":621,"title":{},"body":{"controllers/DataController.html":{},"coverage.html":{}}}],["0)'})@apiquery({name",{"_index":614,"title":{},"body":{"controllers/DataController.html":{}}}],["0.0.1",{"_index":1173,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":1136,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1143,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1135,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1100,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1117,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1107,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1108,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1110,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1115,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1109,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1113,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1114,"title":{},"body":{"coverage.html":{}}}],["030011",{"_index":1007,"title":{},"body":{"injectables/RelayService.html":{}}}],["030111",{"_index":1009,"title":{},"body":{"injectables/RelayService.html":{}}}],["1",{"_index":42,"title":{"interfaces/BaseServiceInterface-1.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/DataRepository.html":{},"guards/JwtAuthGuard.html":{},"injectables/RelayService.html":{},"guards/SupabaseAuthGuard.html":{}}}],["1.7.7",{"_index":1132,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"controllers/DataController.html":{}}}],["10)'})@apiquery({name",{"_index":615,"title":{},"body":{"controllers/DataController.html":{}}}],["10.0.0",{"_index":1121,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":1124,"title":{},"body":{"dependencies.html":{}}}],["10.2.3",{"_index":1128,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["11",{"_index":1169,"title":{},"body":{"overview.html":{}}}],["12",{"_index":1168,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1043,"title":{},"body":{"injectables/RelayService.html":{}}}],["19",{"_index":1170,"title":{},"body":{"overview.html":{}}}],["2",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{},"overview.html":{}}}],["2.3.0",{"_index":1120,"title":{},"body":{"dependencies.html":{}}}],["2.45.6",{"_index":1130,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1171,"title":{},"body":{"overview.html":{}}}],["200",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LocationController.html":{}}}],["202",{"_index":967,"title":{},"body":{"controllers/RelayController.html":{}}}],["204",{"_index":868,"title":{},"body":{"controllers/LocationController.html":{}}}],["22222",{"_index":1000,"title":{},"body":{"injectables/RelayService.html":{}}}],["3",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["3.1.1",{"_index":1119,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":1122,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LocationController.html":{},"controllers/RelayController.html":{}}}],["401",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LocationController.html":{},"controllers/RelayController.html":{}}}],["402",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LocationController.html":{},"controllers/RelayController.html":{}}}],["403",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LocationController.html":{},"controllers/RelayController.html":{}}}],["404",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["5",{"_index":1172,"title":{},"body":{"overview.html":{}}}],["5.7.6",{"_index":1133,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1129,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["6000",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["60000",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["7.4.2",{"_index":1127,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1145,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":1138,"title":{},"body":{"dependencies.html":{}}}],["accepted_agreements",{"_index":437,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["accesskey",{"_index":1003,"title":{},"body":{"injectables/RelayService.html":{}}}],["action",{"_index":687,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"injectables/LocationService.html":{},"controllers/RelayController.html":{}}}],["add",{"_index":513,"title":{},"body":{"modules/CwDeviceOwnersModule.html":{}}}],["address",{"_index":773,"title":{},"body":{"injectables/GeolocationService.html":{},"classes/LoginDto.html":{},"classes/UserAuthDto.html":{}}}],["address'})@isemail",{"_index":910,"title":{},"body":{"classes/LoginDto.html":{}}}],["adds",{"_index":688,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["agent",{"_index":1029,"title":{},"body":{"injectables/RelayService.html":{}}}],["alias",{"_index":1098,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1178,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["api",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"guards/SupabaseAuthGuard.html":{}}}],["api_keys",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["apibearerauth",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/DataController.html":{},"controllers/GeolocationController.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{}}}],["apibearerauth('authorization",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["apibearerauth('xyz",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DataController.html":{},"controllers/GeolocationController.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{}}}],["apibearerauth('xyz')@get('address')@useguards(supabaseauthguard",{"_index":749,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["apibearerauth('xyz')@get('user')@useguards(supabaseauthguard)@apiresponse({status",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["apikey",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"guards/SupabaseAuthGuard.html":{}}}],["apioperation",{"_index":317,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/DataController.html":{}}}],["apioperation({summary",{"_index":312,"title":{},"body":{"classes/BaseController.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{}}}],["apiproperty",{"_index":914,"title":{},"body":{"classes/LoginDto.html":{},"classes/UserAuthDto.html":{}}}],["apiproperty({description",{"_index":909,"title":{},"body":{"classes/LoginDto.html":{},"classes/UserAuthDto.html":{}}}],["apiquery",{"_index":628,"title":{},"body":{"controllers/DataController.html":{},"controllers/RelayController.html":{}}}],["apiresponse",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LocationController.html":{},"controllers/RelayController.html":{}}}],["apitags",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"controllers/GeolocationController.html":{},"controllers/LocationController.html":{},"controllers/ProfilesController.html":{},"controllers/RelayController.html":{}}}],["apitags('addresses",{"_index":754,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["apitags('app",{"_index":36,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('auth",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('data",{"_index":631,"title":{},"body":{"controllers/DataController.html":{}}}],["apitags('device",{"_index":544,"title":{},"body":{"controllers/CwDeviceTypeController.html":{}}}],["apitags('devices",{"_index":576,"title":{},"body":{"controllers/CwDevicesController.html":{}}}],["apitags('locations",{"_index":876,"title":{},"body":{"controllers/LocationController.html":{}}}],["apitags('profiles",{"_index":937,"title":{},"body":{"controllers/ProfilesController.html":{}}}],["apitags('relay",{"_index":974,"title":{},"body":{"controllers/RelayController.html":{}}}],["apitags('🔒device➡️owners",{"_index":493,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["app.controller",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["app_guard",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appid",{"_index":997,"title":{},"body":{"injectables/RelayService.html":{}}}],["application/json",{"_index":1028,"title":{},"body":{"injectables/RelayService.html":{}}}],["applications",{"_index":1160,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":53,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":128,"title":{"injectables/AppService.html":{}},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["asc",{"_index":603,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["ascending",{"_index":668,"title":{},"body":{"injectables/DataRepository.html":{}}}],["assume",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["async",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"injectables/GeolocationService.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationRepository.html":{},"injectables/ProfileRepository.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"guards/SupabaseAuthGuard.html":{}}}],["attach",{"_index":851,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["auth",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":221,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["auth.guard.ts",{"_index":831,"title":{},"body":{"guards/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:15",{"_index":837,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["auth.guard.ts:40",{"_index":839,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["auth.guard.ts:9",{"_index":835,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["auth.service",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["auth/auth.module",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/CwDevicesModule.html":{}}}],["auth/auth.service",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/jwt",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/public.decorator",{"_index":32,"title":{},"body":{"controllers/AppController.html":{}}}],["authcontroller",{"_index":135,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":916,"title":{},"body":{"classes/LoginDto.html":{},"classes/UserAuthDto.html":{}}}],["authguard",{"_index":1054,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["authheader",{"_index":853,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["authheader.split",{"_index":856,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["authheader.startswith('bearer",{"_index":855,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["authmodule",{"_index":64,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1176,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":1026,"title":{},"body":{"injectables/RelayService.html":{},"guards/SupabaseAuthGuard.html":{}}}],["authservice",{"_index":74,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/GeolocationModule.html":{},"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["automation",{"_index":975,"title":{},"body":{"controllers/RelayController.html":{}}}],["available",{"_index":1166,"title":{},"body":{"modules.html":{}}}],["avatar_url",{"_index":438,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["ave",{"_index":760,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["await",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseRepository.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"injectables/GeolocationService.html":{},"guards/JwtAuthGuard.html":{},"injectables/ProfileRepository.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"guards/SupabaseAuthGuard.html":{}}}],["axios",{"_index":1131,"title":{},"body":{"dependencies.html":{}}}],["bad",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LocationController.html":{},"controllers/RelayController.html":{}}}],["base.repository",{"_index":715,"title":{},"body":{"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{}}}],["base64",{"_index":1014,"title":{},"body":{"injectables/RelayService.html":{}}}],["basecontroller",{"_index":301,"title":{"classes/BaseController.html":{}},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"coverage.html":{}}}],["basecontroller:14",{"_index":537,"title":{},"body":{"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{}}}],["basecontroller:20",{"_index":536,"title":{},"body":{"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{}}}],["baserepository",{"_index":326,"title":{"classes/BaseRepository.html":{}},"body":{"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"coverage.html":{}}}],["baserepository:10",{"_index":712,"title":{},"body":{"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{}}}],["baserepository:21",{"_index":713,"title":{},"body":{"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{}}}],["baserepository:34",{"_index":710,"title":{},"body":{"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{}}}],["baserepository:47",{"_index":714,"title":{},"body":{"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{}}}],["baserepository:61",{"_index":711,"title":{},"body":{"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{}}}],["baseservice",{"_index":355,"title":{"classes/BaseService.html":{}},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"coverage.html":{}}}],["baseservice:12",{"_index":524,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{}}}],["baseservice:16",{"_index":525,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{}}}],["baseservice:20",{"_index":522,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{}}}],["baseservice:24",{"_index":526,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{}}}],["baseservice:28",{"_index":523,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{}}}],["baseserviceinterface",{"_index":307,"title":{"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{}},"body":{"classes/BaseController.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"coverage.html":{}}}],["bearer",{"_index":1027,"title":{},"body":{"injectables/RelayService.html":{},"guards/SupabaseAuthGuard.html":{}}}],["body",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"controllers/LocationController.html":{},"controllers/ProfilesController.html":{},"injectables/RelayService.html":{}}}],["boolean",{"_index":446,"title":{},"body":{"classes/CreateProfileDto.html":{},"injectables/DataRepository.html":{},"injectables/RelayService.html":{},"miscellaneous/typealiases.html":{}}}],["bootstrap",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/LocationModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/SupabaseModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["boston",{"_index":761,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["browse",{"_index":1164,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1161,"title":{},"body":{"modules.html":{}}}],["btoa(string.fromcharcode(...bytes",{"_index":1044,"title":{},"body":{"injectables/RelayService.html":{}}}],["building",{"_index":1156,"title":{},"body":{"index.html":{}}}],["bytes",{"_index":1040,"title":{},"body":{"injectables/RelayService.html":{}}}],["cache",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["cache.interceptor.ts",{"_index":804,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{},"coverage.html":{}}}],["cache.interceptor.ts:6",{"_index":807,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["cacheinterceptor",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/HttpCacheInterceptor.html":{}}}],["cachemodule",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule.register",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["cachettl",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["cachettl(20",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["canactivate",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["canactivate(context",{"_index":836,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["catch",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/RelayService.html":{}}}],["change",{"_index":1018,"title":{},"body":{"injectables/RelayService.html":{}}}],["check",{"_index":784,"title":{},"body":{"controllers/HealthController.html":{},"guards/SupabaseAuthGuard.html":{}}}],["class",{"_index":38,"title":{"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"classes/CreateDatumDto.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/Datum.html":{},"classes/Location.html":{},"classes/LoginDto.html":{},"classes/Profile.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UserAuthDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDatumDto.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"classes/Datum.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HttpCacheInterceptor.html":{},"guards/JwtAuthGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"classes/Profile.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"modules/RelayModule.html":{},"injectables/RelayService.html":{},"guards/SupabaseAuthGuard.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UserAuthDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":302,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"classes/CreateDatumDto.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/Datum.html":{},"classes/Location.html":{},"classes/LoginDto.html":{},"classes/Profile.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UserAuthDto.html":{},"overview.html":{}}}],["client",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["close",{"_index":973,"title":{},"body":{"controllers/RelayController.html":{},"miscellaneous/enumerations.html":{}}}],["close'})@apiresponse({status",{"_index":966,"title":{},"body":{"controllers/RelayController.html":{}}}],["cluster_appmodule",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":217,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":219,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":218,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_cwdeviceownersmodule",{"_index":506,"title":{},"body":{"modules/CwDeviceOwnersModule.html":{},"overview.html":{}}}],["cluster_cwdeviceownersmodule_imports",{"_index":508,"title":{},"body":{"modules/CwDeviceOwnersModule.html":{}}}],["cluster_cwdeviceownersmodule_providers",{"_index":507,"title":{},"body":{"modules/CwDeviceOwnersModule.html":{},"overview.html":{}}}],["cluster_cwdevicesmodule",{"_index":579,"title":{},"body":{"modules/CwDevicesModule.html":{},"overview.html":{}}}],["cluster_cwdevicesmodule_imports",{"_index":580,"title":{},"body":{"modules/CwDevicesModule.html":{}}}],["cluster_cwdevicesmodule_providers",{"_index":581,"title":{},"body":{"modules/CwDevicesModule.html":{},"overview.html":{}}}],["cluster_cwdevicetypemodule",{"_index":548,"title":{},"body":{"modules/CwDeviceTypeModule.html":{},"overview.html":{}}}],["cluster_cwdevicetypemodule_imports",{"_index":550,"title":{},"body":{"modules/CwDeviceTypeModule.html":{}}}],["cluster_cwdevicetypemodule_providers",{"_index":549,"title":{},"body":{"modules/CwDeviceTypeModule.html":{},"overview.html":{}}}],["cluster_datamodule",{"_index":646,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_providers",{"_index":647,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_geolocationmodule",{"_index":764,"title":{},"body":{"modules/GeolocationModule.html":{},"overview.html":{}}}],["cluster_geolocationmodule_providers",{"_index":765,"title":{},"body":{"modules/GeolocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule",{"_index":885,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_imports",{"_index":887,"title":{},"body":{"modules/LocationModule.html":{}}}],["cluster_locationmodule_providers",{"_index":886,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_profilesmodule",{"_index":942,"title":{},"body":{"modules/ProfilesModule.html":{},"overview.html":{}}}],["cluster_profilesmodule_imports",{"_index":944,"title":{},"body":{"modules/ProfilesModule.html":{}}}],["cluster_profilesmodule_providers",{"_index":943,"title":{},"body":{"modules/ProfilesModule.html":{},"overview.html":{}}}],["cluster_relaymodule",{"_index":984,"title":{},"body":{"modules/RelayModule.html":{},"overview.html":{}}}],["cluster_relaymodule_providers",{"_index":985,"title":{},"body":{"modules/RelayModule.html":{},"overview.html":{}}}],["cluster_supabasemodule",{"_index":1068,"title":{},"body":{"modules/SupabaseModule.html":{},"overview.html":{}}}],["cluster_supabasemodule_exports",{"_index":1070,"title":{},"body":{"modules/SupabaseModule.html":{},"overview.html":{}}}],["cluster_supabasemodule_providers",{"_index":1069,"title":{},"body":{"modules/SupabaseModule.html":{}}}],["command",{"_index":1010,"title":{},"body":{"injectables/RelayService.html":{}}}],["compositetypes",{"_index":1099,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["configmodule",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RelayService.html":{},"injectables/SupabaseService.html":{}}}],["confirmed",{"_index":1020,"title":{},"body":{"injectables/RelayService.html":{}}}],["console.error('error",{"_index":1039,"title":{},"body":{"injectables/RelayService.html":{}}}],["console.log('downlink",{"_index":1036,"title":{},"body":{"injectables/RelayService.html":{}}}],["const",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseRepository.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"injectables/GeolocationService.html":{},"injectables/HttpCacheInterceptor.html":{},"guards/JwtAuthGuard.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{}}}],["constructor",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/HealthController.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/ProfileRepository.html":{},"injectables/ProfilesService.html":{},"injectables/RelayService.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{}}}],["constructor(authservice",{"_index":1051,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["constructor(configservice",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["constructor(cwdevicesservice",{"_index":577,"title":{},"body":{"controllers/CwDevicesController.html":{}}}],["constructor(cwdevicetypeservice",{"_index":545,"title":{},"body":{"controllers/CwDeviceTypeController.html":{}}}],["constructor(deviceownerrepository",{"_index":516,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{}}}],["constructor(devicerepository",{"_index":588,"title":{},"body":{"injectables/CwDevicesService.html":{}}}],["constructor(deviceservice",{"_index":676,"title":{},"body":{"injectables/DataService.html":{}}}],["constructor(devicetyperepository",{"_index":559,"title":{},"body":{"injectables/CwDeviceTypeService.html":{}}}],["constructor(locationrepository",{"_index":898,"title":{},"body":{"injectables/LocationService.html":{}}}],["constructor(private",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/DataRepository.html":{},"controllers/GeolocationController.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{}}}],["constructor(profilesrepository",{"_index":949,"title":{},"body":{"injectables/ProfilesService.html":{}}}],["constructor(protected",{"_index":371,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{}}}],["constructor(reflector",{"_index":833,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["constructor(repository",{"_index":358,"title":{},"body":{"classes/BaseService.html":{}}}],["constructor(service",{"_index":306,"title":{},"body":{"classes/BaseController.html":{}}}],["constructor(supabaseservice",{"_index":331,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/DataRepository.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/ProfileRepository.html":{}}}],["contain",{"_index":700,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["content",{"_index":883,"title":{},"body":{"controllers/LocationController.html":{},"injectables/RelayService.html":{}}}],["content'})@apiresponse({status",{"_index":869,"title":{},"body":{"controllers/LocationController.html":{}}}],["context",{"_index":808,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{},"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["context.getclass",{"_index":844,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":843,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":809,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{},"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"controllers/GeolocationController.html":{},"controllers/HealthController.html":{},"controllers/LocationController.html":{},"controllers/ProfilesController.html":{},"controllers/RelayController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"controllers/GeolocationController.html":{},"controllers/HealthController.html":{},"controllers/LocationController.html":{},"controllers/ProfilesController.html":{},"controllers/RelayController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('cw",{"_index":494,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{}}}],["controller('data",{"_index":632,"title":{},"body":{"controllers/DataController.html":{}}}],["controller('geolocation",{"_index":755,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["controller('health",{"_index":791,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('location",{"_index":877,"title":{},"body":{"controllers/LocationController.html":{}}}],["controller('profiles",{"_index":938,"title":{},"body":{"controllers/ProfilesController.html":{}}}],["controller('relay",{"_index":976,"title":{},"body":{"controllers/RelayController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"controllers/RelayController.html":{},"modules/RelayModule.html":{},"guards/SupabaseAuthGuard.html":{},"overview.html":{}}}],["coverage",{"_index":1093,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":304,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/IRepositoryBase.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"interfaces/RepositoryInterface.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{}}}],["create(@body",{"_index":324,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/DataController.html":{},"controllers/LocationController.html":{}}}],["create(createdatumdto",{"_index":597,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["create(createdeviceownerdto",{"_index":471,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["create(createdto",{"_index":310,"title":{},"body":{"classes/BaseController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{}}}],["create(createlocationdto",{"_index":860,"title":{},"body":{"controllers/LocationController.html":{},"injectables/LocationService.html":{}}}],["create(dto",{"_index":361,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{}}}],["create(entity",{"_index":821,"title":{},"body":{"interfaces/IRepositoryBase.html":{},"interfaces/RepositoryInterface.html":{}}}],["create(item",{"_index":335,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{}}}],["createclient",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["createclient(supabaseurl",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["created_at",{"_index":616,"title":{},"body":{"controllers/DataController.html":{}}}],["createdatumdto",{"_index":380,"title":{"classes/CreateDatumDto.html":{}},"body":{"classes/CreateDatumDto.html":{},"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"classes/UpdateDatumDto.html":{},"coverage.html":{}}}],["createdevicedto",{"_index":383,"title":{"classes/CreateDeviceDto.html":{}},"body":{"classes/CreateDeviceDto.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"classes/UpdateDeviceDto.html":{},"coverage.html":{}}}],["createdeviceownerdto",{"_index":400,"title":{"classes/CreateDeviceOwnerDto.html":{}},"body":{"classes/CreateDeviceOwnerDto.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"classes/UpdateDeviceOwnerDto.html":{},"coverage.html":{}}}],["createdevicetypedto",{"_index":410,"title":{"classes/CreateDeviceTypeDto.html":{}},"body":{"classes/CreateDeviceTypeDto.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"classes/UpdateDeviceTypeDto.html":{},"coverage.html":{}}}],["createdto",{"_index":311,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{}}}],["createlocationdto",{"_index":415,"title":{"classes/CreateLocationDto.html":{}},"body":{"classes/CreateLocationDto.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"classes/UpdateLocationDto.html":{},"coverage.html":{}}}],["createprofiledto",{"_index":434,"title":{"classes/CreateProfileDto.html":{}},"body":{"classes/CreateProfileDto.html":{},"injectables/ProfilesService.html":{},"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["credentials",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["cw",{"_index":467,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{}}}],["cw_device_locations",{"_index":719,"title":{},"body":{"injectables/DeviceLocationRepository.html":{}}}],["cw_device_owners",{"_index":725,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{}}}],["cw_device_owners.controller",{"_index":511,"title":{},"body":{"modules/CwDeviceOwnersModule.html":{}}}],["cw_device_owners.service",{"_index":489,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{}}}],["cw_device_owners/cw_device_owners.module",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["cw_device_type",{"_index":743,"title":{},"body":{"injectables/DeviceTypeRepository.html":{}}}],["cw_device_type.controller",{"_index":553,"title":{},"body":{"modules/CwDeviceTypeModule.html":{}}}],["cw_device_type.service",{"_index":541,"title":{},"body":{"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{}}}],["cw_devices",{"_index":736,"title":{},"body":{"injectables/DeviceRepository.html":{}}}],["cw_devices.controller",{"_index":584,"title":{},"body":{"modules/CwDevicesModule.html":{}}}],["cw_devices.service",{"_index":572,"title":{},"body":{"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{}}}],["cw_devices/cw_devices.module",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["cw_locations",{"_index":896,"title":{},"body":{"injectables/LocationRepository.html":{}}}],["cwdeviceownerscontroller",{"_index":465,"title":{"controllers/CwDeviceOwnersController.html":{}},"body":{"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"coverage.html":{}}}],["cwdeviceownersmodule",{"_index":65,"title":{"modules/CwDeviceOwnersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules.html":{},"overview.html":{}}}],["cwdeviceownersservice",{"_index":488,"title":{"injectables/CwDeviceOwnersService.html":{}},"body":{"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"modules/DataModule.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"coverage.html":{},"overview.html":{}}}],["cwdevicescontroller",{"_index":568,"title":{"controllers/CwDevicesController.html":{}},"body":{"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"coverage.html":{}}}],["cwdevicesmodule",{"_index":66,"title":{"modules/CwDevicesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CwDevicesModule.html":{},"modules.html":{},"overview.html":{}}}],["cwdevicesservice",{"_index":571,"title":{"injectables/CwDevicesService.html":{}},"body":{"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"coverage.html":{},"overview.html":{}}}],["cwdevicetypecontroller",{"_index":534,"title":{"controllers/CwDeviceTypeController.html":{}},"body":{"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"coverage.html":{}}}],["cwdevicetypemodule",{"_index":547,"title":{"modules/CwDeviceTypeModule.html":{}},"body":{"modules/CwDeviceTypeModule.html":{},"modules.html":{},"overview.html":{}}}],["cwdevicetypeservice",{"_index":540,"title":{"injectables/CwDeviceTypeService.html":{}},"body":{"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseRepository.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"injectables/GeolocationService.html":{},"injectables/ProfileRepository.html":{},"injectables/RelayService.html":{}}}],["data.controller",{"_index":650,"title":{},"body":{"modules/DataModule.html":{}}}],["data.service",{"_index":625,"title":{},"body":{"controllers/DataController.html":{},"modules/DataModule.html":{}}}],["data/data.module",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["data_table",{"_index":698,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["database",{"_index":527,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"injectables/LocationRepository.html":{},"injectables/ProfileRepository.html":{},"injectables/SupabaseService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["database.types",{"_index":528,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"injectables/LocationRepository.html":{},"injectables/ProfileRepository.html":{},"injectables/SupabaseService.html":{}}}],["database.types.ts",{"_index":1097,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["database['public']['tables']['cw_device_locations']['row",{"_index":717,"title":{},"body":{"injectables/DeviceLocationRepository.html":{}}}],["database['public']['tables']['cw_device_owners']['row",{"_index":531,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"injectables/DeviceOwnerRepository.html":{}}}],["database['public']['tables']['cw_device_type']['row",{"_index":543,"title":{},"body":{"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/DeviceTypeRepository.html":{}}}],["database['public']['tables']['cw_devices']['row",{"_index":575,"title":{},"body":{"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"injectables/DeviceRepository.html":{}}}],["database['public']['tables']['cw_locations']['row",{"_index":895,"title":{},"body":{"injectables/LocationRepository.html":{}}}],["database['public']['tables']['profiles']['row",{"_index":924,"title":{},"body":{"injectables/ProfileRepository.html":{}}}],["datacontroller",{"_index":595,"title":{"controllers/DataController.html":{}},"body":{"controllers/DataController.html":{},"modules/DataModule.html":{},"coverage.html":{}}}],["datamodule",{"_index":67,"title":{"modules/DataModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DataModule.html":{},"modules.html":{},"overview.html":{}}}],["datarepository",{"_index":648,"title":{"injectables/DataRepository.html":{}},"body":{"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"coverage.html":{},"overview.html":{}}}],["dataservice",{"_index":624,"title":{"injectables/DataService.html":{}},"body":{"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"coverage.html":{},"overview.html":{}}}],["datatable",{"_index":701,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["date",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["datum",{"_index":689,"title":{"classes/Datum.html":{}},"body":{"injectables/DataService.html":{},"classes/Datum.html":{},"interfaces/FindAllParams.html":{},"coverage.html":{}}}],["datum.dto",{"_index":626,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"classes/UpdateDatumDto.html":{}}}],["datum.dto.ts",{"_index":382,"title":{},"body":{"classes/CreateDatumDto.html":{},"classes/UpdateDatumDto.html":{},"coverage.html":{}}}],["declarations",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/LocationModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/SupabaseModule.html":{},"overview.html":{}}}],["decorators",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/BaseController.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"controllers/GeolocationController.html":{},"controllers/HealthController.html":{},"controllers/LocationController.html":{},"classes/LoginDto.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"controllers/RelayController.html":{},"classes/UserAuthDto.html":{}}}],["default",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/BaseRepository.html":{},"controllers/DataController.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"controllers/GeolocationController.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{},"classes/UserAuthDto.html":{}}}],["delete",{"_index":328,"title":{},"body":{"classes/BaseRepository.html":{},"classes/BaseService.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"controllers/ProfilesController.html":{},"interfaces/RepositoryInterface.html":{}}}],["delete(':id",{"_index":503,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/DataController.html":{},"controllers/LocationController.html":{}}}],["delete(':id')@apiresponse({status",{"_index":867,"title":{},"body":{"controllers/LocationController.html":{}}}],["delete(id",{"_index":338,"title":{},"body":{"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/IRepositoryBase.html":{},"injectables/LocationRepository.html":{},"interfaces/RepositoryInterface.html":{}}}],["demonstration",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["dependencies",{"_index":55,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/LocationModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/SupabaseModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":604,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["desc.'})@apibearerauth('xyz')@get",{"_index":618,"title":{},"body":{"controllers/DataController.html":{}}}],["description",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"controllers/DataController.html":{},"controllers/LocationController.html":{},"classes/LoginDto.html":{},"controllers/RelayController.html":{},"classes/UserAuthDto.html":{},"index.html":{},"properties.html":{}}}],["dev_eui",{"_index":386,"title":{},"body":{"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"injectables/CwDevicesService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{}}}],["dev_type",{"_index":567,"title":{},"body":{"injectables/CwDeviceTypeService.html":{},"injectables/DeviceTypeRepository.html":{}}}],["deveui",{"_index":520,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["device",{"_index":402,"title":{},"body":{"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/DataController.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"coverage.html":{}}}],["device.'})@apiquery({name",{"_index":612,"title":{},"body":{"controllers/DataController.html":{}}}],["device.dto",{"_index":573,"title":{},"body":{"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"classes/UpdateDeviceDto.html":{}}}],["device.dto.ts",{"_index":385,"title":{},"body":{"classes/CreateDeviceDto.html":{},"classes/UpdateDeviceDto.html":{},"coverage.html":{}}}],["device.dto.ts:10",{"_index":391,"title":{},"body":{"classes/CreateDeviceDto.html":{}}}],["device.dto.ts:14",{"_index":394,"title":{},"body":{"classes/CreateDeviceDto.html":{}}}],["device.dto.ts:18",{"_index":392,"title":{},"body":{"classes/CreateDeviceDto.html":{}}}],["device.dto.ts:22",{"_index":395,"title":{},"body":{"classes/CreateDeviceDto.html":{}}}],["device.dto.ts:6",{"_index":390,"title":{},"body":{"classes/CreateDeviceDto.html":{}}}],["device.type",{"_index":695,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["deviceid",{"_index":1001,"title":{},"body":{"injectables/RelayService.html":{}}}],["devicelocationrepository",{"_index":707,"title":{"injectables/DeviceLocationRepository.html":{}},"body":{"injectables/DeviceLocationRepository.html":{},"coverage.html":{}}}],["devicelocationrow",{"_index":716,"title":{},"body":{"injectables/DeviceLocationRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["deviceowner",{"_index":690,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["deviceownerrepository",{"_index":509,"title":{"injectables/DeviceOwnerRepository.html":{}},"body":{"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"modules/DataModule.html":{},"injectables/DeviceOwnerRepository.html":{},"coverage.html":{},"overview.html":{}}}],["deviceownerrow",{"_index":530,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"injectables/DeviceOwnerRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["deviceownerservice",{"_index":677,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["devicerepository",{"_index":582,"title":{"injectables/DeviceRepository.html":{}},"body":{"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"modules/DataModule.html":{},"injectables/DeviceRepository.html":{},"coverage.html":{},"overview.html":{}}}],["devicerow",{"_index":735,"title":{},"body":{"injectables/DeviceRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["devices",{"_index":570,"title":{},"body":{"controllers/CwDevicesController.html":{}}}],["deviceservice",{"_index":633,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["devicesrow",{"_index":574,"title":{},"body":{"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["devicetype",{"_index":694,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["devicetypedata",{"_index":696,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["devicetypedata.data_table",{"_index":699,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["devicetyperepository",{"_index":551,"title":{"injectables/DeviceTypeRepository.html":{}},"body":{"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"modules/DataModule.html":{},"injectables/DeviceTypeRepository.html":{},"coverage.html":{},"overview.html":{}}}],["devicetyperow",{"_index":542,"title":{},"body":{"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/DeviceTypeRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["devicetypeservice",{"_index":634,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["devtype",{"_index":563,"title":{},"body":{"injectables/CwDeviceTypeService.html":{}}}],["direction",{"_index":617,"title":{},"body":{"controllers/DataController.html":{}}}],["docs",{"_index":795,"title":{},"body":{"controllers/HealthController.html":{}}}],["documentation",{"_index":1094,"title":{},"body":{"coverage.html":{}}}],["downlink",{"_index":1034,"title":{},"body":{"injectables/RelayService.html":{}}}],["downlinks",{"_index":1011,"title":{},"body":{"injectables/RelayService.html":{}}}],["dragino",{"_index":998,"title":{},"body":{"injectables/RelayService.html":{}}}],["dto",{"_index":319,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{}}}],["dto/create",{"_index":490,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"injectables/ProfilesService.html":{}}}],["dto/update",{"_index":492,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{}}}],["dtos/userauth.dto",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{}}}],["efficient",{"_index":1157,"title":{},"body":{"index.html":{}}}],["email",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateProfileDto.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"interfaces/FindAllParams.html":{},"classes/LoginDto.html":{},"classes/UserAuthDto.html":{}}}],["employer",{"_index":439,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["encoded",{"_index":1015,"title":{},"body":{"injectables/RelayService.html":{}}}],["endpoint",{"_index":845,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["entity",{"_index":823,"title":{},"body":{"interfaces/IRepositoryBase.html":{},"interfaces/RepositoryInterface.html":{}}}],["enum",{"_index":963,"title":{},"body":{"controllers/RelayController.html":{}}}],["enumerations",{"_index":1147,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":1101,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["env",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["env.development",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["env.development.local",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["eq('api_key",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["eq('dev_eui",{"_index":665,"title":{},"body":{"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{}}}],["eq('dev_type",{"_index":745,"title":{},"body":{"injectables/DeviceTypeRepository.html":{}}}],["eq('email",{"_index":727,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{}}}],["eq('id",{"_index":672,"title":{},"body":{"injectables/DataRepository.html":{},"injectables/ProfileRepository.html":{}}}],["eq(idcolumn",{"_index":351,"title":{},"body":{"classes/BaseRepository.html":{}}}],["error",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseRepository.html":{},"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"guards/JwtAuthGuard.html":{},"injectables/ProfileRepository.html":{},"injectables/RelayService.html":{}}}],["error(`device",{"_index":728,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{}}}],["error(`error",{"_index":777,"title":{},"body":{"injectables/GeolocationService.html":{},"injectables/RelayService.html":{}}}],["error(`failed",{"_index":669,"title":{},"body":{"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{}}}],["error.message",{"_index":671,"title":{},"body":{"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/RelayService.html":{}}}],["eui",{"_index":609,"title":{},"body":{"controllers/DataController.html":{}}}],["example",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{}}}],["examplelink",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["excluded",{"_index":816,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["excludepaths",{"_index":814,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["excludepaths.includes(httpadapter.getrequesturl(request",{"_index":817,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["executioncontext",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpCacheInterceptor.html":{},"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["exist",{"_index":692,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["export",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDatumDto.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"classes/Datum.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"classes/Profile.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"modules/RelayModule.html":{},"injectables/RelayService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UserAuthDto.html":{}}}],["exports",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/LocationModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/SupabaseModule.html":{},"overview.html":{}}}],["express",{"_index":1126,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":370,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/HttpCacheInterceptor.html":{},"injectables/LocationRepository.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{}}}],["extracttokenfromheader",{"_index":832,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["extracttokenfromheader(request",{"_index":838,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["f_port",{"_index":1017,"title":{},"body":{"injectables/RelayService.html":{}}}],["false",{"_index":608,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["fetch(`https://geocode.maps.co/search?q=${address}&api_key=${process.env.geocoding_api_key",{"_index":775,"title":{},"body":{"injectables/GeolocationService.html":{}}}],["fetch(url",{"_index":1023,"title":{},"body":{"injectables/RelayService.html":{}}}],["fetched",{"_index":763,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["fetching",{"_index":778,"title":{},"body":{"injectables/GeolocationService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDatumDto.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"classes/Datum.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"classes/Profile.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"modules/RelayModule.html":{},"injectables/RelayService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UserAuthDto.html":{},"coverage.html":{}}}],["filter",{"_index":610,"title":{},"body":{"controllers/DataController.html":{}}}],["filters",{"_index":606,"title":{},"body":{"controllers/DataController.html":{}}}],["find",{"_index":673,"title":{},"body":{"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{}}}],["findall",{"_index":305,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/IRepositoryBase.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"interfaces/RepositoryInterface.html":{}}}],["findall(params",{"_index":680,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["findall(req",{"_index":599,"title":{},"body":{"controllers/DataController.html":{}}}],["findallbytable",{"_index":656,"title":{},"body":{"injectables/DataRepository.html":{}}}],["findallbytable(tablename",{"_index":659,"title":{},"body":{"injectables/DataRepository.html":{}}}],["findallparams",{"_index":681,"title":{"interfaces/FindAllParams.html":{}},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"coverage.html":{}}}],["findbydeveui",{"_index":730,"title":{},"body":{"injectables/DeviceRepository.html":{}}}],["findbydeveui(undefined",{"_index":732,"title":{},"body":{"injectables/DeviceRepository.html":{}}}],["findbydeveuiandemail",{"_index":721,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{}}}],["findbydeveuiandemail(dev_eui",{"_index":723,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{}}}],["findbydevicetype",{"_index":739,"title":{},"body":{"injectables/DeviceTypeRepository.html":{}}}],["findbydevicetype(undefined",{"_index":741,"title":{},"body":{"injectables/DeviceTypeRepository.html":{}}}],["findbyid",{"_index":329,"title":{},"body":{"classes/BaseRepository.html":{},"classes/BaseService.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/ProfileRepository.html":{},"interfaces/RepositoryInterface.html":{}}}],["findbyid(id",{"_index":343,"title":{},"body":{"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/IRepositoryBase.html":{},"injectables/LocationRepository.html":{},"injectables/ProfileRepository.html":{},"interfaces/RepositoryInterface.html":{}}}],["findbyidintable",{"_index":657,"title":{},"body":{"injectables/DataRepository.html":{}}}],["findbyidintable(tablename",{"_index":662,"title":{},"body":{"injectables/DataRepository.html":{}}}],["findone",{"_index":469,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/IRepositoryBase.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{}}}],["findone(@param('id",{"_index":497,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/DataController.html":{},"controllers/LocationController.html":{}}}],["findone(@req",{"_index":939,"title":{},"body":{"controllers/ProfilesController.html":{}}}],["findone(id",{"_index":476,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"interfaces/IRepositoryBase.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"injectables/ProfilesService.html":{},"interfaces/RepositoryInterface.html":{}}}],["findone(req",{"_index":932,"title":{},"body":{"controllers/ProfilesController.html":{}}}],["forbidden",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LocationController.html":{},"controllers/RelayController.html":{}}}],["forbidden'})@apiresponse({status",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["format",{"_index":1063,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["found",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["framework",{"_index":1155,"title":{},"body":{"index.html":{}}}],["frm_payload",{"_index":1012,"title":{},"body":{"injectables/RelayService.html":{}}}],["from('api_keys",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["from('cw_device_owners",{"_index":726,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{}}}],["from('cw_device_type",{"_index":744,"title":{},"body":{"injectables/DeviceTypeRepository.html":{}}}],["from('cw_devices",{"_index":737,"title":{},"body":{"injectables/DeviceRepository.html":{}}}],["from('profiles",{"_index":927,"title":{},"body":{"injectables/ProfileRepository.html":{}}}],["from(tablename",{"_index":664,"title":{},"body":{"injectables/DataRepository.html":{}}}],["from(this.tablename",{"_index":350,"title":{},"body":{"classes/BaseRepository.html":{}}}],["full_name",{"_index":440,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["function",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/BaseServiceInterface.html":{},"coverage.html":{}}}],["functions",{"_index":1149,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["geolocation",{"_index":748,"title":{},"body":{"controllers/GeolocationController.html":{},"injectables/GeolocationService.html":{}}}],["geolocation.controller",{"_index":767,"title":{},"body":{"modules/GeolocationModule.html":{}}}],["geolocation.service",{"_index":753,"title":{},"body":{"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{}}}],["geolocation/geolocation.module",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["geolocationcontroller",{"_index":746,"title":{"controllers/GeolocationController.html":{}},"body":{"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"coverage.html":{}}}],["geolocationmodule",{"_index":68,"title":{"modules/GeolocationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GeolocationModule.html":{},"modules.html":{},"overview.html":{}}}],["geolocationservice",{"_index":752,"title":{"injectables/GeolocationService.html":{}},"body":{"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"injectables/GeolocationService.html":{},"coverage.html":{},"overview.html":{}}}],["get(':id",{"_index":496,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/DataController.html":{},"controllers/LocationController.html":{}}}],["get(':id')@apiresponse({status",{"_index":865,"title":{},"body":{"controllers/LocationController.html":{}}}],["get('address",{"_index":756,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["get('control",{"_index":977,"title":{},"body":{"controllers/RelayController.html":{}}}],["get('user",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@apibearerauth('xyz",{"_index":933,"title":{},"body":{"controllers/ProfilesController.html":{}}}],["get()@apiresponse({status",{"_index":862,"title":{},"body":{"controllers/LocationController.html":{}}}],["get()@healthcheck",{"_index":785,"title":{},"body":{"controllers/HealthController.html":{}}}],["getdevicebydeveui",{"_index":587,"title":{},"body":{"injectables/CwDevicesService.html":{}}}],["getdevicebydeveui(deveui",{"_index":590,"title":{},"body":{"injectables/CwDevicesService.html":{}}}],["getdeviceownerbydeveuiandemail",{"_index":515,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{}}}],["getdeviceownerbydeveuiandemail(deveui",{"_index":518,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{}}}],["getdevicetypebydevtype",{"_index":558,"title":{},"body":{"injectables/CwDeviceTypeService.html":{}}}],["getdevicetypebydevtype(devtype",{"_index":561,"title":{},"body":{"injectables/CwDeviceTypeService.html":{}}}],["getgeolocation",{"_index":770,"title":{},"body":{"injectables/GeolocationService.html":{}}}],["getgeolocation(address",{"_index":771,"title":{},"body":{"injectables/GeolocationService.html":{}}}],["gethello",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getprotectedroute",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GeolocationController.html":{},"controllers/RelayController.html":{}}}],["getprotectedroute(@query('state",{"_index":979,"title":{},"body":{"controllers/RelayController.html":{}}}],["getprotectedroute(@req",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprotectedroute(req",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprotectedroute(state",{"_index":959,"title":{},"body":{"controllers/RelayController.html":{}}}],["getsupabaseclient",{"_index":349,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/ProfileRepository.html":{},"injectables/SupabaseService.html":{}}}],["getting",{"_index":1151,"title":{"index.html":{}},"body":{}}],["getuserbyid",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["global",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["graph",{"_index":1165,"title":{},"body":{"modules.html":{}}}],["gt('expiry_date",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["guard",{"_index":126,"title":{"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/JwtAuthGuard.html":{},"coverage.html":{}}}],["guards",{"_index":829,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{},"overview.html":{}}}],["guards/supabase.guard",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{}}}],["hardcoded",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["header",{"_index":1062,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["headers",{"_index":1025,"title":{},"body":{"injectables/RelayService.html":{}}}],["health",{"_index":783,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":801,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":789,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":787,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":781,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":69,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["hello",{"_index":133,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":1137,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["hexstring",{"_index":994,"title":{},"body":{"injectables/RelayService.html":{}}}],["hextobase64",{"_index":989,"title":{},"body":{"injectables/RelayService.html":{}}}],["hextobase64(hexstring",{"_index":992,"title":{},"body":{"injectables/RelayService.html":{}}}],["high",{"_index":1022,"title":{},"body":{"injectables/RelayService.html":{}}}],["http",{"_index":792,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpadapter",{"_index":810,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["httpadapter.getrequestmethod(request",{"_index":813,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["httpadapter.getrequesturl(request",{"_index":818,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["httpcacheinterceptor",{"_index":802,"title":{"injectables/HttpCacheInterceptor.html":{}},"body":{"injectables/HttpCacheInterceptor.html":{},"coverage.html":{}}}],["httpexception",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["httphealthindicator",{"_index":788,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":799,"title":{},"body":{"modules/HealthModule.html":{}}}],["https://api.cropwatch.io/api/auth/user",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://docs.nestjs.com",{"_index":796,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpstatus",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["huntington",{"_index":759,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["id",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"classes/CreateProfileDto.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"interfaces/IRepositoryBase.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"interfaces/RepositoryInterface.html":{}}}],["id'})@delete(':id",{"_index":481,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["id'})@get(':id",{"_index":478,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["id'})@patch(':id",{"_index":484,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["id.replace('bearer",{"_index":954,"title":{},"body":{"injectables/ProfilesService.html":{}}}],["idcolumn",{"_index":339,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{}}}],["identifier",{"_index":1095,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["implementation",{"_index":1055,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["implements",{"_index":357,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["import",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HttpCacheInterceptor.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"modules/RelayModule.html":{},"injectables/RelayService.html":{},"guards/SupabaseAuthGuard.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UserAuthDto.html":{}}}],["imports",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/LocationModule.html":{},"modules/ProfilesModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{},"classes/UserAuthDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDatumDto.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"classes/Datum.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"classes/Profile.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"modules/RelayModule.html":{},"injectables/RelayService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UserAuthDto.html":{}}}],["inherited",{"_index":521,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{}}}],["initialize",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["injectable",{"_index":127,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/GeolocationService.html":{},"injectables/HttpCacheInterceptor.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/ProfileRepository.html":{},"injectables/ProfilesService.html":{},"injectables/RelayService.html":{},"injectables/SupabaseService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"injectables/GeolocationService.html":{},"injectables/HttpCacheInterceptor.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/ProfileRepository.html":{},"injectables/ProfilesService.html":{},"injectables/RelayService.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{},"coverage.html":{}}}],["injectables",{"_index":129,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/GeolocationService.html":{},"injectables/HttpCacheInterceptor.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/ProfileRepository.html":{},"injectables/ProfilesService.html":{},"injectables/RelayService.html":{},"injectables/SupabaseService.html":{},"overview.html":{}}}],["insert(item",{"_index":353,"title":{},"body":{"classes/BaseRepository.html":{}}}],["integration",{"_index":1031,"title":{},"body":{"injectables/RelayService.html":{}}}],["integration/my",{"_index":1030,"title":{},"body":{"injectables/RelayService.html":{}}}],["interface",{"_index":318,"title":{"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"interfaces/FindAllParams.html":{},"interfaces/IRepositoryBase.html":{},"interfaces/RepositoryInterface.html":{}},"body":{"classes/BaseController.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"interfaces/IRepositoryBase.html":{},"interfaces/RepositoryInterface.html":{},"coverage.html":{}}}],["interfaces",{"_index":377,"title":{},"body":{"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"interfaces/FindAllParams.html":{},"interfaces/IRepositoryBase.html":{},"interfaces/RepositoryInterface.html":{},"overview.html":{}}}],["irepositorybase",{"_index":819,"title":{"interfaces/IRepositoryBase.html":{}},"body":{"interfaces/IRepositoryBase.html":{},"interfaces/RepositoryInterface.html":{},"coverage.html":{}}}],["is_public_key",{"_index":840,"title":{},"body":{"guards/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isboolean",{"_index":462,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["isemail",{"_index":463,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/LoginDto.html":{},"classes/UserAuthDto.html":{}}}],["isgetrequest",{"_index":812,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["isglobal",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["islatitude",{"_index":432,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["islongitude",{"_index":433,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["isnotempty",{"_index":396,"title":{},"body":{"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{}}}],["isnotempty()@isnumber",{"_index":393,"title":{},"body":{"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{}}}],["isnotempty()@isstring",{"_index":389,"title":{},"body":{"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{}}}],["isnumber",{"_index":397,"title":{},"body":{"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateLocationDto.html":{}}}],["isoptional",{"_index":431,"title":{},"body":{"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{}}}],["isoptional()@isboolean",{"_index":447,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["isoptional()@isemail",{"_index":451,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["isoptional()@islatitude",{"_index":423,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["isoptional()@islongitude",{"_index":425,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["isoptional()@isnumber",{"_index":427,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["isoptional()@isstring",{"_index":421,"title":{},"body":{"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{}}}],["isoptional()@isstring()@isurl",{"_index":449,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["isoptional()@isurl",{"_index":460,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["ispublic",{"_index":841,"title":{},"body":{"guards/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["isstring",{"_index":398,"title":{},"body":{"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/LoginDto.html":{},"classes/UserAuthDto.html":{}}}],["isurl",{"_index":464,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["isvalidapikey",{"_index":1059,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["item",{"_index":323,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseRepository.html":{},"interfaces/BaseServiceInterface.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{}}}],["item'})@post",{"_index":313,"title":{},"body":{"classes/BaseController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{}}}],["items",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{}}}],["items'})@get",{"_index":315,"title":{},"body":{"classes/BaseController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{}}}],["js",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{},"dependencies.html":{}}}],["json",{"_index":1102,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["json.stringify(data",{"_index":1032,"title":{},"body":{"injectables/RelayService.html":{}}}],["jwt",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/UserAuthDto.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":94,"title":{"guards/JwtAuthGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtservice",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["key",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"guards/SupabaseAuthGuard.html":{}}}],["last_login",{"_index":441,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["lat",{"_index":418,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["legend",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/LocationModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/SupabaseModule.html":{},"overview.html":{}}}],["license",{"_index":1174,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["line_notify_token",{"_index":442,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["link",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["links",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["literal",{"_index":733,"title":{},"body":{"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"miscellaneous/typealiases.html":{}}}],["location",{"_index":757,"title":{"classes/Location.html":{}},"body":{"controllers/GeolocationController.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"coverage.html":{}}}],["location.controller",{"_index":890,"title":{},"body":{"modules/LocationModule.html":{}}}],["location.dto",{"_index":875,"title":{},"body":{"controllers/LocationController.html":{},"injectables/LocationService.html":{},"classes/UpdateLocationDto.html":{}}}],["location.dto.ts",{"_index":417,"title":{},"body":{"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{},"coverage.html":{}}}],["location.dto.ts:11",{"_index":422,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["location.dto.ts:15",{"_index":424,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["location.dto.ts:19",{"_index":426,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["location.dto.ts:23",{"_index":428,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["location.dto.ts:27",{"_index":430,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["location.dto.ts:7",{"_index":429,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["location.service",{"_index":874,"title":{},"body":{"controllers/LocationController.html":{},"modules/LocationModule.html":{}}}],["location/location.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["locationcontroller",{"_index":858,"title":{"controllers/LocationController.html":{}},"body":{"controllers/LocationController.html":{},"modules/LocationModule.html":{},"coverage.html":{}}}],["locationmodule",{"_index":70,"title":{"modules/LocationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LocationModule.html":{},"modules.html":{},"overview.html":{}}}],["locationrepository",{"_index":888,"title":{"injectables/LocationRepository.html":{}},"body":{"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"coverage.html":{},"overview.html":{}}}],["locationrow",{"_index":894,"title":{},"body":{"injectables/LocationRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["locationservice",{"_index":873,"title":{"injectables/LocationService.html":{}},"body":{"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"coverage.html":{},"overview.html":{}}}],["logger",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["logic",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(@body",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{}}}],["logindto",{"_index":159,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"classes/UserAuthDto.html":{},"coverage.html":{}}}],["logindto.password",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["long",{"_index":419,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["lt",{"_index":999,"title":{},"body":{"injectables/RelayService.html":{}}}],["ma",{"_index":762,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["manager",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/HttpCacheInterceptor.html":{},"dependencies.html":{}}}],["map_zoom",{"_index":420,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["marked",{"_index":846,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["matching",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDatumDto.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"classes/Datum.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"classes/Profile.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"modules/RelayModule.html":{},"injectables/RelayService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UserAuthDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.random",{"_index":49,"title":{},"body":{"controllers/AppController.html":{}}}],["max",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["maximum",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["message",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GeolocationController.html":{},"controllers/RelayController.html":{}}}],["metadata",{"_index":1142,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":1024,"title":{},"body":{"injectables/RelayService.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"controllers/GeolocationController.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{}}}],["miscellaneous",{"_index":1146,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":52,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/HealthModule.html":{},"modules/LocationModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/SupabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/HealthModule.html":{},"modules/LocationModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/SupabaseModule.html":{},"overview.html":{}}}],["modules",{"_index":54,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/HealthModule.html":{},"modules/LocationModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/SupabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["name",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"injectables/GeolocationService.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{}}}],["needed",{"_index":1019,"title":{},"body":{"injectables/RelayService.html":{}}}],["nest",{"_index":48,"title":{},"body":{"controllers/AppController.html":{}}}],["nestjs/axios",{"_index":800,"title":{},"body":{"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/cache",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/HttpCacheInterceptor.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HttpCacheInterceptor.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"modules/RelayModule.html":{},"injectables/RelayService.html":{},"guards/SupabaseAuthGuard.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/RelayService.html":{},"injectables/SupabaseService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"guards/JwtAuthGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":1123,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":1125,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"controllers/GeolocationController.html":{},"controllers/LocationController.html":{},"classes/LoginDto.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"controllers/RelayController.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UserAuthDto.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":790,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"dependencies.html":{}}}],["new",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"injectables/GeolocationService.html":{},"guards/JwtAuthGuard.html":{},"injectables/RelayService.html":{},"guards/SupabaseAuthGuard.html":{},"coverage.html":{}}}],["node.js",{"_index":1154,"title":{},"body":{"index.html":{}}}],["now",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["null",{"_index":352,"title":{},"body":{"classes/BaseRepository.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"injectables/DataRepository.html":{},"guards/JwtAuthGuard.html":{},"injectables/ProfileRepository.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateLocationDto.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"interfaces/IRepositoryBase.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"interfaces/RepositoryInterface.html":{},"miscellaneous/typealiases.html":{}}}],["object",{"_index":1065,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["offcommand",{"_index":1008,"title":{},"body":{"injectables/RelayService.html":{}}}],["ok",{"_index":879,"title":{},"body":{"controllers/LocationController.html":{}}}],["ok'})@apiresponse({status",{"_index":863,"title":{},"body":{"controllers/LocationController.html":{}}}],["oncommand",{"_index":1006,"title":{},"body":{"injectables/RelayService.html":{}}}],["open",{"_index":965,"title":{},"body":{"controllers/RelayController.html":{},"miscellaneous/enumerations.html":{}}}],["operationid",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["optional",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"injectables/GeolocationService.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{}}}],["order",{"_index":602,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["order('created_at",{"_index":667,"title":{},"body":{"injectables/DataRepository.html":{}}}],["out",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/LocationModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/SupabaseModule.html":{},"overview.html":{}}}],["overview",{"_index":1167,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":477,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"interfaces/FindAllParams.html":{}}}],["owner'})@post",{"_index":472,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["owner.dto",{"_index":491,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"classes/UpdateDeviceOwnerDto.html":{}}}],["owner.dto.ts",{"_index":403,"title":{},"body":{"classes/CreateDeviceOwnerDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"coverage.html":{}}}],["owner.dto.ts:11",{"_index":407,"title":{},"body":{"classes/CreateDeviceOwnerDto.html":{}}}],["owner.dto.ts:15",{"_index":408,"title":{},"body":{"classes/CreateDeviceOwnerDto.html":{}}}],["owner.dto.ts:19",{"_index":409,"title":{},"body":{"classes/CreateDeviceOwnerDto.html":{}}}],["owner.dto.ts:7",{"_index":406,"title":{},"body":{"classes/CreateDeviceOwnerDto.html":{}}}],["owner_id",{"_index":404,"title":{},"body":{"classes/CreateDeviceOwnerDto.html":{},"classes/CreateLocationDto.html":{}}}],["owners",{"_index":468,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["owners'})@get",{"_index":474,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["package",{"_index":261,"title":{"dependencies.html":{},"properties.html":{}},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["pagination",{"_index":636,"title":{},"body":{"controllers/DataController.html":{}}}],["pagination'})@apiquery({name",{"_index":607,"title":{},"body":{"controllers/DataController.html":{}}}],["param",{"_index":487,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"controllers/LocationController.html":{},"controllers/ProfilesController.html":{}}}],["parameters",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/GeolocationService.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{}}}],["params",{"_index":683,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["parseint(byte",{"_index":1042,"title":{},"body":{"injectables/RelayService.html":{}}}],["partial",{"_index":336,"title":{},"body":{"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/IRepositoryBase.html":{},"injectables/LocationRepository.html":{},"interfaces/RepositoryInterface.html":{}}}],["partialtype",{"_index":1079,"title":{},"body":{"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{}}}],["partialtype(createdatumdto",{"_index":1078,"title":{},"body":{"classes/UpdateDatumDto.html":{}}}],["partialtype(createdevicedto",{"_index":1081,"title":{},"body":{"classes/UpdateDeviceDto.html":{}}}],["partialtype(createdeviceownerdto",{"_index":1083,"title":{},"body":{"classes/UpdateDeviceOwnerDto.html":{}}}],["partialtype(createdevicetypedto",{"_index":1085,"title":{},"body":{"classes/UpdateDeviceTypeDto.html":{}}}],["partialtype(createlocationdto",{"_index":1087,"title":{},"body":{"classes/UpdateLocationDto.html":{}}}],["partialtype(createprofiledto",{"_index":1090,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["passport",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/UserAuthDto.html":{}}}],["password'})@isstring",{"_index":912,"title":{},"body":{"classes/LoginDto.html":{}}}],["patch",{"_index":486,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"controllers/LocationController.html":{},"controllers/ProfilesController.html":{}}}],["patch(':id",{"_index":500,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/DataController.html":{},"controllers/LocationController.html":{}}}],["payload",{"_index":1016,"title":{},"body":{"injectables/RelayService.html":{}}}],["payment",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LocationController.html":{},"controllers/RelayController.html":{}}}],["permission_level",{"_index":405,"title":{},"body":{"classes/CreateDeviceOwnerDto.html":{}}}],["post",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"controllers/LocationController.html":{},"controllers/ProfilesController.html":{},"injectables/RelayService.html":{}}}],["post('login",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"controllers/GeolocationController.html":{},"controllers/HealthController.html":{},"controllers/LocationController.html":{},"controllers/ProfilesController.html":{},"controllers/RelayController.html":{}}}],["priority",{"_index":1021,"title":{},"body":{"injectables/RelayService.html":{}}}],["private",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseRepository.html":{},"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"controllers/HealthController.html":{},"guards/JwtAuthGuard.html":{},"injectables/RelayService.html":{},"injectables/SupabaseService.html":{}}}],["process.env.dragino_api_key",{"_index":1004,"title":{},"body":{"injectables/RelayService.html":{}}}],["process.env.tti_base_url}/api/v3/as/applications/${appid}/devices/${deviceid}/down/replace",{"_index":1005,"title":{},"body":{"injectables/RelayService.html":{}}}],["profile",{"_index":917,"title":{"classes/Profile.html":{}},"body":{"classes/Profile.html":{},"coverage.html":{}}}],["profile.dto",{"_index":953,"title":{},"body":{"injectables/ProfilesService.html":{},"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts",{"_index":436,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["profile.dto.ts:10",{"_index":448,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:15",{"_index":450,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:19",{"_index":452,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:23",{"_index":453,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:27",{"_index":454,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:31",{"_index":456,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:35",{"_index":457,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:39",{"_index":458,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:43",{"_index":459,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:47",{"_index":461,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:6",{"_index":455,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profilerepository",{"_index":919,"title":{"injectables/ProfileRepository.html":{}},"body":{"injectables/ProfileRepository.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"coverage.html":{},"overview.html":{}}}],["profilerow",{"_index":923,"title":{},"body":{"injectables/ProfileRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["profiles",{"_index":931,"title":{},"body":{"controllers/ProfilesController.html":{}}}],["profiles.controller",{"_index":946,"title":{},"body":{"modules/ProfilesModule.html":{}}}],["profiles.service",{"_index":936,"title":{},"body":{"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{}}}],["profiles/profiles.module",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["profilescontroller",{"_index":929,"title":{"controllers/ProfilesController.html":{}},"body":{"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"coverage.html":{}}}],["profilesmodule",{"_index":71,"title":{"modules/ProfilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfilesModule.html":{},"modules.html":{},"overview.html":{}}}],["profilesrepository",{"_index":951,"title":{},"body":{"injectables/ProfilesService.html":{}}}],["profilesservice",{"_index":935,"title":{"injectables/ProfilesService.html":{}},"body":{"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":1153,"title":{},"body":{"index.html":{}}}],["promise",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"injectables/DataRepository.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationRepository.html":{},"injectables/ProfileRepository.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{}}}],["properties",{"_index":223,"title":{"properties.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/BaseServiceInterface.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"interfaces/FindAllParams.html":{},"classes/LoginDto.html":{},"injectables/SupabaseService.html":{},"classes/UserAuthDto.html":{},"properties.html":{}}}],["protected",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseRepository.html":{}}}],["provide",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":1058,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["providers",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/LocationModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/SupabaseModule.html":{},"overview.html":{}}}],["public",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/GeolocationService.html":{},"guards/JwtAuthGuard.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@get('/')@throttle({default",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["public()@get('control')@apiquery({name",{"_index":961,"title":{},"body":{"controllers/RelayController.html":{}}}],["public()@post('login')@throttle({default",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{}}}],["public.decorator",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{},"guards/JwtAuthGuard.html":{}}}],["publicschema",{"_index":1103,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["purposes",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["query",{"_index":623,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"controllers/RelayController.html":{}}}],["query('deveui",{"_index":637,"title":{},"body":{"controllers/DataController.html":{}}}],["query('order",{"_index":640,"title":{},"body":{"controllers/DataController.html":{}}}],["query('skip",{"_index":638,"title":{},"body":{"controllers/DataController.html":{}}}],["query('take",{"_index":639,"title":{},"body":{"controllers/DataController.html":{}}}],["queued",{"_index":978,"title":{},"body":{"controllers/RelayController.html":{}}}],["queued'})@apiresponse({status",{"_index":968,"title":{},"body":{"controllers/RelayController.html":{}}}],["range(skip",{"_index":666,"title":{},"body":{"injectables/DataRepository.html":{}}}],["readonly",{"_index":320,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{}}}],["record",{"_index":674,"title":{},"body":{"injectables/DataRepository.html":{}}}],["records",{"_index":613,"title":{},"body":{"controllers/DataController.html":{}}}],["reflect",{"_index":1141,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":834,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["register",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["relay",{"_index":958,"title":{},"body":{"controllers/RelayController.html":{}}}],["relay.controller",{"_index":987,"title":{},"body":{"modules/RelayModule.html":{}}}],["relay.service",{"_index":971,"title":{},"body":{"controllers/RelayController.html":{},"modules/RelayModule.html":{}}}],["relay/relay.module",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["relaycontroller",{"_index":956,"title":{"controllers/RelayController.html":{}},"body":{"controllers/RelayController.html":{},"modules/RelayModule.html":{},"coverage.html":{}}}],["relaymodule",{"_index":72,"title":{"modules/RelayModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RelayModule.html":{},"modules.html":{},"overview.html":{}}}],["relayon",{"_index":980,"title":{},"body":{"controllers/RelayController.html":{}}}],["relayservice",{"_index":970,"title":{"injectables/RelayService.html":{}},"body":{"controllers/RelayController.html":{},"modules/RelayModule.html":{},"injectables/RelayService.html":{},"coverage.html":{},"overview.html":{}}}],["relaystate",{"_index":960,"title":{},"body":{"controllers/RelayController.html":{},"miscellaneous/enumerations.html":{}}}],["relaystate.open",{"_index":981,"title":{},"body":{"controllers/RelayController.html":{}}}],["remove",{"_index":470,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"injectables/DataService.html":{},"interfaces/IRepositoryBase.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{}}}],["remove(@param('id",{"_index":504,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/DataController.html":{},"controllers/LocationController.html":{}}}],["remove(id",{"_index":480,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"interfaces/IRepositoryBase.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"interfaces/RepositoryInterface.html":{}}}],["removes",{"_index":705,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"injectables/LocationService.html":{}}}],["repo",{"_index":702,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["repository",{"_index":360,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"modules/CwDeviceOwnersModule.html":{}}}],["repositoryinterface",{"_index":828,"title":{"interfaces/RepositoryInterface.html":{}},"body":{"interfaces/IRepositoryBase.html":{},"interfaces/RepositoryInterface.html":{},"coverage.html":{}}}],["req",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{}}}],["req.headers['authorization",{"_index":940,"title":{},"body":{"controllers/ProfilesController.html":{}}}],["req.user",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DataController.html":{}}}],["req.user.email",{"_index":642,"title":{},"body":{"controllers/DataController.html":{}}}],["request",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"injectables/HttpCacheInterceptor.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"controllers/RelayController.html":{},"guards/SupabaseAuthGuard.html":{}}}],["request'})@apiresponse({status",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LocationController.html":{},"controllers/RelayController.html":{}}}],["request.headers.authorization",{"_index":854,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["request.headers['authorization",{"_index":1057,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["request.headers['x",{"_index":1056,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["request.path.id",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.user",{"_index":850,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["required",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"controllers/LocationController.html":{},"controllers/RelayController.html":{}}}],["required'})@apiresponse({status",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LocationController.html":{},"controllers/RelayController.html":{}}}],["reset",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/LocationModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/SupabaseModule.html":{},"overview.html":{}}}],["response",{"_index":774,"title":{},"body":{"injectables/GeolocationService.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{}}}],["response.json",{"_index":780,"title":{},"body":{"injectables/GeolocationService.html":{},"injectables/RelayService.html":{}}}],["response.ok",{"_index":776,"title":{},"body":{"injectables/GeolocationService.html":{},"injectables/RelayService.html":{}}}],["response.statustext",{"_index":779,"title":{},"body":{"injectables/GeolocationService.html":{},"injectables/RelayService.html":{}}}],["responsedata",{"_index":1035,"title":{},"body":{"injectables/RelayService.html":{}}}],["results",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDatumDto.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"classes/Datum.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"classes/Profile.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"modules/RelayModule.html":{},"injectables/RelayService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UserAuthDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":605,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataRepository.html":{}}}],["return",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"injectables/HttpCacheInterceptor.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{}}}],["returns",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{}}}],["route",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["routes",{"_index":815,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["rxjs",{"_index":1144,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":1158,"title":{},"body":{"index.html":{}}}],["seconds",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["select",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseRepository.html":{},"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/ProfileRepository.html":{}}}],["senddownlink",{"_index":990,"title":{},"body":{"injectables/RelayService.html":{}}}],["senddownlink(state",{"_index":995,"title":{},"body":{"injectables/RelayService.html":{}}}],["sending",{"_index":1033,"title":{},"body":{"injectables/RelayService.html":{}}}],["sent",{"_index":1037,"title":{},"body":{"injectables/RelayService.html":{}}}],["serial_number",{"_index":387,"title":{},"body":{"classes/CreateDeviceDto.html":{}}}],["server",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["service",{"_index":309,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"modules/CwDeviceOwnersModule.html":{}}}],["session",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["session.session?.access_token",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["set",{"_index":964,"title":{},"body":{"controllers/RelayController.html":{}}}],["setmetadata(is_public_key",{"_index":1192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":1159,"title":{},"body":{"index.html":{}}}],["sign",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinwithemail",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinwithemail(email",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["single",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseRepository.html":{},"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/ProfileRepository.html":{}}}],["skip",{"_index":600,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"guards/JwtAuthGuard.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDatumDto.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"classes/Datum.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"classes/Profile.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"modules/RelayModule.html":{},"injectables/RelayService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UserAuthDto.html":{}}}],["specific",{"_index":611,"title":{},"body":{"controllers/DataController.html":{}}}],["src/.../cw_device_locations.repository.ts",{"_index":1179,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../cw_device_owners.service.ts",{"_index":1180,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../cw_device_owners.ts",{"_index":1181,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../cw_device_type.controller.ts",{"_index":1185,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../cw_device_type.repository.ts",{"_index":1187,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../cw_device_type.service.ts",{"_index":1186,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../cw_devices.controller.ts",{"_index":1183,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../cw_devices.repository.ts",{"_index":1182,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../cw_devices.service.ts",{"_index":1184,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../cw_location.repository.ts",{"_index":1188,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":1150,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../profiles.repositories.ts",{"_index":1189,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../public.decorator.ts",{"_index":1191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../relay.controller.ts",{"_index":1148,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:19",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":130,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":131,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:35",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:48",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module",{"_index":555,"title":{},"body":{"modules/CwDeviceTypeModule.html":{}}}],["src/auth/auth.module.ts",{"_index":220,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service",{"_index":768,"title":{},"body":{"modules/GeolocationModule.html":{}}}],["src/auth/auth.service.ts",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:22",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:34",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:52",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:8",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dtos/userauth.dto.ts",{"_index":908,"title":{},"body":{"classes/LoginDto.html":{},"classes/UserAuthDto.html":{},"coverage.html":{}}}],["src/auth/dtos/userauth.dto.ts:14",{"_index":911,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dtos/userauth.dto.ts:18",{"_index":913,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dtos/userauth.dto.ts:8",{"_index":1092,"title":{},"body":{"classes/UserAuthDto.html":{}}}],["src/auth/guards/jwt",{"_index":830,"title":{},"body":{"guards/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/supabase.guard",{"_index":751,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["src/auth/guards/supabase.guard.ts",{"_index":1050,"title":{},"body":{"guards/SupabaseAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/supabase.guard.ts:10",{"_index":1053,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["src/auth/guards/supabase.guard.ts:7",{"_index":1052,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["src/auth/public.decorator",{"_index":972,"title":{},"body":{"controllers/RelayController.html":{}}}],["src/auth/public.decorator.ts",{"_index":1111,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/bases/base.controller",{"_index":538,"title":{},"body":{"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{}}}],["src/bases/base.controller.ts",{"_index":303,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"coverage.html":{}}}],["src/bases/base.controller.ts:14",{"_index":316,"title":{},"body":{"classes/BaseController.html":{}}}],["src/bases/base.controller.ts:20",{"_index":314,"title":{},"body":{"classes/BaseController.html":{}}}],["src/bases/base.controller.ts:9",{"_index":308,"title":{},"body":{"classes/BaseController.html":{}}}],["src/bases/base.service",{"_index":529,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{}}}],["src/bases/base.service.ts",{"_index":356,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"coverage.html":{}}}],["src/bases/base.service.ts:12",{"_index":364,"title":{},"body":{"classes/BaseService.html":{}}}],["src/bases/base.service.ts:16",{"_index":365,"title":{},"body":{"classes/BaseService.html":{}}}],["src/bases/base.service.ts:20",{"_index":362,"title":{},"body":{"classes/BaseService.html":{}}}],["src/bases/base.service.ts:24",{"_index":367,"title":{},"body":{"classes/BaseService.html":{}}}],["src/bases/base.service.ts:28",{"_index":363,"title":{},"body":{"classes/BaseService.html":{}}}],["src/bases/base.service.ts:5",{"_index":379,"title":{},"body":{"interfaces/BaseServiceInterface-1.html":{}}}],["src/bases/base.service.ts:6",{"_index":378,"title":{},"body":{"interfaces/BaseServiceInterface-1.html":{}}}],["src/bases/base.service.ts:9",{"_index":359,"title":{},"body":{"classes/BaseService.html":{}}}],["src/common/http",{"_index":803,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{},"coverage.html":{}}}],["src/cw_device_owners/cw_device_owners.controller.ts",{"_index":466,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"coverage.html":{}}}],["src/cw_device_owners/cw_device_owners.controller.ts:15",{"_index":475,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["src/cw_device_owners/cw_device_owners.controller.ts:21",{"_index":479,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["src/cw_device_owners/cw_device_owners.controller.ts:27",{"_index":473,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["src/cw_device_owners/cw_device_owners.controller.ts:33",{"_index":485,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["src/cw_device_owners/cw_device_owners.controller.ts:39",{"_index":482,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["src/cw_device_owners/cw_device_owners.module.ts",{"_index":510,"title":{},"body":{"modules/CwDeviceOwnersModule.html":{}}}],["src/cw_device_owners/cw_device_owners.service",{"_index":653,"title":{},"body":{"modules/DataModule.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["src/cw_device_owners/cw_device_owners.service.ts",{"_index":514,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/cw_device_owners/cw_device_owners.service.ts:12",{"_index":517,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{}}}],["src/cw_device_owners/cw_device_owners.service.ts:17",{"_index":519,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{}}}],["src/cw_device_owners/dto/create",{"_index":401,"title":{},"body":{"classes/CreateDeviceOwnerDto.html":{},"coverage.html":{}}}],["src/cw_device_owners/dto/update",{"_index":1082,"title":{},"body":{"classes/UpdateDeviceOwnerDto.html":{},"coverage.html":{}}}],["src/cw_device_type/cw_device_type.controller.ts",{"_index":535,"title":{},"body":{"controllers/CwDeviceTypeController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/cw_device_type/cw_device_type.module.ts",{"_index":552,"title":{},"body":{"modules/CwDeviceTypeModule.html":{}}}],["src/cw_device_type/cw_device_type.service",{"_index":629,"title":{},"body":{"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["src/cw_device_type/cw_device_type.service.ts",{"_index":557,"title":{},"body":{"injectables/CwDeviceTypeService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/cw_device_type/cw_device_type.service.ts:11",{"_index":560,"title":{},"body":{"injectables/CwDeviceTypeService.html":{}}}],["src/cw_device_type/cw_device_type.service.ts:16",{"_index":562,"title":{},"body":{"injectables/CwDeviceTypeService.html":{}}}],["src/cw_device_type/dto/create",{"_index":411,"title":{},"body":{"classes/CreateDeviceTypeDto.html":{},"coverage.html":{}}}],["src/cw_device_type/dto/update",{"_index":1084,"title":{},"body":{"classes/UpdateDeviceTypeDto.html":{},"coverage.html":{}}}],["src/cw_devices/cw_devices.controller.ts",{"_index":569,"title":{},"body":{"controllers/CwDevicesController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/cw_devices/cw_devices.module.ts",{"_index":583,"title":{},"body":{"modules/CwDevicesModule.html":{}}}],["src/cw_devices/cw_devices.service",{"_index":630,"title":{},"body":{"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["src/cw_devices/cw_devices.service.ts",{"_index":586,"title":{},"body":{"injectables/CwDevicesService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/cw_devices/cw_devices.service.ts:11",{"_index":589,"title":{},"body":{"injectables/CwDevicesService.html":{}}}],["src/cw_devices/cw_devices.service.ts:16",{"_index":591,"title":{},"body":{"injectables/CwDevicesService.html":{}}}],["src/cw_devices/dto/create",{"_index":384,"title":{},"body":{"classes/CreateDeviceDto.html":{},"coverage.html":{}}}],["src/cw_devices/dto/update",{"_index":1080,"title":{},"body":{"classes/UpdateDeviceDto.html":{},"coverage.html":{}}}],["src/data/data.controller.ts",{"_index":596,"title":{},"body":{"controllers/DataController.html":{},"coverage.html":{}}}],["src/data/data.controller.ts:20",{"_index":598,"title":{},"body":{"controllers/DataController.html":{}}}],["src/data/data.controller.ts:31",{"_index":619,"title":{},"body":{"controllers/DataController.html":{}}}],["src/data/data.controller.ts:45",{"_index":622,"title":{},"body":{"controllers/DataController.html":{}}}],["src/data/data.module.ts",{"_index":649,"title":{},"body":{"modules/DataModule.html":{}}}],["src/data/data.service.ts",{"_index":675,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"coverage.html":{}}}],["src/data/data.service.ts:19",{"_index":678,"title":{},"body":{"injectables/DataService.html":{}}}],["src/data/data.service.ts:27",{"_index":679,"title":{},"body":{"injectables/DataService.html":{}}}],["src/data/data.service.ts:31",{"_index":682,"title":{},"body":{"injectables/DataService.html":{}}}],["src/data/data.service.ts:61",{"_index":684,"title":{},"body":{"injectables/DataService.html":{}}}],["src/data/data.service.ts:65",{"_index":686,"title":{},"body":{"injectables/DataService.html":{}}}],["src/data/data.service.ts:69",{"_index":685,"title":{},"body":{"injectables/DataService.html":{}}}],["src/data/dto/create",{"_index":381,"title":{},"body":{"classes/CreateDatumDto.html":{},"coverage.html":{}}}],["src/data/dto/update",{"_index":1077,"title":{},"body":{"classes/UpdateDatumDto.html":{},"coverage.html":{}}}],["src/data/entities/datum.entity.ts",{"_index":706,"title":{},"body":{"classes/Datum.html":{},"coverage.html":{}}}],["src/geolocation/geolocation.controller.ts",{"_index":747,"title":{},"body":{"controllers/GeolocationController.html":{},"coverage.html":{}}}],["src/geolocation/geolocation.controller.ts:14",{"_index":750,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["src/geolocation/geolocation.module.ts",{"_index":766,"title":{},"body":{"modules/GeolocationModule.html":{}}}],["src/geolocation/geolocation.service.ts",{"_index":769,"title":{},"body":{"injectables/GeolocationService.html":{},"coverage.html":{}}}],["src/geolocation/geolocation.service.ts:6",{"_index":772,"title":{},"body":{"injectables/GeolocationService.html":{}}}],["src/health/health.controller.ts",{"_index":782,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:13",{"_index":786,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":797,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/interfaces/repositorybase.interface.ts",{"_index":820,"title":{},"body":{"interfaces/IRepositoryBase.html":{},"interfaces/RepositoryInterface.html":{},"coverage.html":{}}}],["src/interfaces/repositorybase.interface.ts:11",{"_index":1047,"title":{},"body":{"interfaces/RepositoryInterface.html":{}}}],["src/interfaces/repositorybase.interface.ts:12",{"_index":1048,"title":{},"body":{"interfaces/RepositoryInterface.html":{}}}],["src/interfaces/repositorybase.interface.ts:13",{"_index":1045,"title":{},"body":{"interfaces/RepositoryInterface.html":{}}}],["src/interfaces/repositorybase.interface.ts:14",{"_index":1049,"title":{},"body":{"interfaces/RepositoryInterface.html":{}}}],["src/interfaces/repositorybase.interface.ts:15",{"_index":1046,"title":{},"body":{"interfaces/RepositoryInterface.html":{}}}],["src/interfaces/repositorybase.interface.ts:2",{"_index":825,"title":{},"body":{"interfaces/IRepositoryBase.html":{}}}],["src/interfaces/repositorybase.interface.ts:3",{"_index":824,"title":{},"body":{"interfaces/IRepositoryBase.html":{}}}],["src/interfaces/repositorybase.interface.ts:4",{"_index":822,"title":{},"body":{"interfaces/IRepositoryBase.html":{}}}],["src/interfaces/repositorybase.interface.ts:5",{"_index":827,"title":{},"body":{"interfaces/IRepositoryBase.html":{}}}],["src/interfaces/repositorybase.interface.ts:6",{"_index":826,"title":{},"body":{"interfaces/IRepositoryBase.html":{}}}],["src/location/dto/create",{"_index":416,"title":{},"body":{"classes/CreateLocationDto.html":{},"coverage.html":{}}}],["src/location/dto/update",{"_index":1086,"title":{},"body":{"classes/UpdateLocationDto.html":{},"coverage.html":{}}}],["src/location/entities/location.entity.ts",{"_index":857,"title":{},"body":{"classes/Location.html":{},"coverage.html":{}}}],["src/location/location.controller.ts",{"_index":859,"title":{},"body":{"controllers/LocationController.html":{},"coverage.html":{}}}],["src/location/location.controller.ts:13",{"_index":861,"title":{},"body":{"controllers/LocationController.html":{}}}],["src/location/location.controller.ts:23",{"_index":864,"title":{},"body":{"controllers/LocationController.html":{}}}],["src/location/location.controller.ts:33",{"_index":866,"title":{},"body":{"controllers/LocationController.html":{}}}],["src/location/location.controller.ts:38",{"_index":872,"title":{},"body":{"controllers/LocationController.html":{}}}],["src/location/location.controller.ts:48",{"_index":870,"title":{},"body":{"controllers/LocationController.html":{}}}],["src/location/location.module.ts",{"_index":889,"title":{},"body":{"modules/LocationModule.html":{}}}],["src/location/location.service.ts",{"_index":897,"title":{},"body":{"injectables/LocationService.html":{},"coverage.html":{}}}],["src/location/location.service.ts:10",{"_index":900,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/location/location.service.ts:14",{"_index":901,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/location/location.service.ts:18",{"_index":902,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/location/location.service.ts:22",{"_index":904,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/location/location.service.ts:26",{"_index":903,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/location/location.service.ts:7",{"_index":899,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/main.ts",{"_index":1116,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/profiles/dto/create",{"_index":435,"title":{},"body":{"classes/CreateProfileDto.html":{},"coverage.html":{}}}],["src/profiles/dto/update",{"_index":1089,"title":{},"body":{"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["src/profiles/entities/profile.entity.ts",{"_index":918,"title":{},"body":{"classes/Profile.html":{},"coverage.html":{}}}],["src/profiles/profiles.controller.ts",{"_index":930,"title":{},"body":{"controllers/ProfilesController.html":{},"coverage.html":{}}}],["src/profiles/profiles.controller.ts:12",{"_index":934,"title":{},"body":{"controllers/ProfilesController.html":{}}}],["src/profiles/profiles.module.ts",{"_index":945,"title":{},"body":{"modules/ProfilesModule.html":{}}}],["src/profiles/profiles.service.ts",{"_index":948,"title":{},"body":{"injectables/ProfilesService.html":{},"coverage.html":{}}}],["src/profiles/profiles.service.ts:6",{"_index":950,"title":{},"body":{"injectables/ProfilesService.html":{}}}],["src/profiles/profiles.service.ts:8",{"_index":952,"title":{},"body":{"injectables/ProfilesService.html":{}}}],["src/relay/relay.controller.ts",{"_index":957,"title":{},"body":{"controllers/RelayController.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/relay/relay.controller.ts:28",{"_index":969,"title":{},"body":{"controllers/RelayController.html":{}}}],["src/relay/relay.module.ts",{"_index":986,"title":{},"body":{"modules/RelayModule.html":{}}}],["src/relay/relay.service.ts",{"_index":988,"title":{},"body":{"injectables/RelayService.html":{},"coverage.html":{}}}],["src/relay/relay.service.ts:5",{"_index":991,"title":{},"body":{"injectables/RelayService.html":{}}}],["src/relay/relay.service.ts:52",{"_index":993,"title":{},"body":{"injectables/RelayService.html":{}}}],["src/relay/relay.service.ts:8",{"_index":996,"title":{},"body":{"injectables/RelayService.html":{}}}],["src/repositories/base.repository",{"_index":368,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{}}}],["src/repositories/base.repository.ts",{"_index":327,"title":{},"body":{"classes/BaseRepository.html":{},"coverage.html":{}}}],["src/repositories/base.repository.ts:10",{"_index":342,"title":{},"body":{"classes/BaseRepository.html":{}}}],["src/repositories/base.repository.ts:21",{"_index":344,"title":{},"body":{"classes/BaseRepository.html":{}}}],["src/repositories/base.repository.ts:34",{"_index":337,"title":{},"body":{"classes/BaseRepository.html":{}}}],["src/repositories/base.repository.ts:4",{"_index":334,"title":{},"body":{"classes/BaseRepository.html":{}}}],["src/repositories/base.repository.ts:47",{"_index":346,"title":{},"body":{"classes/BaseRepository.html":{}}}],["src/repositories/base.repository.ts:61",{"_index":340,"title":{},"body":{"classes/BaseRepository.html":{}}}],["src/repositories/cw_device_locations.repository.ts",{"_index":708,"title":{},"body":{"injectables/DeviceLocationRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/repositories/cw_device_locations.repository.ts:9",{"_index":709,"title":{},"body":{"injectables/DeviceLocationRepository.html":{}}}],["src/repositories/cw_device_owners",{"_index":512,"title":{},"body":{"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"modules/DataModule.html":{}}}],["src/repositories/cw_device_owners.ts",{"_index":720,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/repositories/cw_device_owners.ts:10",{"_index":722,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{}}}],["src/repositories/cw_device_owners.ts:15",{"_index":724,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{}}}],["src/repositories/cw_device_type.repository",{"_index":556,"title":{},"body":{"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"modules/DataModule.html":{}}}],["src/repositories/cw_device_type.repository.ts",{"_index":738,"title":{},"body":{"injectables/DeviceTypeRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/repositories/cw_device_type.repository.ts:14",{"_index":742,"title":{},"body":{"injectables/DeviceTypeRepository.html":{}}}],["src/repositories/cw_device_type.repository.ts:9",{"_index":740,"title":{},"body":{"injectables/DeviceTypeRepository.html":{}}}],["src/repositories/cw_devices.repository",{"_index":585,"title":{},"body":{"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"modules/DataModule.html":{}}}],["src/repositories/cw_devices.repository.ts",{"_index":729,"title":{},"body":{"injectables/DeviceRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/repositories/cw_devices.repository.ts:14",{"_index":734,"title":{},"body":{"injectables/DeviceRepository.html":{}}}],["src/repositories/cw_devices.repository.ts:9",{"_index":731,"title":{},"body":{"injectables/DeviceRepository.html":{}}}],["src/repositories/cw_location.repository",{"_index":891,"title":{},"body":{"modules/LocationModule.html":{},"injectables/LocationService.html":{}}}],["src/repositories/cw_location.repository.ts",{"_index":892,"title":{},"body":{"injectables/LocationRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/repositories/cw_location.repository.ts:9",{"_index":893,"title":{},"body":{"injectables/LocationRepository.html":{}}}],["src/repositories/data.repository",{"_index":651,"title":{},"body":{"modules/DataModule.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["src/repositories/data.repository.ts",{"_index":655,"title":{},"body":{"injectables/DataRepository.html":{},"coverage.html":{}}}],["src/repositories/data.repository.ts:25",{"_index":663,"title":{},"body":{"injectables/DataRepository.html":{}}}],["src/repositories/data.repository.ts:6",{"_index":658,"title":{},"body":{"injectables/DataRepository.html":{}}}],["src/repositories/data.repository.ts:9",{"_index":660,"title":{},"body":{"injectables/DataRepository.html":{}}}],["src/repositories/profiles.repositories",{"_index":947,"title":{},"body":{"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{}}}],["src/repositories/profiles.repositories.ts",{"_index":920,"title":{},"body":{"injectables/ProfileRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/repositories/profiles.repositories.ts:13",{"_index":922,"title":{},"body":{"injectables/ProfileRepository.html":{}}}],["src/repositories/profiles.repositories.ts:9",{"_index":921,"title":{},"body":{"injectables/ProfileRepository.html":{}}}],["src/services/base.service.ts",{"_index":369,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{}}}],["src/supabase/supabase.module",{"_index":554,"title":{},"body":{"modules/CwDeviceTypeModule.html":{},"modules/LocationModule.html":{},"modules/ProfilesModule.html":{}}}],["src/supabase/supabase.module.ts",{"_index":1071,"title":{},"body":{"modules/SupabaseModule.html":{}}}],["src/supabase/supabase.service",{"_index":652,"title":{},"body":{"modules/DataModule.html":{},"modules/ProfilesModule.html":{}}}],["src/supabase/supabase.service.ts",{"_index":1074,"title":{},"body":{"injectables/SupabaseService.html":{},"coverage.html":{}}}],["src/supabase/supabase.service.ts:18",{"_index":1076,"title":{},"body":{"injectables/SupabaseService.html":{}}}],["src/supabase/supabase.service.ts:8",{"_index":1075,"title":{},"body":{"injectables/SupabaseService.html":{}}}],["started",{"_index":1152,"title":{"index.html":{}},"body":{}}],["state",{"_index":962,"title":{},"body":{"controllers/RelayController.html":{},"injectables/RelayService.html":{}}}],["statements",{"_index":1096,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LocationController.html":{},"controllers/RelayController.html":{}}}],["string",{"_index":132,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/BaseRepository.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"injectables/GeolocationService.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"injectables/ProfileRepository.html":{},"injectables/ProfilesService.html":{},"interfaces/RepositoryInterface.html":{},"classes/UserAuthDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["subsequent",{"_index":1067,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["success",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{}}}],["success'})@apiresponse({status",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["successful",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["successfully",{"_index":1038,"title":{},"body":{"injectables/RelayService.html":{}}}],["summary",{"_index":321,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/DataController.html":{}}}],["supabase",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["supabase.service",{"_index":1072,"title":{},"body":{"modules/SupabaseModule.html":{}}}],["supabase/supabase",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{},"dependencies.html":{}}}],["supabase/supabase.module",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDevicesModule.html":{}}}],["supabase/supabase.service",{"_index":347,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/DataRepository.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/ProfileRepository.html":{}}}],["supabaseauthguard",{"_index":175,"title":{"guards/SupabaseAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"controllers/GeolocationController.html":{},"guards/SupabaseAuthGuard.html":{},"coverage.html":{}}}],["supabaseclient",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["supabasekey",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["supabasemodule",{"_index":73,"title":{"modules/SupabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/LocationModule.html":{},"modules/ProfilesModule.html":{},"modules/SupabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["supabaseservice",{"_index":332,"title":{"injectables/SupabaseService.html":{}},"body":{"classes/BaseRepository.html":{},"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/ProfileRepository.html":{},"modules/ProfilesModule.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"coverage.html":{},"overview.html":{}}}],["supabaseurl",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["super(cwdevicesservice",{"_index":578,"title":{},"body":{"controllers/CwDevicesController.html":{}}}],["super(cwdevicetypeservice",{"_index":546,"title":{},"body":{"controllers/CwDeviceTypeController.html":{}}}],["super(deviceownerrepository",{"_index":532,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{}}}],["super(devicerepository",{"_index":593,"title":{},"body":{"injectables/CwDevicesService.html":{}}}],["super(devicetyperepository",{"_index":565,"title":{},"body":{"injectables/CwDeviceTypeService.html":{}}}],["super(supabaseservice",{"_index":718,"title":{},"body":{"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{}}}],["support",{"_index":1162,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1163,"title":{},"body":{"modules.html":{}}}],["t",{"_index":661,"title":{},"body":{"injectables/DataRepository.html":{},"interfaces/IRepositoryBase.html":{},"interfaces/RepositoryInterface.html":{}}}],["table",{"_index":670,"title":{},"body":{"injectables/DataRepository.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"coverage.html":{}}}],["tablename",{"_index":333,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/DataRepository.html":{}}}],["tables",{"_index":1104,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tablesinsert",{"_index":1105,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["tablesupdate",{"_index":1106,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["take",{"_index":601,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["terminusmodule",{"_index":798,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":1002,"title":{},"body":{"injectables/RelayService.html":{}}}],["this.authservice.signinwithemail(logindto.email",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateapikey(apikey",{"_index":1060,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["this.authservice.validateuser(token",{"_index":849,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["this.configservice.get('supabase_key",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["this.configservice.get('supabase_url",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["this.cwdeviceownersservice.create(createdeviceownerdto",{"_index":499,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["this.cwdeviceownersservice.delete(id",{"_index":505,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["this.cwdeviceownersservice.findall",{"_index":495,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["this.cwdeviceownersservice.findbyid(id",{"_index":498,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["this.cwdeviceownersservice.update(id",{"_index":502,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["this.datarepository.findallbytable(data_table",{"_index":703,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["this.dataservice.create(createdatumdto",{"_index":635,"title":{},"body":{"controllers/DataController.html":{}}}],["this.dataservice.findall",{"_index":641,"title":{},"body":{"controllers/DataController.html":{}}}],["this.dataservice.findone(+id",{"_index":643,"title":{},"body":{"controllers/DataController.html":{}}}],["this.dataservice.remove(+id",{"_index":645,"title":{},"body":{"controllers/DataController.html":{}}}],["this.dataservice.update(+id",{"_index":644,"title":{},"body":{"controllers/DataController.html":{}}}],["this.deviceownerrepository.findbydeveuiandemail(deveui",{"_index":533,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{}}}],["this.deviceownerservice.getdeviceownerbydeveuiandemail(deveui",{"_index":691,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["this.devicerepository.findbydeveui",{"_index":594,"title":{},"body":{"injectables/CwDevicesService.html":{}}}],["this.deviceservice.getdevicebydeveui(deveui",{"_index":693,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["this.devicetyperepository.findbydevicetype",{"_index":566,"title":{},"body":{"injectables/CwDeviceTypeService.html":{}}}],["this.devicetypeservice.findbyid(devicetype",{"_index":697,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["this.extracttokenfromheader(request",{"_index":847,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["this.geolocationservice.getgeolocation('45",{"_index":758,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["this.health.check",{"_index":793,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.hextobase64(command",{"_index":1013,"title":{},"body":{"injectables/RelayService.html":{}}}],["this.http.pingcheck('nestjs",{"_index":794,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.httpadapterhost",{"_index":811,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["this.jwtservice.sign(session",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.locationrepository.create(createlocationdto",{"_index":905,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.locationrepository.findall",{"_index":906,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.locationrepository.findbyid(id",{"_index":907,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.locationservice.create(createlocationdto",{"_index":878,"title":{},"body":{"controllers/LocationController.html":{}}}],["this.locationservice.findall",{"_index":880,"title":{},"body":{"controllers/LocationController.html":{}}}],["this.locationservice.findone(+id",{"_index":881,"title":{},"body":{"controllers/LocationController.html":{}}}],["this.locationservice.remove(+id",{"_index":884,"title":{},"body":{"controllers/LocationController.html":{}}}],["this.locationservice.update(+id",{"_index":882,"title":{},"body":{"controllers/LocationController.html":{}}}],["this.profilesrepository.findbyid(id",{"_index":955,"title":{},"body":{"injectables/ProfilesService.html":{}}}],["this.profilesservice.findone(id",{"_index":941,"title":{},"body":{"controllers/ProfilesController.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":842,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["this.relayservice.senddownlink(relayon",{"_index":982,"title":{},"body":{"controllers/RelayController.html":{}}}],["this.repository.create(dto",{"_index":374,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{}}}],["this.repository.delete(id",{"_index":376,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{}}}],["this.repository.findall",{"_index":372,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{}}}],["this.repository.findbyid(id",{"_index":373,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{}}}],["this.repository.update(id",{"_index":375,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{}}}],["this.service.create(createdto",{"_index":325,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{}}}],["this.service.findall",{"_index":322,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{}}}],["this.supabase",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["this.supabase.auth.getuser(token",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.supabase.auth.signinwithpassword",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.supabaseservice",{"_index":348,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/ProfileRepository.html":{}}}],["this.supabaseservice.getsupabaseclient().auth.getuser(id",{"_index":926,"title":{},"body":{"injectables/ProfileRepository.html":{}}}],["throttle",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["throttlerguard",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseRepository.html":{},"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/GeolocationService.html":{},"guards/JwtAuthGuard.html":{},"injectables/ProfileRepository.html":{},"injectables/RelayService.html":{},"guards/SupabaseAuthGuard.html":{}}}],["token",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"classes/LoginDto.html":{},"guards/SupabaseAuthGuard.html":{},"classes/UserAuthDto.html":{}}}],["token'})@isstring",{"_index":1091,"title":{},"body":{"classes/UserAuthDto.html":{}}}],["trackby",{"_index":805,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["trackby(context",{"_index":806,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["transformer",{"_index":1134,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"guards/JwtAuthGuard.html":{},"injectables/RelayService.html":{},"guards/SupabaseAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/RelayService.html":{}}}],["ttl",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["type",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"injectables/GeolocationService.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"injectables/ProfileRepository.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{},"classes/UserAuthDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.dto",{"_index":539,"title":{},"body":{"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"classes/UpdateDeviceTypeDto.html":{}}}],["type.dto.ts",{"_index":412,"title":{},"body":{"classes/CreateDeviceTypeDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"coverage.html":{}}}],["type.dto.ts:11",{"_index":413,"title":{},"body":{"classes/CreateDeviceTypeDto.html":{}}}],["type.dto.ts:7",{"_index":414,"title":{},"body":{"classes/CreateDeviceTypeDto.html":{}}}],["typealiases",{"_index":1177,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["uint8array(hexstring.match(/.{1,2}/g).map(byte",{"_index":1041,"title":{},"body":{"injectables/RelayService.html":{}}}],["unauthorized",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DataController.html":{},"controllers/LocationController.html":{},"controllers/RelayController.html":{}}}],["unauthorized'})@apiresponse({status",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LocationController.html":{},"controllers/RelayController.html":{}}}],["unauthorizedexception",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["unauthorizedexception('authorization",{"_index":1061,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["unauthorizedexception('invalid",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"guards/SupabaseAuthGuard.html":{}}}],["unauthorizedexception('token",{"_index":848,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["unauthorizedexception('unable",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('user",{"_index":1064,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["unauthorizedexception(error",{"_index":852,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["unauthorizedexception(error.message",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/HttpCacheInterceptor.html":{}}}],["undefined})@apiresponse({status",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["unknown",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/DataService.html":{},"controllers/GeolocationController.html":{},"injectables/GeolocationService.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{}}}],["unlicensed",{"_index":1175,"title":{},"body":{"properties.html":{}}}],["update",{"_index":330,"title":{},"body":{"classes/BaseRepository.html":{},"classes/BaseService.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/IRepositoryBase.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"interfaces/RepositoryInterface.html":{}}}],["update(@param('id",{"_index":501,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/DataController.html":{},"controllers/LocationController.html":{}}}],["update(id",{"_index":345,"title":{},"body":{"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"interfaces/IRepositoryBase.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"interfaces/RepositoryInterface.html":{}}}],["update(item",{"_index":354,"title":{},"body":{"classes/BaseRepository.html":{}}}],["updated",{"_index":983,"title":{},"body":{"controllers/RelayController.html":{}}}],["updated_at",{"_index":443,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["updatedatumdto",{"_index":627,"title":{"classes/UpdateDatumDto.html":{}},"body":{"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"classes/UpdateDatumDto.html":{},"coverage.html":{}}}],["updatedevicedto",{"_index":592,"title":{"classes/UpdateDeviceDto.html":{}},"body":{"injectables/CwDevicesService.html":{},"classes/UpdateDeviceDto.html":{},"coverage.html":{}}}],["updatedeviceownerdto",{"_index":483,"title":{"classes/UpdateDeviceOwnerDto.html":{}},"body":{"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"classes/UpdateDeviceOwnerDto.html":{},"coverage.html":{}}}],["updatedevicetypedto",{"_index":564,"title":{"classes/UpdateDeviceTypeDto.html":{}},"body":{"injectables/CwDeviceTypeService.html":{},"classes/UpdateDeviceTypeDto.html":{},"coverage.html":{}}}],["updatedto",{"_index":366,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{}}}],["updatelocationdto",{"_index":871,"title":{"classes/UpdateLocationDto.html":{}},"body":{"controllers/LocationController.html":{},"injectables/LocationService.html":{},"classes/UpdateLocationDto.html":{},"coverage.html":{}}}],["updateprofiledto",{"_index":1088,"title":{"classes/UpdateProfileDto.html":{}},"body":{"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["updates",{"_index":704,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"injectables/LocationService.html":{}}}],["url",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RelayService.html":{}}}],["usage",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{}}}],["use",{"_index":1066,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["useclass",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":1073,"title":{},"body":{"modules/SupabaseModule.html":{}}}],["useguards",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GeolocationController.html":{}}}],["useguards(supabaseauthguard",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GeolocationController.html":{}}}],["useinterceptors",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{}}}],["useinterceptors(cacheinterceptor",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["user",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"classes/LoginDto.html":{},"injectables/ProfileRepository.html":{},"injectables/RelayService.html":{},"guards/SupabaseAuthGuard.html":{},"classes/UserAuthDto.html":{}}}],["user.user",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.user.id",{"_index":928,"title":{},"body":{"injectables/ProfileRepository.html":{}}}],["user_id",{"_index":388,"title":{},"body":{"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{}}}],["userauthdto",{"_index":915,"title":{"classes/UserAuthDto.html":{}},"body":{"classes/LoginDto.html":{},"classes/UserAuthDto.html":{},"coverage.html":{}}}],["usererror",{"_index":925,"title":{},"body":{"injectables/ProfileRepository.html":{}}}],["userid",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["username",{"_index":444,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["using",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"guards/SupabaseAuthGuard.html":{}}}],["valid",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateapikey",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateapikey(apikey",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(token",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":399,"title":{},"body":{"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/LoginDto.html":{},"classes/UserAuthDto.html":{},"dependencies.html":{}}}],["value",{"_index":341,"title":{},"body":{"classes/BaseRepository.html":{},"controllers/DataController.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1112,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1190,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RelayService.html":{},"injectables/SupabaseService.html":{},"properties.html":{}}}],["website",{"_index":445,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["world",{"_index":134,"title":{},"body":{"injectables/AppService.html":{}}}],["wtf",{"_index":654,"title":{},"body":{"modules/DataModule.html":{}}}],["yes",{"_index":620,"title":{},"body":{"controllers/DataController.html":{}}}],["zoom",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/LocationModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/SupabaseModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('/')@Throttle({default: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseInterceptors } from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { CacheInterceptor, CacheTTL } from '@nestjs/cache-manager';\nimport { Throttle } from '@nestjs/throttler';\nimport { Public } from './auth/public.decorator';\n\n// @ApiBearerAuth('authorization')\n// @UseInterceptors(CacheInterceptor)\n// @CacheTTL(20)\n@ApiTags('app')\n@Controller()\nexport class AppController {\n  constructor() {}\n\n  // @UseInterceptors(CacheInterceptor)\n  @Public()\n  @Get('/')\n  @Throttle({ default: { limit: 1, ttl: 6000 } })\n  async getHello() {\n    return [{ id: 1, name: 'Nest' + Math.random() }];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCwDeviceOwnersModule\n\nCwDeviceOwnersModule\n\nAppModule -->\n\nCwDeviceOwnersModule->AppModule\n\n\n\n\n\nCwDevicesModule\n\nCwDevicesModule\n\nAppModule -->\n\nCwDevicesModule->AppModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nGeolocationModule\n\nGeolocationModule\n\nAppModule -->\n\nGeolocationModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nAppModule -->\n\nLocationModule->AppModule\n\n\n\n\n\nProfilesModule\n\nProfilesModule\n\nAppModule -->\n\nProfilesModule->AppModule\n\n\n\n\n\nRelayModule\n\nRelayModule\n\nAppModule -->\n\nRelayModule->AppModule\n\n\n\n\n\nSupabaseModule\n\nSupabaseModule\n\nAppModule -->\n\nSupabaseModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CwDeviceOwnersModule\n                        \n                        \n                            CwDevicesModule\n                        \n                        \n                            DataModule\n                        \n                        \n                            GeolocationModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            LocationModule\n                        \n                        \n                            ProfilesModule\n                        \n                        \n                            RelayModule\n                        \n                        \n                            SupabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // src/app.module.ts\nimport { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { AuthModule } from './auth/auth.module';\nimport { DataModule } from './data/data.module';\nimport { LocationModule } from './location/location.module';\nimport { SupabaseModule } from './supabase/supabase.module';\nimport { ProfilesModule } from './profiles/profiles.module';\nimport { CwDeviceOwnersModule } from './cw_device_owners/cw_device_owners.module';\nimport { CwDevicesModule } from './cw_devices/cw_devices.module';\nimport { ThrottlerGuard, ThrottlerModule } from '@nestjs/throttler';\nimport { APP_GUARD } from '@nestjs/core';\nimport { AuthService } from './auth/auth.service';\nimport { JwtAuthGuard } from './auth/guards/jwt-auth.guard';\nimport { CacheModule } from '@nestjs/cache-manager';\nimport { RelayModule } from './relay/relay.module';\nimport { GeolocationModule } from './geolocation/geolocation.module';\nimport { AppController } from './app.controller';\nimport { HealthModule } from './health/health.module';\n\n@Module({\n  imports: [\n    AuthModule,\n    ConfigModule.forRoot({\n      envFilePath: ['.env.development.local', '.env.development', '.env'],\n      isGlobal: true,\n    }),\n    ThrottlerModule.forRoot([{\n      ttl: 60000,\n      limit: 3,\n    }]),\n    CacheModule.register({\n      ttl: 60 * 10, // seconds\n      max: 1000, // maximum number of items in cache\n      isGlobal: true,\n    }),\n    DataModule,\n    LocationModule,\n    SupabaseModule,\n    ProfilesModule,\n    CwDeviceOwnersModule,\n    CwDevicesModule,\n    RelayModule,\n    GeolocationModule,\n    HealthModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AuthService,\n    {\n      provide: APP_GUARD,\n      useClass: JwtAuthGuard,  // Register JwtAuthGuard as a global guard\n    },\n    {\n      provide: APP_GUARD,\n      useClass: ThrottlerGuard\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getProtectedRoute\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getProtectedRoute\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProtectedRoute(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('XYZ')@Get('user')@UseGuards(SupabaseAuthGuard)@ApiResponse({status: 200, description: 'Login Success'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 402, description: 'Payment Required'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiResponse({status: 404, description: 'Login Not Found', type: LoginDto, links: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('login')@Throttle({default: undefined})@ApiResponse({status: 200, description: 'Login Success'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 402, description: 'Payment Required'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiResponse({status: 404, description: 'Login Not Found'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        // Usage Example in Controller\nimport { Controller, Get, UseGuards, Req, Body, Post } from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { SupabaseAuthGuard } from './guards/supabase.guard';\nimport { LoginDto } from './DTOs/userAuth.dto';\nimport { AuthService } from './auth.service';\nimport { Public } from './public.decorator';\nimport { Throttle } from '@nestjs/throttler';\n\n@ApiTags('auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) { }\n\n  @ApiBearerAuth('XYZ')\n  @Get('user')\n  @UseGuards(SupabaseAuthGuard)\n  @ApiResponse({ status: 200, description: 'Login Success' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 402, description: 'Payment Required' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiResponse({ status: 404, description: 'Login Not Found', type: LoginDto, links: {\n    exampleLink: {\n      operationId: 'getUserById',\n        parameters: {\n          userId: '$request.path.id',\n        },\n        description: 'Link to get user by ID',\n        server: {\n          url: 'https://api.cropwatch.io/api/auth/user',\n        }\n    }\n  } })\n  async getProtectedRoute(@Req() req) {\n    return { message: 'This is a protected route', user: req.user };\n  }\n\n  @Public()\n  @Post('login')\n  @Throttle({ default: { limit: 1, ttl: 6000 } })\n  @ApiResponse({ status: 200, description: 'Login Success' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 402, description: 'Payment Required' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiResponse({ status: 404, description: 'Login Not Found' })\n  async login(@Body() loginDto: LoginDto) {\n    const session = await this.authService.signInWithEmail(loginDto.email, loginDto.password);\n    return { message: 'Login successful', token: session.session?.access_token };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\n\n@Module({\n  controllers: [AuthController],\n  exports: [AuthService],\n  providers: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                supabase\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signInWithEmail\n                            \n                            \n                                    Async\n                                validateApiKey\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signInWithEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    signInWithEmail(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateApiKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateApiKey(apiKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        supabase\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SupabaseClient\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, CanActivate, ExecutionContext, UnauthorizedException, Logger, HttpException, HttpStatus } from '@nestjs/common';\nimport { SupabaseClient, User, createClient } from '@supabase/supabase-js';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class AuthService {\n  private supabase: SupabaseClient;\n\n  constructor(\n    private configService: ConfigService,\n    // private jwtService: JwtService,\n  ) {\n    const supabaseUrl = this.configService.get('SUPABASE_URL');\n    const supabaseKey = this.configService.get('SUPABASE_KEY');\n\n    // Initialize Supabase client with version 2 package\n    this.supabase = createClient(supabaseUrl, supabaseKey);\n  }\n\n  // Function to validate a JWT token using Supabase\n  async validateUser(token: string): Promise {\n    try {\n      const { data: user, error } = await this.supabase.auth.getUser(token);\n      if (error) {\n        throw new UnauthorizedException(error.message);\n      }\n      return user.user;\n    } catch (error) {\n      throw new UnauthorizedException(error.message);\n    }\n  }\n\n  async validateApiKey(apiKey: string): Promise {\n    // Here you would implement logic to validate the API key\n    // For now, we assume a hardcoded valid key for demonstration purposes\n\n    let { data: api_keys, error } = await this.supabase\n      .from('api_keys')\n      .select('*')\n      .eq('api_key', apiKey)\n      .gt('expiry_date', new Date())\n      .single();\n\n    if (error) {\n      throw new UnauthorizedException('Invalid API key');\n    }\n    return api_keys;\n  }\n\n  // Function to sign in with email and password\n  async signInWithEmail(email: string, password: string): Promise {\n    try {\n      const { data: session, error } = await this.supabase.auth.signInWithPassword({ email, password });\n      if (error) {\n        throw new UnauthorizedException('Invalid credentials');\n      }\n      // this.jwtService.sign(session);\n      return session;\n    } catch (error) {\n      throw new UnauthorizedException('Unable to sign in with email and password');\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseController.html":{"url":"classes/BaseController.html","title":"class - BaseController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bases/base.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: BaseServiceInterface)\n                    \n                \n                        \n                            \n                                Defined in src/bases/base.controller.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        BaseServiceInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create a new item'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/bases/base.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get all items'})@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/bases/base.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Get, Post, Body, UseInterceptors } from '@nestjs/common';\nimport { ApiOperation } from '@nestjs/swagger';\n\nexport interface BaseServiceInterface {\n  findAll: () => Promise;\n  create: (dto: CreateDto) => Promise;\n}\n\nexport class BaseController {\n  constructor(private readonly service: BaseServiceInterface) {}\n\n  @ApiOperation({ summary: 'Get all items' })\n  @Get()\n  async findAll(): Promise {\n    return this.service.findAll();\n  }\n\n  @ApiOperation({ summary: 'Create a new item' })\n  @Post()\n  async create(@Body() createDto: CreateDto): Promise {\n    return this.service.create(createDto);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseRepository.html":{"url":"classes/BaseRepository.html","title":"class - BaseRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repositories/base.repository.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(supabaseService: SupabaseService, tableName: string)\n                    \n                \n                        \n                            \n                                Defined in src/repositories/base.repository.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        supabaseService\n                                                  \n                                                        \n                                                                        SupabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tableName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(item: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositories/base.repository.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositories/base.repository.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositories/base.repository.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositories/base.repository.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number | string, item: Partial, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositories/base.repository.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SupabaseService } from '../supabase/supabase.service';\n\nexport class BaseRepository {\n  constructor(\n    protected readonly supabaseService: SupabaseService,\n    private readonly tableName: string\n  ) {}\n\n  async findAll(): Promise {\n    const { data, error } = await this.supabaseService\n      .getSupabaseClient()\n      .from(this.tableName)\n      .select('*');\n    if (error) {\n      throw error;\n    }\n    return data || [];\n  }\n\n  async findById(id: number | string, idColumn = 'id'): Promise {\n    const { data, error } = await this.supabaseService\n      .getSupabaseClient()\n      .from(this.tableName)\n      .select('*')\n      .eq(idColumn, id)\n      .single();\n    if (error) {\n      throw error;\n    }\n    return data || null;\n  }\n\n  async create(item: Partial): Promise {\n    const { data, error } = await this.supabaseService\n      .getSupabaseClient()\n      .from(this.tableName)\n      .insert(item)\n      .select('*')\n      .single();\n    if (error) {\n      throw error;\n    }\n    return data;\n  }\n\n  async update(id: number | string, item: Partial, idColumn = 'id'): Promise {\n    const { data, error } = await this.supabaseService\n      .getSupabaseClient()\n      .from(this.tableName)\n      .update(item)\n      .eq(idColumn, id)\n      .select('*')\n      .single();\n    if (error) {\n      throw error;\n    }\n    return data;\n  }\n\n  async delete(id: number | string, idColumn = 'id'): Promise {\n    const { error } = await this.supabaseService\n      .getSupabaseClient()\n      .from(this.tableName)\n      .delete()\n      .eq(idColumn, id);\n    if (error) {\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseService.html":{"url":"classes/BaseService.html","title":"class - BaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bases/base.service.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            BaseServiceInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: BaseRepository)\n                    \n                \n                        \n                            \n                                Defined in src/bases/base.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        BaseRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bases/base.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bases/base.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/bases/base.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bases/base.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, dto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bases/base.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseRepository } from \"src/repositories/base.repository\";\n\n// src/services/base.service.ts\nexport interface BaseServiceInterface {\n  findAll(): Promise;\n  create(dto: CreateDto): Promise;\n}\n\nexport class BaseService, UpdateDto extends Partial> implements BaseServiceInterface {\n  constructor(protected readonly repository: BaseRepository) {}\n\n  async findAll(): Promise {\n    return this.repository.findAll();\n  }\n\n  async findById(id: number): Promise {\n    return this.repository.findById(id);\n  }\n\n  async create(dto: CreateDto): Promise {\n    return this.repository.create(dto);\n  }\n\n  async update(id: number, dto: UpdateDto): Promise {\n    return this.repository.update(id, dto);\n  }\n\n  async delete(id: number): Promise {\n    return this.repository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseServiceInterface.html":{"url":"interfaces/BaseServiceInterface.html","title":"interface - BaseServiceInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseServiceInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bases/base.controller.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            create\n                                        \n                                \n                                \n                                        \n                                            findAll\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        create:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        findAll\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        findAll:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Get, Post, Body, UseInterceptors } from '@nestjs/common';\nimport { ApiOperation } from '@nestjs/swagger';\n\nexport interface BaseServiceInterface {\n  findAll: () => Promise;\n  create: (dto: CreateDto) => Promise;\n}\n\nexport class BaseController {\n  constructor(private readonly service: BaseServiceInterface) {}\n\n  @ApiOperation({ summary: 'Get all items' })\n  @Get()\n  async findAll(): Promise {\n    return this.service.findAll();\n  }\n\n  @ApiOperation({ summary: 'Create a new item' })\n  @Post()\n  async create(@Body() createDto: CreateDto): Promise {\n    return this.service.create(createDto);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseServiceInterface-1.html":{"url":"interfaces/BaseServiceInterface-1.html","title":"interface - BaseServiceInterface-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseServiceInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bases/base.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        findAll\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bases/base.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/bases/base.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BaseRepository } from \"src/repositories/base.repository\";\n\n// src/services/base.service.ts\nexport interface BaseServiceInterface {\n  findAll(): Promise;\n  create(dto: CreateDto): Promise;\n}\n\nexport class BaseService, UpdateDto extends Partial> implements BaseServiceInterface {\n  constructor(protected readonly repository: BaseRepository) {}\n\n  async findAll(): Promise {\n    return this.repository.findAll();\n  }\n\n  async findById(id: number): Promise {\n    return this.repository.findById(id);\n  }\n\n  async create(dto: CreateDto): Promise {\n    return this.repository.create(dto);\n  }\n\n  async update(id: number, dto: UpdateDto): Promise {\n    return this.repository.update(id, dto);\n  }\n\n  async delete(id: number): Promise {\n    return this.repository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDatumDto.html":{"url":"classes/CreateDatumDto.html","title":"class - CreateDatumDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDatumDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/dto/create-datum.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateDatumDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDeviceDto.html":{"url":"classes/CreateDeviceDto.html","title":"class - CreateDeviceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDeviceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_devices/dto/create-device.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                dev_eui\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                serial_number\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dev_eui\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cw_devices/dto/create-device.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cw_devices/dto/create-device.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        serial_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cw_devices/dto/create-device.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cw_devices/dto/create-device.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cw_devices/dto/create-device.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsString } from 'class-validator';\n\nexport class CreateDeviceDto {\n  @IsNotEmpty()\n  @IsString()\n  dev_eui: string;\n\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  type: number;\n\n  @IsNotEmpty()\n  @IsString()\n  serial_number: string;\n\n  @IsNotEmpty()\n  @IsString()\n  user_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDeviceOwnerDto.html":{"url":"classes/CreateDeviceOwnerDto.html","title":"class - CreateDeviceOwnerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDeviceOwnerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_device_owners/dto/create-device-owner.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                dev_eui\n                            \n                            \n                                    \n                                    \n                                owner_id\n                            \n                            \n                                    \n                                    \n                                permission_level\n                            \n                            \n                                    \n                                    \n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dev_eui\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cw_device_owners/dto/create-device-owner.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        owner_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cw_device_owners/dto/create-device-owner.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        permission_level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cw_device_owners/dto/create-device-owner.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cw_device_owners/dto/create-device-owner.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsString } from 'class-validator';\n\nexport class CreateDeviceOwnerDto {\n  @IsNotEmpty()\n  @IsString()\n  dev_eui: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  owner_id: number;\n\n  @IsNotEmpty()\n  @IsNumber()\n  permission_level: number;\n\n  @IsNotEmpty()\n  @IsString()\n  user_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDeviceTypeDto.html":{"url":"classes/CreateDeviceTypeDto.html","title":"class - CreateDeviceTypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDeviceTypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_device_type/dto/create-device-type.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cw_device_type/dto/create-device-type.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cw_device_type/dto/create-device-type.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateDeviceTypeDto {\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @IsNotEmpty()\n  @IsString()\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLocationDto.html":{"url":"classes/CreateLocationDto.html","title":"class - CreateLocationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLocationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/dto/create-location.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                lat\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                long\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                map_zoom\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                owner_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        lat\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsLatitude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        long\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsLongitude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        map_zoom\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        owner_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsOptional, IsString, IsLatitude, IsLongitude } from 'class-validator';\n\nexport class CreateLocationDto {\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @IsOptional()\n  @IsString()\n  description?: string | null;\n\n  @IsOptional()\n  @IsLatitude()\n  lat?: number | null;\n\n  @IsOptional()\n  @IsLongitude()\n  long?: number | null;\n\n  @IsOptional()\n  @IsNumber()\n  map_zoom?: number | null;\n\n  @IsOptional()\n  @IsString()\n  owner_id?: string | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileDto.html":{"url":"classes/CreateProfileDto.html","title":"class - CreateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profiles/dto/create-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                accepted_agreements\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                avatar_url\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                employer\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                full_name\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                last_login\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                line_notify_token\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                updated_at\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                username\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                website\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        accepted_agreements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profiles/dto/create-profile.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        avatar_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsUrl()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profiles/dto/create-profile.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profiles/dto/create-profile.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        employer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profiles/dto/create-profile.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        full_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profiles/dto/create-profile.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profiles/dto/create-profile.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        last_login\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profiles/dto/create-profile.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        line_notify_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profiles/dto/create-profile.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profiles/dto/create-profile.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profiles/dto/create-profile.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        website\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsUrl()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profiles/dto/create-profile.dto.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsBoolean, IsEmail, IsNotEmpty, IsOptional, IsString, IsUrl } from 'class-validator';\n\nexport class CreateProfileDto {\n  @IsNotEmpty()\n  @IsString()\n  id: string;\n\n  @IsOptional()\n  @IsBoolean()\n  accepted_agreements?: boolean;\n\n  @IsOptional()\n  @IsString()\n  @IsUrl()\n  avatar_url?: string | null;\n\n  @IsOptional()\n  @IsEmail()\n  email?: string | null;\n\n  @IsOptional()\n  @IsString()\n  employer?: string | null;\n\n  @IsOptional()\n  @IsString()\n  full_name?: string | null;\n\n  @IsOptional()\n  @IsString()\n  last_login?: string | null;\n\n  @IsOptional()\n  @IsString()\n  line_notify_token?: string | null;\n\n  @IsOptional()\n  @IsString()\n  updated_at?: string | null;\n\n  @IsOptional()\n  @IsString()\n  username?: string | null;\n\n  @IsOptional()\n  @IsUrl()\n  website?: string | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CwDeviceOwnersController.html":{"url":"controllers/CwDeviceOwnersController.html","title":"controller - CwDeviceOwnersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CwDeviceOwnersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_device_owners/cw_device_owners.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cw-device-owners\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDeviceOwnerDto: CreateDeviceOwnerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create a new device owner'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/cw_device_owners/cw_device_owners.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDeviceOwnerDto\n                                            \n                                                            CreateDeviceOwnerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get all device owners'})@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/cw_device_owners/cw_device_owners.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get a device owner by ID'})@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/cw_device_owners/cw_device_owners.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete a device owner by ID'})@Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/cw_device_owners/cw_device_owners.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateDeviceOwnerDto: UpdateDeviceOwnerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Update a device owner by ID'})@Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/cw_device_owners/cw_device_owners.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDeviceOwnerDto\n                                            \n                                                            UpdateDeviceOwnerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        // src/cw_device_owners/cw_device_owners.controller.ts\nimport { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { CwDeviceOwnersService } from './cw_device_owners.service';\nimport { ApiTags, ApiOperation } from '@nestjs/swagger';\nimport { CreateDeviceOwnerDto } from './dto/create-device-owner.dto';\nimport { UpdateDeviceOwnerDto } from './dto/update-device-owner.dto';\n\n@ApiTags('🔒Device➡️Owners')\n@Controller('cw-device-owners')\nexport class CwDeviceOwnersController {\n  constructor(private readonly cwDeviceOwnersService: CwDeviceOwnersService) {}\n\n  @ApiOperation({ summary: 'Get all device owners' })\n  @Get()\n  findAll() {\n    return this.cwDeviceOwnersService.findAll();\n  }\n\n  @ApiOperation({ summary: 'Get a device owner by ID' })\n  @Get(':id')\n  findOne(@Param('id') id: number) {\n    return this.cwDeviceOwnersService.findById(id);\n  }\n\n  @ApiOperation({ summary: 'Create a new device owner' })\n  @Post()\n  create(@Body() createDeviceOwnerDto: CreateDeviceOwnerDto) {\n    return this.cwDeviceOwnersService.create(createDeviceOwnerDto);\n  }\n\n  @ApiOperation({ summary: 'Update a device owner by ID' })\n  @Patch(':id')\n  update(@Param('id') id: number, @Body() updateDeviceOwnerDto: UpdateDeviceOwnerDto) {\n    return this.cwDeviceOwnersService.update(id, updateDeviceOwnerDto);\n  }\n\n  @ApiOperation({ summary: 'Delete a device owner by ID' })\n  @Delete(':id')\n  remove(@Param('id') id: number) {\n    return this.cwDeviceOwnersService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CwDeviceOwnersModule.html":{"url":"modules/CwDeviceOwnersModule.html","title":"module - CwDeviceOwnersModule","body":"\n                   \n\n\n\n\n    Modules\n    CwDeviceOwnersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CwDeviceOwnersModule\n\n\n\ncluster_CwDeviceOwnersModule_providers\n\n\n\ncluster_CwDeviceOwnersModule_imports\n\n\n\n\nSupabaseModule\n\nSupabaseModule\n\n\n\nCwDeviceOwnersModule\n\nCwDeviceOwnersModule\n\nCwDeviceOwnersModule -->\n\nSupabaseModule->CwDeviceOwnersModule\n\n\n\n\n\nCwDeviceOwnersService\n\nCwDeviceOwnersService\n\nCwDeviceOwnersModule -->\n\nCwDeviceOwnersService->CwDeviceOwnersModule\n\n\n\n\n\nDeviceOwnerRepository\n\nDeviceOwnerRepository\n\nCwDeviceOwnersModule -->\n\nDeviceOwnerRepository->CwDeviceOwnersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cw_device_owners/cw_device_owners.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CwDeviceOwnersService\n                        \n                        \n                            DeviceOwnerRepository\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CwDeviceOwnersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SupabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // src/cw_device_owners/cw_device_owners.module.ts\nimport { Module } from '@nestjs/common';\nimport { CwDeviceOwnersService } from './cw_device_owners.service';\nimport { CwDeviceOwnersController } from './cw_device_owners.controller';\nimport { SupabaseModule } from '../supabase/supabase.module';\nimport { DeviceOwnerRepository } from 'src/repositories/cw_device_owners';\n\n@Module({\n  imports: [SupabaseModule],\n  providers: [CwDeviceOwnersService, DeviceOwnerRepository], // Add repository and service\n  controllers: [CwDeviceOwnersController],\n})\nexport class CwDeviceOwnersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CwDeviceOwnersService.html":{"url":"injectables/CwDeviceOwnersService.html","title":"injectable - CwDeviceOwnersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CwDeviceOwnersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_device_owners/cw_device_owners.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getDeviceOwnerByDevEuiAndEmail\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deviceOwnerRepository: DeviceOwnerRepository)\n                    \n                \n                        \n                            \n                                Defined in src/cw_device_owners/cw_device_owners.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deviceOwnerRepository\n                                                  \n                                                        \n                                                                        DeviceOwnerRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getDeviceOwnerByDevEuiAndEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDeviceOwnerByDevEuiAndEmail(devEui: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cw_device_owners/cw_device_owners.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                devEui\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:20\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:28\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:12\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:16\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, dto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:24\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateDeviceOwnerDto } from './dto/create-device-owner.dto';\nimport { UpdateDeviceOwnerDto } from './dto/update-device-owner.dto';\nimport { DeviceOwnerRepository } from 'src/repositories/cw_device_owners';\nimport { Database } from 'database.types';\nimport { BaseService } from 'src/bases/base.service';\n\ntype DeviceOwnerRow = Database['public']['Tables']['cw_device_owners']['Row'];\n\n@Injectable()\nexport class CwDeviceOwnersService extends BaseService {\n  constructor(private readonly deviceOwnerRepository: DeviceOwnerRepository) {\n    super(deviceOwnerRepository);\n  }\n\n  public async getDeviceOwnerByDevEuiAndEmail(devEui: string, email: string): Promise {\n    return this.deviceOwnerRepository.findByDevEuiAndEmail(devEui, email);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CwDeviceTypeController.html":{"url":"controllers/CwDeviceTypeController.html","title":"controller - CwDeviceTypeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CwDeviceTypeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_device_type/cw_device_type.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cw-device-type\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create a new item'})@Post()\n                \n            \n\n                    \n                        \n                            Inherited from         BaseController\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseController:20\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get all items'})@Get()\n                \n            \n\n                    \n                        \n                            Inherited from         BaseController\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseController:14\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { Database } from 'database.types';\nimport { BaseController } from 'src/bases/base.controller';\nimport { CreateDeviceTypeDto } from './dto/create-device-type.dto';\nimport { CwDeviceTypeService } from './cw_device_type.service';\nimport { ApiTags } from '@nestjs/swagger';\n\ntype DeviceTypeRow = Database['public']['Tables']['cw_device_type']['Row'];\n\n@ApiTags('Device Type')\n@Controller('cw-device-type')\nexport class CwDeviceTypeController extends BaseController {\n    constructor(cwDeviceTypeService: CwDeviceTypeService) {\n        super(cwDeviceTypeService);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CwDeviceTypeModule.html":{"url":"modules/CwDeviceTypeModule.html","title":"module - CwDeviceTypeModule","body":"\n                   \n\n\n\n\n    Modules\n    CwDeviceTypeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CwDeviceTypeModule\n\n\n\ncluster_CwDeviceTypeModule_providers\n\n\n\ncluster_CwDeviceTypeModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nCwDeviceTypeModule\n\nCwDeviceTypeModule\n\nCwDeviceTypeModule -->\n\nAuthModule->CwDeviceTypeModule\n\n\n\n\n\nSupabaseModule\n\nSupabaseModule\n\nCwDeviceTypeModule -->\n\nSupabaseModule->CwDeviceTypeModule\n\n\n\n\n\nCwDeviceTypeService\n\nCwDeviceTypeService\n\nCwDeviceTypeModule -->\n\nCwDeviceTypeService->CwDeviceTypeModule\n\n\n\n\n\nDeviceTypeRepository\n\nDeviceTypeRepository\n\nCwDeviceTypeModule -->\n\nDeviceTypeRepository->CwDeviceTypeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cw_device_type/cw_device_type.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CwDeviceTypeService\n                        \n                        \n                            DeviceTypeRepository\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CwDeviceTypeController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            SupabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CwDeviceTypeService } from './cw_device_type.service';\nimport { CwDeviceTypeController } from './cw_device_type.controller';\nimport { SupabaseModule } from 'src/supabase/supabase.module';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { DeviceTypeRepository } from 'src/repositories/cw_device_type.repository';\n\n@Module({\n  imports: [SupabaseModule, AuthModule],\n  providers: [\n    CwDeviceTypeService,\n    DeviceTypeRepository,\n    \n  ],\n  controllers: [CwDeviceTypeController]\n})\nexport class CwDeviceTypeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CwDeviceTypeService.html":{"url":"injectables/CwDeviceTypeService.html","title":"injectable - CwDeviceTypeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CwDeviceTypeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_device_type/cw_device_type.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getDeviceTypeByDevType\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deviceTypeRepository: DeviceTypeRepository)\n                    \n                \n                        \n                            \n                                Defined in src/cw_device_type/cw_device_type.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deviceTypeRepository\n                                                  \n                                                        \n                                                                        DeviceTypeRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getDeviceTypeByDevType\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDeviceTypeByDevType(devType: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cw_device_type/cw_device_type.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                devType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:20\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:28\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:12\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:16\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, dto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:24\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Database } from 'database.types';\nimport { BaseService } from 'src/bases/base.service';\nimport { CreateDeviceTypeDto } from './dto/create-device-type.dto';\nimport { UpdateDeviceTypeDto } from './dto/update-device-type.dto';\nimport { DeviceTypeRepository } from 'src/repositories/cw_device_type.repository';\n\ntype DeviceTypeRow = Database['public']['Tables']['cw_device_type']['Row'];\n\n@Injectable()\nexport class CwDeviceTypeService extends BaseService {\n  constructor(private readonly deviceTypeRepository: DeviceTypeRepository) {\n    super(deviceTypeRepository);\n  }\n\n    public async getDeviceTypeByDevType(devType: string): Promise {\n        return this.deviceTypeRepository.findByDeviceType({ dev_type: devType });\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CwDevicesController.html":{"url":"controllers/CwDevicesController.html","title":"controller - CwDevicesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CwDevicesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_devices/cw_devices.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cw-devices\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create a new item'})@Post()\n                \n            \n\n                    \n                        \n                            Inherited from         BaseController\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseController:20\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get all items'})@Get()\n                \n            \n\n                    \n                        \n                            Inherited from         BaseController\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseController:14\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Get, Post, Body, Patch, Param, Delete, Controller } from '@nestjs/common';\nimport { CwDevicesService } from './cw_devices.service';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Database } from 'database.types';\nimport { BaseController } from 'src/bases/base.controller';\nimport { CreateDeviceDto } from './dto/create-device.dto';\n\ntype DevicesRow = Database['public']['Tables']['cw_devices']['Row'];\n\n@ApiTags('Devices')\n@Controller('cw-devices')\nexport class CwDevicesController extends BaseController {\n  constructor(cwDevicesService: CwDevicesService) {\n    super(cwDevicesService);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CwDevicesModule.html":{"url":"modules/CwDevicesModule.html","title":"module - CwDevicesModule","body":"\n                   \n\n\n\n\n    Modules\n    CwDevicesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CwDevicesModule\n\n\n\ncluster_CwDevicesModule_imports\n\n\n\ncluster_CwDevicesModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nCwDevicesModule\n\nCwDevicesModule\n\nCwDevicesModule -->\n\nAuthModule->CwDevicesModule\n\n\n\n\n\nSupabaseModule\n\nSupabaseModule\n\nCwDevicesModule -->\n\nSupabaseModule->CwDevicesModule\n\n\n\n\n\nCwDevicesService\n\nCwDevicesService\n\nCwDevicesModule -->\n\nCwDevicesService->CwDevicesModule\n\n\n\n\n\nDeviceRepository\n\nDeviceRepository\n\nCwDevicesModule -->\n\nDeviceRepository->CwDevicesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cw_devices/cw_devices.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CwDevicesService\n                        \n                        \n                            DeviceRepository\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CwDevicesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            SupabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // src/cw_devices/cw_devices.module.ts\nimport { Module } from '@nestjs/common';\nimport { CwDevicesService } from './cw_devices.service';\nimport { CwDevicesController } from './cw_devices.controller';\nimport { SupabaseModule } from '../supabase/supabase.module';\nimport { AuthModule } from '../auth/auth.module';\nimport { DeviceRepository } from 'src/repositories/cw_devices.repository';\n\n@Module({\n  imports: [SupabaseModule, AuthModule],\n  providers: [CwDevicesService, DeviceRepository],\n  controllers: [CwDevicesController],\n})\nexport class CwDevicesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CwDevicesService.html":{"url":"injectables/CwDevicesService.html","title":"injectable - CwDevicesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CwDevicesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_devices/cw_devices.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getDeviceByDevEui\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deviceRepository: DeviceRepository)\n                    \n                \n                        \n                            \n                                Defined in src/cw_devices/cw_devices.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deviceRepository\n                                                  \n                                                        \n                                                                        DeviceRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getDeviceByDevEui\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDeviceByDevEui(devEui: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cw_devices/cw_devices.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                devEui\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:20\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:28\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:12\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:16\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, dto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:24\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Database } from 'database.types';\nimport { BaseService } from 'src/bases/base.service';\nimport { DeviceRepository } from 'src/repositories/cw_devices.repository';\nimport { CreateDeviceDto } from './dto/create-device.dto';\nimport { UpdateDeviceDto } from './dto/update-device.dto';\n\ntype DevicesRow = Database['public']['Tables']['cw_devices']['Row'];\n\n@Injectable()\nexport class CwDevicesService extends BaseService {\n  constructor(private readonly deviceRepository: DeviceRepository) {\n    super(deviceRepository);\n  }\n\n  public async getDeviceByDevEui(devEui: string): Promise {\n    return this.deviceRepository.findByDevEui({ dev_eui: devEui });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DataController.html":{"url":"controllers/DataController.html","title":"controller - DataController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DataController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/data.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                data\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDatumDto: CreateDatumDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/data/data.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDatumDto\n                                            \n                                                            CreateDatumDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(req, devEui?: string, skip: number, take: number, order: \"ASC\" | \"DESC\")\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Retrieve data with filters and pagination'})@ApiQuery({name: 'DevEui', required: false, type: String, description: 'Device EUI to filter data by specific device.'})@ApiQuery({name: 'Skip', required: false, type: Number, description: 'Number of records to skip. (default: 0)'})@ApiQuery({name: 'Take', required: false, type: Number, description: 'Number of records to retrieve. (default: 10)'})@ApiQuery({name: 'Order', required: false, type: String, description: 'Created_At Order direction, either ASC or DESC.'})@ApiBearerAuth('XYZ')@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/data/data.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                devEui\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                skip\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                        \n                                                take\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                        \n                                                order\n                                            \n                                                        \"ASC\" | \"DESC\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'ASC'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/data/data.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query, Req } from '@nestjs/common';\nimport { DataService } from './data.service';\nimport { CreateDatumDto } from './dto/create-datum.dto';\nimport { UpdateDatumDto } from './dto/update-datum.dto';\nimport { ApiOperation, ApiQuery, ApiTags } from '@nestjs/swagger';\nimport { CwDeviceTypeService } from 'src/cw_device_type/cw_device_type.service';\nimport { CwDevicesService } from 'src/cw_devices/cw_devices.service';\nimport { ApiBearerAuth } from '@nestjs/swagger';\n\n@ApiTags('Data')\n@Controller('data')\nexport class DataController {\n  constructor(\n    private readonly dataService: DataService,\n    private readonly deviceService: CwDevicesService,\n    private readonly deviceTypeService: CwDeviceTypeService,\n  ) { }\n\n  @Post()\n  create(@Body() createDatumDto: CreateDatumDto) {\n    return this.dataService.create(createDatumDto);\n  }\n\n  @ApiOperation({ summary: 'Retrieve data with filters and pagination' })\n  @ApiQuery({ name: 'DevEui', required: false, type: String, description: 'Device EUI to filter data by specific device.' })\n  @ApiQuery({ name: 'Skip', required: false, type: Number, description: 'Number of records to skip. (default: 0)' })\n  @ApiQuery({ name: 'Take', required: false, type: Number, description: 'Number of records to retrieve. (default: 10)' })\n  @ApiQuery({ name: 'Order', required: false, type: String, description: 'Created_At Order direction, either ASC or DESC.' })\n  @ApiBearerAuth('XYZ')\n  @Get()\n  findAll(\n    @Req() req,\n    @Query('DevEui') devEui?: string,\n    @Query('Skip') skip = 0,\n    @Query('Take') take = 10,\n    @Query('Order') order: 'ASC' | 'DESC' = 'ASC'\n  ) {\n    if (!req.user) {\n      return 'Unauthorized';\n    }\n    return this.dataService.findAll({ devEui, skip, take, order }, req.user.email);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.dataService.findOne(+id);\n  }\n\n  // @Patch(':id')\n  // update(@Param('id') id: string, @Body() updateDatumDto: UpdateDatumDto) {\n  //   return this.dataService.update(+id, updateDatumDto);\n  // }\n\n  // @Delete(':id')\n  // remove(@Param('id') id: string) {\n  //   return this.dataService.remove(+id);\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n    Modules\n    DataModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataModule\n\n\n\ncluster_DataModule_providers\n\n\n\n\nCwDeviceOwnersService\n\nCwDeviceOwnersService\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nCwDeviceOwnersService->DataModule\n\n\n\n\n\nCwDeviceTypeService\n\nCwDeviceTypeService\n\nDataModule -->\n\nCwDeviceTypeService->DataModule\n\n\n\n\n\nCwDevicesService\n\nCwDevicesService\n\nDataModule -->\n\nCwDevicesService->DataModule\n\n\n\n\n\nDataRepository\n\nDataRepository\n\nDataModule -->\n\nDataRepository->DataModule\n\n\n\n\n\nDataService\n\nDataService\n\nDataModule -->\n\nDataService->DataModule\n\n\n\n\n\nDeviceOwnerRepository\n\nDeviceOwnerRepository\n\nDataModule -->\n\nDeviceOwnerRepository->DataModule\n\n\n\n\n\nDeviceRepository\n\nDeviceRepository\n\nDataModule -->\n\nDeviceRepository->DataModule\n\n\n\n\n\nDeviceTypeRepository\n\nDeviceTypeRepository\n\nDataModule -->\n\nDeviceTypeRepository->DataModule\n\n\n\n\n\nSupabaseService\n\nSupabaseService\n\nDataModule -->\n\nSupabaseService->DataModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/data/data.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CwDeviceOwnersService\n                        \n                        \n                            CwDeviceTypeService\n                        \n                        \n                            CwDevicesService\n                        \n                        \n                            DataRepository\n                        \n                        \n                            DataService\n                        \n                        \n                            DeviceOwnerRepository\n                        \n                        \n                            DeviceRepository\n                        \n                        \n                            DeviceTypeRepository\n                        \n                        \n                            SupabaseService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DataController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DataService } from './data.service';\nimport { DataController } from './data.controller';\nimport { CwDeviceTypeService } from 'src/cw_device_type/cw_device_type.service';\nimport { CwDevicesService } from 'src/cw_devices/cw_devices.service';\nimport { DataRepository } from 'src/repositories/data.repository';\nimport { DeviceRepository } from 'src/repositories/cw_devices.repository';\nimport { DeviceTypeRepository } from 'src/repositories/cw_device_type.repository';\nimport { SupabaseService } from 'src/supabase/supabase.service';\nimport { CwDeviceOwnersService } from 'src/cw_device_owners/cw_device_owners.service';\nimport { DeviceOwnerRepository } from 'src/repositories/cw_device_owners';\n\n@Module({\n  imports: [\n  ],\n  controllers: [DataController],\n  providers: [\n    DataService,\n    DeviceOwnerRepository, //WTF IS THIS???\n    CwDevicesService,\n    CwDeviceTypeService,\n    CwDeviceOwnersService,\n    DataRepository,\n    DeviceRepository,\n    DeviceTypeRepository,\n    SupabaseService,\n  ],\n})\nexport class DataModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataRepository.html":{"url":"injectables/DataRepository.html","title":"injectable - DataRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repositories/data.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findAllByTable\n                            \n                            \n                                    Public\n                                    Async\n                                findByIdInTable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(supabaseService: SupabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/repositories/data.repository.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        supabaseService\n                                                  \n                                                        \n                                                                        SupabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAllByTable\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByTable(tableName: string, devEui: string, skip: number, take: number, order: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositories/data.repository.ts:9\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                devEui\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                skip\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                take\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                order\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findByIdInTable\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByIdInTable(tableName: string, id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositories/data.repository.ts:25\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SupabaseService } from '../supabase/supabase.service';\n\n@Injectable()\nexport class DataRepository {\n  constructor(private readonly supabaseService: SupabaseService) {}\n\n  public async findAllByTable(tableName: string, devEui: string, skip: number, take: number, order: boolean): Promise {\n    const { data, error } = await this.supabaseService\n      .getSupabaseClient()\n      .from(tableName)\n      .select('*')\n      .eq('dev_eui', devEui)\n      .range(skip, skip + take - 1)\n      .order('created_at', { ascending: order });\n\n    if (error) {\n      throw new Error(`Failed to retrieve data from table ${tableName}: ${error.message}`);\n    }\n\n    return data || [];\n  }\n\n  public async findByIdInTable(tableName: string, id: number): Promise {\n    const { data, error } = await this.supabaseService\n      .getSupabaseClient()\n      .from(tableName)\n      .select('*')\n      .eq('id', id)\n      .single();\n\n    if (error) {\n      throw new Error(`Failed to find record with id ${id} in table ${tableName}: ${error.message}`);\n    }\n\n    return data || null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deviceService: CwDevicesService, deviceTypeService: CwDeviceTypeService, deviceOwnerService: CwDeviceOwnersService, dataRepository: DataRepository)\n                    \n                \n                        \n                            \n                                Defined in src/data/data.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deviceService\n                                                  \n                                                        \n                                                                        CwDevicesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deviceTypeService\n                                                  \n                                                        \n                                                                        CwDeviceTypeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deviceOwnerService\n                                                  \n                                                        \n                                                                        CwDeviceOwnersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataRepository\n                                                  \n                                                        \n                                                                        DataRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createDatumDto: CreateDatumDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/data.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDatumDto\n                                            \n                                                            CreateDatumDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(params: FindAllParams, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/data.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            FindAllParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/data.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/data.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateDatumDto: UpdateDatumDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/data.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDatumDto\n                                            \n                                                            UpdateDatumDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Req } from '@nestjs/common';\nimport { CreateDatumDto } from './dto/create-datum.dto';\nimport { UpdateDatumDto } from './dto/update-datum.dto';\nimport { CwDevicesService } from 'src/cw_devices/cw_devices.service';\nimport { CwDeviceTypeService } from 'src/cw_device_type/cw_device_type.service';\nimport { Database } from 'database.types';\nimport { DataRepository } from 'src/repositories/data.repository';\nimport { CwDeviceOwnersService } from 'src/cw_device_owners/cw_device_owners.service';\n\n\ninterface FindAllParams {\n  devEui?: string;\n  skip: number;\n  take: number;\n  order: 'ASC' | 'DESC';\n}\n\n@Injectable()\nexport class DataService {\n  constructor(\n    private readonly deviceService: CwDevicesService,\n    private readonly deviceTypeService: CwDeviceTypeService,\n    private readonly deviceOwnerService: CwDeviceOwnersService,\n    private readonly dataRepository: DataRepository,\n  ) {}\n\n  create(createDatumDto: CreateDatumDto) {\n    return 'This action adds a new datum';\n  }\n\n  async findAll(params: FindAllParams, email: string) {\n    const { devEui, skip, take, order } = params;\n    if (!devEui) {\n      return 'DevEui is required';\n    }\n    const deviceOwner = await this.deviceOwnerService.getDeviceOwnerByDevEuiAndEmail(devEui, '');\n    if (!deviceOwner) {\n      return 'Device does not exist OR Device Owner not found';\n    }\n    const device = await this.deviceService.getDeviceByDevEui(devEui);\n    if (!device) {\n      return 'Device not found';\n    }\n    const deviceType = device.type;\n    if (!deviceType) {\n      return 'Device type not found';\n    }\n    const deviceTypeData = await this.deviceTypeService.findById(deviceType);\n    if (!deviceTypeData) {\n      return 'Device type data not found';\n    }\n    const data_table: string = deviceTypeData.data_table;\n    if (!data_table) {\n      return 'Data table not found';\n    }\n    //Data_table will contain the name of the datatable to query in the repo\n    const data = this.dataRepository.findAllByTable(data_table, devEui, skip, take, order == 'ASC' ? true : false);\n    return data;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} datum`;\n  }\n\n  update(id: number, updateDatumDto: UpdateDatumDto) {\n    return `This action updates a #${id} datum`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} datum`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Datum.html":{"url":"classes/Datum.html","title":"class - Datum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Datum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/entities/datum.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Datum {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeviceLocationRepository.html":{"url":"injectables/DeviceLocationRepository.html","title":"injectable - DeviceLocationRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeviceLocationRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repositories/cw_device_locations.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(supabaseService: SupabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/repositories/cw_device_locations.repository.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        supabaseService\n                                                  \n                                                        \n                                                                        SupabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(item: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:34\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:61\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:10\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:21\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number | string, item: Partial, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:47\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SupabaseService } from '../supabase/supabase.service';\nimport { Database } from 'database.types';\nimport { BaseRepository } from './base.repository';\n\ntype DeviceLocationRow = Database['public']['Tables']['cw_device_locations']['Row'];\n\n@Injectable()\nexport class DeviceLocationRepository extends BaseRepository {\n  constructor(supabaseService: SupabaseService) {\n    super(supabaseService, 'cw_device_locations');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeviceOwnerRepository.html":{"url":"injectables/DeviceOwnerRepository.html","title":"injectable - DeviceOwnerRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeviceOwnerRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repositories/cw_device_owners.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findByDevEuiAndEmail\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(supabaseService: SupabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/repositories/cw_device_owners.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        supabaseService\n                                                  \n                                                        \n                                                                        SupabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findByDevEuiAndEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByDevEuiAndEmail(dev_eui: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositories/cw_device_owners.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dev_eui\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(item: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:34\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:61\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:10\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:21\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number | string, item: Partial, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:47\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SupabaseService } from '../supabase/supabase.service';\nimport { Database } from 'database.types';\nimport { BaseRepository } from './base.repository';\n\ntype DeviceOwnerRow = Database['public']['Tables']['cw_device_owners']['Row'];\n\n@Injectable()\nexport class DeviceOwnerRepository extends BaseRepository {\n  constructor(supabaseService: SupabaseService) {\n    super(supabaseService, 'cw_device_owners');\n  }\n\n  public async findByDevEuiAndEmail(dev_eui: string, email: string): Promise {\n    const { data, error } = await this.supabaseService\n      .getSupabaseClient()\n      .from('cw_device_owners')\n      .select('*')\n      .eq('dev_eui', dev_eui)\n      .eq('email', email)\n      .single();\n    if (error) {\n      throw new Error(`Failed to find device owner with dev_eui ${dev_eui}: ${error.message}`);\n    }\n    if (!data) {\n      throw new Error(`Device owner with dev_eui ${dev_eui} not found.`);\n    }\n    return data as DeviceOwnerRow;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeviceRepository.html":{"url":"injectables/DeviceRepository.html","title":"injectable - DeviceRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeviceRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repositories/cw_devices.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findByDevEui\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(supabaseService: SupabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/repositories/cw_devices.repository.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        supabaseService\n                                                  \n                                                        \n                                                                        SupabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findByDevEui\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByDevEui(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositories/cw_devices.repository.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(item: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:34\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:61\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:10\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:21\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number | string, item: Partial, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:47\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SupabaseService } from '../supabase/supabase.service';\nimport { Database } from 'database.types';\nimport { BaseRepository } from './base.repository';\n\ntype DeviceRow = Database['public']['Tables']['cw_devices']['Row'];\n\n@Injectable()\nexport class DeviceRepository extends BaseRepository {\n    constructor(supabaseService: SupabaseService) {\n        super(supabaseService, 'cw_devices');\n    }\n\n    public async findByDevEui({ dev_eui }: { dev_eui: string }): Promise {\n        const { data, error } = await this.supabaseService\n            .getSupabaseClient()\n            .from('cw_devices')\n            .select('*')\n            .eq('dev_eui', dev_eui)\n            .single();\n        if (error) {\n            throw new Error(`Failed to find device with dev_eui ${dev_eui}: ${error.message}`);\n        }\n        if (!data) {\n            throw new Error(`Device with dev_eui ${dev_eui} not found.`);\n        }\n        return data as DeviceRow;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeviceTypeRepository.html":{"url":"injectables/DeviceTypeRepository.html","title":"injectable - DeviceTypeRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeviceTypeRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repositories/cw_device_type.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findByDeviceType\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(supabaseService: SupabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/repositories/cw_device_type.repository.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        supabaseService\n                                                  \n                                                        \n                                                                        SupabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findByDeviceType\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByDeviceType(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositories/cw_device_type.repository.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(item: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:34\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:61\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:10\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:21\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number | string, item: Partial, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:47\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SupabaseService } from '../supabase/supabase.service';\nimport { Database } from 'database.types';\nimport { BaseRepository } from './base.repository';\n\ntype DeviceTypeRow = Database['public']['Tables']['cw_device_type']['Row'];\n\n@Injectable()\nexport class DeviceTypeRepository extends BaseRepository {\n    constructor(supabaseService: SupabaseService) {\n        super(supabaseService, 'cw_device_type');\n    }\n\n    public async findByDeviceType({ dev_type }: { dev_type: string }): Promise {\n        const { data, error } = await this.supabaseService\n            .getSupabaseClient()\n            .from('cw_device_type')\n            .select('*')\n            .eq('dev_type', dev_type)\n            .single();\n        if (error) {\n            throw new Error(`Failed to find device type with dev_type ${dev_type}: ${error.message}`);\n        }\n        if (!data) {\n            throw new Error(`Device type with dev_type ${dev_type} not found.`);\n        }\n        return data as DeviceTypeRow;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FindAllParams.html":{"url":"interfaces/FindAllParams.html","title":"interface - FindAllParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FindAllParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/data.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            devEui\n                                        \n                                \n                                \n                                        \n                                            order\n                                        \n                                \n                                \n                                        \n                                            skip\n                                        \n                                \n                                \n                                        \n                                            take\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        devEui\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        devEui:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:     \"ASC\" | \"DESC\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"ASC\" | \"DESC\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        take\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        take:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Req } from '@nestjs/common';\nimport { CreateDatumDto } from './dto/create-datum.dto';\nimport { UpdateDatumDto } from './dto/update-datum.dto';\nimport { CwDevicesService } from 'src/cw_devices/cw_devices.service';\nimport { CwDeviceTypeService } from 'src/cw_device_type/cw_device_type.service';\nimport { Database } from 'database.types';\nimport { DataRepository } from 'src/repositories/data.repository';\nimport { CwDeviceOwnersService } from 'src/cw_device_owners/cw_device_owners.service';\n\n\ninterface FindAllParams {\n  devEui?: string;\n  skip: number;\n  take: number;\n  order: 'ASC' | 'DESC';\n}\n\n@Injectable()\nexport class DataService {\n  constructor(\n    private readonly deviceService: CwDevicesService,\n    private readonly deviceTypeService: CwDeviceTypeService,\n    private readonly deviceOwnerService: CwDeviceOwnersService,\n    private readonly dataRepository: DataRepository,\n  ) {}\n\n  create(createDatumDto: CreateDatumDto) {\n    return 'This action adds a new datum';\n  }\n\n  async findAll(params: FindAllParams, email: string) {\n    const { devEui, skip, take, order } = params;\n    if (!devEui) {\n      return 'DevEui is required';\n    }\n    const deviceOwner = await this.deviceOwnerService.getDeviceOwnerByDevEuiAndEmail(devEui, '');\n    if (!deviceOwner) {\n      return 'Device does not exist OR Device Owner not found';\n    }\n    const device = await this.deviceService.getDeviceByDevEui(devEui);\n    if (!device) {\n      return 'Device not found';\n    }\n    const deviceType = device.type;\n    if (!deviceType) {\n      return 'Device type not found';\n    }\n    const deviceTypeData = await this.deviceTypeService.findById(deviceType);\n    if (!deviceTypeData) {\n      return 'Device type data not found';\n    }\n    const data_table: string = deviceTypeData.data_table;\n    if (!data_table) {\n      return 'Data table not found';\n    }\n    //Data_table will contain the name of the datatable to query in the repo\n    const data = this.dataRepository.findAllByTable(data_table, devEui, skip, take, order == 'ASC' ? true : false);\n    return data;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} datum`;\n  }\n\n  update(id: number, updateDatumDto: UpdateDatumDto) {\n    return `This action updates a #${id} datum`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} datum`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GeolocationController.html":{"url":"controllers/GeolocationController.html","title":"controller - GeolocationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GeolocationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/geolocation/geolocation.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                geolocation\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getProtectedRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getProtectedRoute\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProtectedRoute()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('XYZ')@Get('address')@UseGuards(SupabaseAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/geolocation/geolocation.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { SupabaseAuthGuard } from 'src/auth/guards/supabase.guard';\nimport { GeolocationService } from './geolocation.service';\n\n@ApiTags('Addresses')\n@Controller('geolocation')\nexport class GeolocationController {\n    constructor(private readonly geoLocationService: GeolocationService) { }\n\n    @ApiBearerAuth('XYZ')\n    @Get('address')\n    @UseGuards(SupabaseAuthGuard)\n    async getProtectedRoute() {\n        const location = await this.geoLocationService.getGeolocation('45 huntington ave, boston, ma');\n        return { message: 'Geolocation fetched', location };\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GeolocationModule.html":{"url":"modules/GeolocationModule.html","title":"module - GeolocationModule","body":"\n                   \n\n\n\n\n    Modules\n    GeolocationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GeolocationModule\n\n\n\ncluster_GeolocationModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nGeolocationModule\n\nGeolocationModule\n\nGeolocationModule -->\n\nAuthService->GeolocationModule\n\n\n\n\n\nGeolocationService\n\nGeolocationService\n\nGeolocationModule -->\n\nGeolocationService->GeolocationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/geolocation/geolocation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            GeolocationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GeolocationController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GeolocationController } from './geolocation.controller';\nimport { GeolocationService } from './geolocation.service';\nimport { AuthService } from 'src/auth/auth.service';\n\n@Module({\n  controllers: [GeolocationController],\n  providers: [GeolocationService, AuthService]\n})\nexport class GeolocationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeolocationService.html":{"url":"injectables/GeolocationService.html","title":"injectable - GeolocationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GeolocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/geolocation/geolocation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getGeolocation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getGeolocation\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGeolocation(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/geolocation/geolocation.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class GeolocationService {\n\n    public async getGeolocation(address: string) {\n        const response = await fetch(`https://geocode.maps.co/search?q=${address}&api_key=${process.env.GEOCODING_API_KEY}`);\n        \n        if (!response.ok) {\n            throw new Error(`Error fetching geolocation: ${response.statusText}`);\n        }\n\n        const data = await response.json();\n        return data;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n                    \n                        \n                            Defined in src/health/health.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { HealthCheckService, HttpHealthIndicator, HealthCheck } from '@nestjs/terminus';\n\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.health.check([\n      () => this.http.pingCheck('nestjs-docs', 'https://docs.nestjs.com'),\n    ]);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HttpModule } from '@nestjs/axios';\nimport { HealthController } from './health.controller';\n\n@Module({\n  imports: [TerminusModule, HttpModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpCacheInterceptor.html":{"url":"injectables/HttpCacheInterceptor.html","title":"injectable - HttpCacheInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpCacheInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/http-cache.interceptor.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CacheInterceptor\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                trackBy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        trackBy\n                        \n                    \n                \n            \n            \n                \ntrackBy(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/http-cache.interceptor.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CacheInterceptor } from '@nestjs/cache-manager';\nimport { ExecutionContext, Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class HttpCacheInterceptor extends CacheInterceptor {\n  trackBy(context: ExecutionContext): string | undefined {\n    const request = context.switchToHttp().getRequest();\n    const { httpAdapter } = this.httpAdapterHost;\n\n    const isGetRequest = httpAdapter.getRequestMethod(request) === 'GET';\n    const excludePaths = [\n      // Routes to be excluded\n    ];\n    if (\n      !isGetRequest ||\n      (isGetRequest &&\n        excludePaths.includes(httpAdapter.getRequestUrl(request)))\n    ) {\n      return undefined;\n    }\n    return httpAdapter.getRequestUrl(request);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRepositoryBase.html":{"url":"interfaces/IRepositoryBase.html","title":"interface - IRepositoryBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRepositoryBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/repositoryBase.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        findAll\n                                    \n                                \n                                \n                                    \n                                        findOne\n                                    \n                                \n                                \n                                    \n                                        remove\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interfaces/repositoryBase.interface.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/interfaces/repositoryBase.interface.ts:3\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interfaces/repositoryBase.interface.ts:2\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interfaces/repositoryBase.interface.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interfaces/repositoryBase.interface.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface IRepositoryBase {\n  findOne(id: number): Promise;\n  findAll(): Promise;\n  create(entity: T): Promise;\n  update(id: number, entity: T): Promise;\n  remove(id: number): Promise;\n}\n\n\nexport interface RepositoryInterface {\n  findAll(): Promise;\n  findById(id: string): Promise;\n  create(entity: T): Promise;\n  update(id: string, entity: Partial): Promise;\n  delete(id: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/JwtAuthGuard.html":{"url":"guards/JwtAuthGuard.html","title":"guard - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/jwt-auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractTokenFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/jwt-auth.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt-auth.guard.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractTokenFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractTokenFromHeader(request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt-auth.guard.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\nimport { IS_PUBLIC_KEY } from '../public.decorator';\nimport { Reflector } from '@nestjs/core';\n\n\n@Injectable()\nexport class JwtAuthGuard implements CanActivate {\n    constructor(\n        private reflector: Reflector,\n        private authService: AuthService\n    ) { }\n\n    async canActivate(context: ExecutionContext): Promise {\n        const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n            context.getHandler(),\n            context.getClass(),\n        ]);\n        if (isPublic) {\n            // Skip guard if the endpoint is marked as public\n            return true;\n        }\n\n        const request = context.switchToHttp().getRequest();\n        const token = this.extractTokenFromHeader(request);\n        if (!token) {\n            throw new UnauthorizedException('Token not found');\n        }\n\n        try {\n            const user = await this.authService.validateUser(token);\n            request.user = user;  // Attach user to the request\n            return true;\n        } catch (error) {\n            throw new UnauthorizedException(error);\n        }\n    }\n\n    private extractTokenFromHeader(request): string | null {\n        const authHeader = request.headers.authorization;\n        if (!authHeader || !authHeader.startsWith('Bearer ')) {\n            return null;\n        }\n        return authHeader.split(' ')[1];\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Location.html":{"url":"classes/Location.html","title":"class - Location","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Location\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/entities/location.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Location {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LocationController.html":{"url":"controllers/LocationController.html","title":"controller - LocationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LocationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/location.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                location\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createLocationDto: CreateLocationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/location/location.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createLocationDto\n                                            \n                                                            CreateLocationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiResponse({status: 200, description: 'OK'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 402, description: 'Payment Required'})@ApiResponse({status: 403, description: 'Forbidden'})\n                \n            \n\n                    \n                        \n                            Defined in src/location/location.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiResponse({status: 200, description: 'OK'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 402, description: 'Payment Required'})@ApiResponse({status: 403, description: 'Forbidden'})\n                \n            \n\n                    \n                        \n                            Defined in src/location/location.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiResponse({status: 204, description: 'No Content'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 402, description: 'Payment Required'})@ApiResponse({status: 403, description: 'Forbidden'})\n                \n            \n\n                    \n                        \n                            Defined in src/location/location.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateLocationDto: UpdateLocationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/location/location.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateLocationDto\n                                            \n                                                            UpdateLocationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { LocationService } from './location.service';\nimport { CreateLocationDto } from './dto/create-location.dto';\nimport { UpdateLocationDto } from './dto/update-location.dto';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Locations')\n@Controller('location')\nexport class LocationController {\n  constructor(private readonly locationService: LocationService) { }\n\n  @Post()\n  create(@Body() createLocationDto: CreateLocationDto) {\n    return this.locationService.create(createLocationDto);\n  }\n\n  @Get()\n  @ApiResponse({ status: 200, description: 'OK' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 402, description: 'Payment Required' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  findAll() {\n    return this.locationService.findAll();\n  }\n\n  @Get(':id')\n  @ApiResponse({ status: 200, description: 'OK' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 402, description: 'Payment Required' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  findOne(@Param('id') id: string) {\n    return this.locationService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateLocationDto: UpdateLocationDto) {\n    return this.locationService.update(+id, updateLocationDto);\n  }\n\n  @Delete(':id')\n  @ApiResponse({ status: 204, description: 'No Content' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 402, description: 'Payment Required' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  remove(@Param('id') id: string) {\n    return this.locationService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocationModule.html":{"url":"modules/LocationModule.html","title":"module - LocationModule","body":"\n                   \n\n\n\n\n    Modules\n    LocationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_LocationModule_imports\n\n\n\n\nSupabaseModule\n\nSupabaseModule\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nSupabaseModule->LocationModule\n\n\n\n\n\nLocationRepository\n\nLocationRepository\n\nLocationModule -->\n\nLocationRepository->LocationModule\n\n\n\n\n\nLocationService\n\nLocationService\n\nLocationModule -->\n\nLocationService->LocationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/location/location.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LocationRepository\n                        \n                        \n                            LocationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LocationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SupabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LocationController } from './location.controller';\nimport { LocationService } from './location.service';\nimport { LocationRepository } from 'src/repositories/cw_location.repository';\nimport { SupabaseModule } from 'src/supabase/supabase.module';\n\n@Module({\n  imports: [SupabaseModule],\n  controllers: [LocationController],\n  providers: [\n    LocationService,\n    LocationRepository,\n  ],\n})\nexport class LocationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocationRepository.html":{"url":"injectables/LocationRepository.html","title":"injectable - LocationRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocationRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repositories/cw_location.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(supabaseService: SupabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/repositories/cw_location.repository.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        supabaseService\n                                                  \n                                                        \n                                                                        SupabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(item: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:34\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:61\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:10\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:21\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number | string, item: Partial, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:47\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SupabaseService } from '../supabase/supabase.service';\nimport { Database } from 'database.types';\nimport { BaseRepository } from './base.repository';\n\ntype LocationRow = Database['public']['Tables']['cw_locations']['Row'];\n\n@Injectable()\nexport class LocationRepository extends BaseRepository {\n  constructor(supabaseService: SupabaseService) {\n    super(supabaseService, 'cw_locations');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocationService.html":{"url":"injectables/LocationService.html","title":"injectable - LocationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/location.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(locationRepository: LocationRepository)\n                    \n                \n                        \n                            \n                                Defined in src/location/location.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        locationRepository\n                                                  \n                                                        \n                                                                        LocationRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createLocationDto: CreateLocationDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/location/location.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createLocationDto\n                                            \n                                                            CreateLocationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/location/location.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/location/location.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/location/location.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateLocationDto: UpdateLocationDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/location/location.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateLocationDto\n                                            \n                                                            UpdateLocationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateLocationDto } from './dto/create-location.dto';\nimport { UpdateLocationDto } from './dto/update-location.dto';\nimport { LocationRepository } from 'src/repositories/cw_location.repository';\n\n@Injectable()\nexport class LocationService {\n  constructor(private readonly locationRepository: LocationRepository) {}\n\n  create(createLocationDto: CreateLocationDto) {\n    return this.locationRepository.create(createLocationDto);\n  }\n\n  findAll() {\n    return this.locationRepository.findAll();\n  }\n\n  findOne(id: number) {\n    return this.locationRepository.findById(id);\n  }\n\n  update(id: number, updateLocationDto: UpdateLocationDto) {\n    return `This action updates a #${id} location`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} location`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/DTOs/userAuth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User email address'})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/DTOs/userAuth.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User password'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/DTOs/userAuth.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsEmail } from 'class-validator';\n\nexport class UserAuthDto {\n  @ApiProperty({ description: 'JWT authentication token' })\n  @IsString()\n  token: string;\n}\n\nexport class LoginDto {\n  @ApiProperty({ description: 'User email address' })\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({ description: 'User password' })\n  @IsString()\n  password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Profile.html":{"url":"classes/Profile.html","title":"class - Profile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Profile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profiles/entities/profile.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Profile {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileRepository.html":{"url":"injectables/ProfileRepository.html","title":"injectable - ProfileRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProfileRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repositories/profiles.repositories.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(supabaseService: SupabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/repositories/profiles.repositories.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        supabaseService\n                                                  \n                                                        \n                                                                        SupabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('XYZ')\n                \n            \n\n                    \n                        \n                            Defined in src/repositories/profiles.repositories.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Req } from '@nestjs/common';\nimport { SupabaseService } from '../supabase/supabase.service';\nimport { Database } from 'database.types';\nimport { ApiBearerAuth } from '@nestjs/swagger';\n\ntype ProfileRow = Database['public']['Tables']['profiles']['Row'];\n\n@Injectable()\nexport class ProfileRepository {\n  constructor(private readonly supabaseService: SupabaseService) {}\n\n  @ApiBearerAuth('XYZ')\n  async findById(id: string): Promise {\n    const {data: user, error: userError } = await this.supabaseService.getSupabaseClient().auth.getUser(id);\n    if (userError) {\n      throw userError;\n    }\n    const { data, error } = await this.supabaseService\n      .getSupabaseClient()\n      .from('profiles')\n      .select('*')\n      .eq('id', user.user.id)\n      .single();\n    if (error) {\n      throw error;\n    }\n    return data || null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfilesController.html":{"url":"controllers/ProfilesController.html","title":"controller - ProfilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profiles/profiles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                profiles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiBearerAuth('XYZ')\n                \n            \n\n                    \n                        \n                            Defined in src/profiles/profiles.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Req } from '@nestjs/common';\nimport { ProfilesService } from './profiles.service';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Profiles')\n@Controller('profiles')\nexport class ProfilesController {\n  constructor(private readonly profilesService: ProfilesService) {}\n  \n  @Get()\n  @ApiBearerAuth('XYZ')\n  findOne(@Req() req) {\n    const id = req.headers['authorization'];\n    return this.profilesService.findOne(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfilesModule.html":{"url":"modules/ProfilesModule.html","title":"module - ProfilesModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfilesModule\n\n\n\ncluster_ProfilesModule_providers\n\n\n\ncluster_ProfilesModule_imports\n\n\n\n\nSupabaseModule\n\nSupabaseModule\n\n\n\nProfilesModule\n\nProfilesModule\n\nProfilesModule -->\n\nSupabaseModule->ProfilesModule\n\n\n\n\n\nProfileRepository\n\nProfileRepository\n\nProfilesModule -->\n\nProfileRepository->ProfilesModule\n\n\n\n\n\nProfilesService\n\nProfilesService\n\nProfilesModule -->\n\nProfilesService->ProfilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/profiles/profiles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProfileRepository\n                        \n                        \n                            ProfilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfilesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SupabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProfilesService } from './profiles.service';\nimport { ProfilesController } from './profiles.controller';\nimport { SupabaseService } from 'src/supabase/supabase.service';\nimport { ProfileRepository } from 'src/repositories/profiles.repositories';\nimport { SupabaseModule } from 'src/supabase/supabase.module';\n\n@Module({\n  imports: [SupabaseModule],\n  controllers: [ProfilesController],\n  providers: [ProfilesService, ProfileRepository],\n})\nexport class ProfilesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfilesService.html":{"url":"injectables/ProfilesService.html","title":"injectable - ProfilesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProfilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profiles/profiles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profilesRepository: ProfileRepository)\n                    \n                \n                        \n                            \n                                Defined in src/profiles/profiles.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profilesRepository\n                                                  \n                                                        \n                                                                        ProfileRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/profiles/profiles.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Req } from '@nestjs/common';\nimport { CreateProfileDto } from './dto/create-profile.dto';\nimport { ProfileRepository } from 'src/repositories/profiles.repositories';\n\n@Injectable()\nexport class ProfilesService {\n  constructor(private readonly profilesRepository: ProfileRepository) {}\n  findOne(id: string) {\n    id = id.replace('Bearer ', '');\n    return this.profilesRepository.findById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RelayController.html":{"url":"controllers/RelayController.html","title":"controller - RelayController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RelayController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/relay/relay.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                relay\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getProtectedRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getProtectedRoute\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProtectedRoute(state: RelayState, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('control')@ApiQuery({name: 'state', enum: RelayState, description: 'Set the relay state to Open or Close'})@ApiResponse({status: 202, description: 'Action Queued'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 402, description: 'Payment Required'})@ApiResponse({status: 403, description: 'Forbidden'})\n                \n            \n\n                    \n                        \n                            Defined in src/relay/relay.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            RelayState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req, Query } from '@nestjs/common';\nimport { RelayService } from './relay.service';\nimport { ApiTags, ApiQuery, ApiResponse } from '@nestjs/swagger';\nimport { Public } from 'src/auth/public.decorator';\n\nenum RelayState {\n    Open = 'open (OFF)', // OFF\n    Close = 'close (ON)' // ON\n}\n\n@ApiTags('Relay - Automation')\n@Controller('relay')\nexport class RelayController {\n    constructor(private readonly relayService: RelayService) { }\n\n    @Public()\n    @Get('control')\n    @ApiQuery({\n        name: 'state',\n        enum: RelayState,\n        description: 'Set the relay state to Open or Close'\n    })\n    @ApiResponse({ status: 202, description: 'Action Queued' })\n    @ApiResponse({ status: 400, description: 'Bad Request' })\n    @ApiResponse({ status: 401, description: 'Unauthorized' })\n    @ApiResponse({ status: 402, description: 'Payment Required' })\n    @ApiResponse({ status: 403, description: 'Forbidden' })\n    async getProtectedRoute(@Query('state') state: RelayState, @Req() req) {\n        const relayOn = state === RelayState.Open;\n        const response = await this.relayService.sendDownlink(relayOn);\n        return { message: 'Relay state updated', response };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RelayModule.html":{"url":"modules/RelayModule.html","title":"module - RelayModule","body":"\n                   \n\n\n\n\n    Modules\n    RelayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RelayModule\n\n\n\ncluster_RelayModule_providers\n\n\n\n\nRelayService\n\nRelayService\n\n\n\nRelayModule\n\nRelayModule\n\nRelayModule -->\n\nRelayService->RelayModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/relay/relay.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RelayService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RelayController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RelayController } from './relay.controller';\nimport { RelayService } from './relay.service';\n\n@Module({\n  controllers: [RelayController],\n  providers: [RelayService]\n})\nexport class RelayModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RelayService.html":{"url":"injectables/RelayService.html","title":"injectable - RelayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RelayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/relay/relay.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hexToBase64\n                            \n                            \n                                    Public\n                                    Async\n                                sendDownlink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/relay/relay.service.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hexToBase64\n                        \n                    \n                \n            \n            \n                \n                        \n                    hexToBase64(hexString)\n                \n            \n\n\n                    \n                        \n                            Defined in src/relay/relay.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                hexString\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendDownlink\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendDownlink(state: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/relay/relay.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class RelayService {\n    constructor() {}\n    \n    public async sendDownlink(state: boolean) {\n        const appId = 'dragino-lt-22222';\n        const deviceId = 'dragino-test';\n        const accessKey = process.env.DRAGINO_API_KEY;\n    \n        const url = `${process.env.TTI_BASE_URL}/api/v3/as/applications/${appId}/devices/${deviceId}/down/replace`;\n        const onCommand = \"030011\";\n        const offCommand = \"030111\";\n        const command = state ? onCommand : offCommand;\n\n        const data = {\n            downlinks: [\n                {\n                    frm_payload: this.hexToBase64(command), // Base64-encoded payload\n                    f_port: 1, // Change as needed\n                    confirmed: true,\n                    priority: 'HIGH',\n                }\n            ]\n        };\n    \n        try {\n            const response = await fetch(url, {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${accessKey}`,\n                    'Content-Type': 'application/json',\n                    'User-Agent': 'my-integration/my-integration-version'\n                },\n                body: JSON.stringify(data)\n            });\n    \n            if (!response.ok) {\n                throw new Error(`Error sending downlink: ${response.statusText}`);\n            }\n    \n            const responseData = await response.json();\n            console.log('Downlink sent successfully:', responseData);\n            return responseData;\n        } catch (error) {\n            console.error('Error sending downlink:', error.message);\n        }\n    }\n\n    private hexToBase64(hexString) {\n        const bytes = new Uint8Array(hexString.match(/.{1,2}/g).map(byte => parseInt(byte, 16)));\n        return btoa(String.fromCharCode(...bytes));\n    }\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RepositoryInterface.html":{"url":"interfaces/RepositoryInterface.html","title":"interface - RepositoryInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RepositoryInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/repositoryBase.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        findAll\n                                    \n                                \n                                \n                                    \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interfaces/repositoryBase.interface.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interfaces/repositoryBase.interface.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/interfaces/repositoryBase.interface.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interfaces/repositoryBase.interface.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interfaces/repositoryBase.interface.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface IRepositoryBase {\n  findOne(id: number): Promise;\n  findAll(): Promise;\n  create(entity: T): Promise;\n  update(id: number, entity: T): Promise;\n  remove(id: number): Promise;\n}\n\n\nexport interface RepositoryInterface {\n  findAll(): Promise;\n  findById(id: string): Promise;\n  create(entity: T): Promise;\n  update(id: string, entity: Partial): Promise;\n  delete(id: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/SupabaseAuthGuard.html":{"url":"guards/SupabaseAuthGuard.html","title":"guard - SupabaseAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    SupabaseAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/supabase.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/supabase.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/supabase.guard.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { AuthService } from \"../auth.service\";\n\n// AuthGuard implementation using the AuthService\n// AuthGuard implementation using the AuthService\n@Injectable()\nexport class SupabaseAuthGuard implements CanActivate {\n  constructor(private authService: AuthService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    // const apiKey = request.headers['x-api-key'];\n    const authHeader = request.headers['authorization'];\n\n    // Check if API key is provided\n    // if (apiKey) {\n    //   const isValidApiKey = await this.authService.validateApiKey(apiKey);\n    //   if (!isValidApiKey) {\n    //     throw new UnauthorizedException('Invalid API key');\n    //   }\n    //   return true;\n    // }\n\n    // If no API key, check for Bearer token\n    if (!authHeader) {\n      throw new UnauthorizedException('Authorization header not found');\n    }\n\n    const token = authHeader.split(' ')[1];\n    if (!token) {\n      throw new UnauthorizedException('Invalid authorization token format');\n    }\n\n    const user = await this.authService.validateUser(token);\n    if (!user) {\n      throw new UnauthorizedException('User not found');\n    }\n\n    // Attach user to request object for use in subsequent controllers\n    request.user = user;\n    return true;\n  }\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SupabaseModule.html":{"url":"modules/SupabaseModule.html","title":"module - SupabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    SupabaseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SupabaseModule\n\n\n\ncluster_SupabaseModule_providers\n\n\n\ncluster_SupabaseModule_exports\n\n\n\n\nSupabaseService \n\nSupabaseService \n\n\n\nSupabaseModule\n\nSupabaseModule\n\nSupabaseService  -->\n\nSupabaseModule->SupabaseService \n\n\n\n\n\nSupabaseService\n\nSupabaseService\n\nSupabaseModule -->\n\nSupabaseService->SupabaseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/supabase/supabase.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SupabaseService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SupabaseService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // src/supabase/supabase.module.ts\nimport { Module } from '@nestjs/common';\nimport { SupabaseService } from './supabase.service';\n\n@Module({\n  providers: [SupabaseService],\n  exports: [SupabaseService], // Export so it can be used in other modules\n})\nexport class SupabaseModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SupabaseService.html":{"url":"injectables/SupabaseService.html","title":"injectable - SupabaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SupabaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/supabase/supabase.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                supabase\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSupabaseClient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/supabase/supabase.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSupabaseClient\n                        \n                    \n                \n            \n            \n                \ngetSupabaseClient()\n                \n            \n\n\n                    \n                        \n                            Defined in src/supabase/supabase.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     SupabaseClient\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        supabase\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SupabaseClient\n\n                    \n                \n                    \n                        \n                                Defined in src/supabase/supabase.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { createClient, SupabaseClient } from '@supabase/supabase-js';\nimport { Database } from 'database.types';\n\n@Injectable()\nexport class SupabaseService {\n    private supabase: SupabaseClient;\n\n    constructor(private configService: ConfigService) {\n        const supabaseUrl = this.configService.get('SUPABASE_URL');\n        const supabaseKey = this.configService.get('SUPABASE_KEY');\n\n        // Initialize Supabase client with version 2 package\n        this.supabase = createClient(supabaseUrl, supabaseKey);\n    }\n\n    getSupabaseClient(): SupabaseClient {\n        return this.supabase;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDatumDto.html":{"url":"classes/UpdateDatumDto.html","title":"class - UpdateDatumDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDatumDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/dto/update-datum.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateDatumDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateDatumDto } from './create-datum.dto';\n\nexport class UpdateDatumDto extends PartialType(CreateDatumDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDeviceDto.html":{"url":"classes/UpdateDeviceDto.html","title":"class - UpdateDeviceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDeviceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_devices/dto/update-device.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateDeviceDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateDeviceDto } from './create-device.dto';\n\nexport class UpdateDeviceDto extends PartialType(CreateDeviceDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDeviceOwnerDto.html":{"url":"classes/UpdateDeviceOwnerDto.html","title":"class - UpdateDeviceOwnerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDeviceOwnerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_device_owners/dto/update-device-owner.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateDeviceOwnerDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateDeviceOwnerDto } from './create-device-owner.dto';\n\nexport class UpdateDeviceOwnerDto extends PartialType(CreateDeviceOwnerDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDeviceTypeDto.html":{"url":"classes/UpdateDeviceTypeDto.html","title":"class - UpdateDeviceTypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDeviceTypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_device_type/dto/update-device-type.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateDeviceTypeDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateDeviceTypeDto } from './create-device-type.dto';\n\nexport class UpdateDeviceTypeDto extends PartialType(CreateDeviceTypeDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateLocationDto.html":{"url":"classes/UpdateLocationDto.html","title":"class - UpdateLocationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateLocationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/dto/update-location.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateLocationDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateLocationDto } from './create-location.dto';\n\nexport class UpdateLocationDto extends PartialType(CreateLocationDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileDto.html":{"url":"classes/UpdateProfileDto.html","title":"class - UpdateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profiles/dto/update-profile.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateProfileDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateProfileDto } from './create-profile.dto';\n\nexport class UpdateProfileDto extends PartialType(CreateProfileDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserAuthDto.html":{"url":"classes/UserAuthDto.html","title":"class - UserAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/DTOs/userAuth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'JWT authentication token'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/DTOs/userAuth.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsEmail } from 'class-validator';\n\nexport class UserAuthDto {\n  @ApiProperty({ description: 'JWT authentication token' })\n  @IsString()\n  token: string;\n}\n\nexport class LoginDto {\n  @ApiProperty({ description: 'User email address' })\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({ description: 'User password' })\n  @IsString()\n  password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        database.types.ts\n            \n            type alias\n            CompositeTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        database.types.ts\n            \n            type alias\n            Database\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        database.types.ts\n            \n            type alias\n            Enums\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        database.types.ts\n            \n            type alias\n            Json\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        database.types.ts\n            \n            type alias\n            PublicSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        database.types.ts\n            \n            type alias\n            Tables\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        database.types.ts\n            \n            type alias\n            TablesInsert\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        database.types.ts\n            \n            type alias\n            TablesUpdate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/DTOs/userAuth.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/DTOs/userAuth.dto.ts\n            \n            class\n            UserAuthDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            guard\n            JwtAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/guards/supabase.guard.ts\n            \n            guard\n            SupabaseAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/auth/public.decorator.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/public.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/bases/base.controller.ts\n            \n            class\n            BaseController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/bases/base.controller.ts\n            \n            interface\n            BaseServiceInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/bases/base.service.ts\n            \n            class\n            BaseService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/bases/base.service.ts\n            \n            interface\n            BaseServiceInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/http-cache.interceptor.ts\n            \n            injectable\n            HttpCacheInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cw_device_owners/cw_device_owners.controller.ts\n            \n            controller\n            CwDeviceOwnersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cw_device_owners/cw_device_owners.service.ts\n            \n            injectable\n            CwDeviceOwnersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/cw_device_owners/cw_device_owners.service.ts\n            \n            type alias\n            DeviceOwnerRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cw_device_owners/dto/create-device-owner.dto.ts\n            \n            class\n            CreateDeviceOwnerDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/cw_device_owners/dto/update-device-owner.dto.ts\n            \n            class\n            UpdateDeviceOwnerDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cw_device_type/cw_device_type.controller.ts\n            \n            controller\n            CwDeviceTypeController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/cw_device_type/cw_device_type.controller.ts\n            \n            type alias\n            DeviceTypeRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cw_device_type/cw_device_type.service.ts\n            \n            injectable\n            CwDeviceTypeService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/cw_device_type/cw_device_type.service.ts\n            \n            type alias\n            DeviceTypeRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cw_device_type/dto/create-device-type.dto.ts\n            \n            class\n            CreateDeviceTypeDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cw_device_type/dto/update-device-type.dto.ts\n            \n            class\n            UpdateDeviceTypeDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cw_devices/cw_devices.controller.ts\n            \n            controller\n            CwDevicesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/cw_devices/cw_devices.controller.ts\n            \n            type alias\n            DevicesRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cw_devices/cw_devices.service.ts\n            \n            injectable\n            CwDevicesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/cw_devices/cw_devices.service.ts\n            \n            type alias\n            DevicesRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cw_devices/dto/create-device.dto.ts\n            \n            class\n            CreateDeviceDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cw_devices/dto/update-device.dto.ts\n            \n            class\n            UpdateDeviceDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/data/data.controller.ts\n            \n            controller\n            DataController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/data/data.service.ts\n            \n            injectable\n            DataService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/data/data.service.ts\n            \n            interface\n            FindAllParams\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/data/dto/create-datum.dto.ts\n            \n            class\n            CreateDatumDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/data/dto/update-datum.dto.ts\n            \n            class\n            UpdateDatumDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/data/entities/datum.entity.ts\n            \n            class\n            Datum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/geolocation/geolocation.controller.ts\n            \n            controller\n            GeolocationController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/geolocation/geolocation.service.ts\n            \n            injectable\n            GeolocationService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interfaces/repositoryBase.interface.ts\n            \n            interface\n            IRepositoryBase\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/interfaces/repositoryBase.interface.ts\n            \n            interface\n            RepositoryInterface\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/location/dto/create-location.dto.ts\n            \n            class\n            CreateLocationDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/location/dto/update-location.dto.ts\n            \n            class\n            UpdateLocationDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/location/entities/location.entity.ts\n            \n            class\n            Location\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/location/location.controller.ts\n            \n            controller\n            LocationController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/location/location.service.ts\n            \n            injectable\n            LocationService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profiles/dto/create-profile.dto.ts\n            \n            class\n            CreateProfileDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/profiles/dto/update-profile.dto.ts\n            \n            class\n            UpdateProfileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profiles/entities/profile.entity.ts\n            \n            class\n            Profile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profiles/profiles.controller.ts\n            \n            controller\n            ProfilesController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/profiles/profiles.service.ts\n            \n            injectable\n            ProfilesService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/relay/relay.controller.ts\n            \n            controller\n            RelayController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/relay/relay.service.ts\n            \n            injectable\n            RelayService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/repositories/base.repository.ts\n            \n            class\n            BaseRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/repositories/cw_device_locations.repository.ts\n            \n            injectable\n            DeviceLocationRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/repositories/cw_device_locations.repository.ts\n            \n            type alias\n            DeviceLocationRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repositories/cw_device_owners.ts\n            \n            injectable\n            DeviceOwnerRepository\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/repositories/cw_device_owners.ts\n            \n            type alias\n            DeviceOwnerRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repositories/cw_device_type.repository.ts\n            \n            injectable\n            DeviceTypeRepository\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/repositories/cw_device_type.repository.ts\n            \n            type alias\n            DeviceTypeRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repositories/cw_devices.repository.ts\n            \n            injectable\n            DeviceRepository\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/repositories/cw_devices.repository.ts\n            \n            type alias\n            DeviceRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repositories/cw_location.repository.ts\n            \n            injectable\n            LocationRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/repositories/cw_location.repository.ts\n            \n            type alias\n            LocationRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repositories/data.repository.ts\n            \n            injectable\n            DataRepository\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/repositories/profiles.repositories.ts\n            \n            injectable\n            ProfileRepository\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/repositories/profiles.repositories.ts\n            \n            type alias\n            ProfileRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/supabase/supabase.service.ts\n            \n            injectable\n            SupabaseService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^3.1.1\n        \n            @nestjs/cache-manager : ^2.3.0\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.3.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.4.2\n        \n            @nestjs/terminus : ^10.2.3\n        \n            @nestjs/throttler : ^6.2.1\n        \n            @supabase/supabase-js : ^2.45.6\n        \n            axios : ^1.7.7\n        \n            cache-manager : ^5.7.6\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            helmet : ^8.0.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RelayState   (src/.../relay.controller.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/relay/relay.controller.ts\n    \n        \n            \n                \n                    \n                        \n                        RelayState\n                    \n                \n                        \n                            \n                                 Open\n                            \n                        \n                        \n                            \n                                Value : open (OFF)\n                            \n                        \n                        \n                            \n                                 Close\n                            \n                        \n                        \n                            \n                                Value : close (ON)\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CwDeviceOwnersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CwDevicesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CwDeviceTypeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GeolocationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RelayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SupabaseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_CwDeviceOwnersModule\n\n\n\ncluster_CwDeviceOwnersModule_providers\n\n\n\ncluster_CwDevicesModule\n\n\n\ncluster_CwDevicesModule_providers\n\n\n\ncluster_CwDeviceTypeModule\n\n\n\ncluster_CwDeviceTypeModule_providers\n\n\n\ncluster_DataModule\n\n\n\ncluster_DataModule_providers\n\n\n\ncluster_GeolocationModule\n\n\n\ncluster_GeolocationModule_providers\n\n\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_ProfilesModule\n\n\n\ncluster_ProfilesModule_providers\n\n\n\ncluster_RelayModule\n\n\n\ncluster_RelayModule_providers\n\n\n\ncluster_SupabaseModule\n\n\n\ncluster_SupabaseModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nCwDevicesModule\n\nCwDevicesModule\n\nCwDevicesModule -->\n\nAuthModule->CwDevicesModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCwDeviceTypeModule\n\nCwDeviceTypeModule\n\nCwDeviceTypeModule -->\n\nAuthModule->CwDeviceTypeModule\n\n\n\n\n\nCwDeviceOwnersModule\n\nCwDeviceOwnersModule\n\nAppModule -->\n\nCwDeviceOwnersModule->AppModule\n\n\n\nAppModule -->\n\nCwDevicesModule->AppModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nGeolocationModule\n\nGeolocationModule\n\nAppModule -->\n\nGeolocationModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nAppModule -->\n\nLocationModule->AppModule\n\n\n\n\n\nProfilesModule\n\nProfilesModule\n\nAppModule -->\n\nProfilesModule->AppModule\n\n\n\n\n\nRelayModule\n\nRelayModule\n\nAppModule -->\n\nRelayModule->AppModule\n\n\n\n\n\nSupabaseModule\n\nSupabaseModule\n\nCwDeviceOwnersModule -->\n\nSupabaseModule->CwDeviceOwnersModule\n\n\n\nCwDevicesModule -->\n\nSupabaseModule->CwDevicesModule\n\n\n\nLocationModule -->\n\nSupabaseModule->LocationModule\n\n\n\nProfilesModule -->\n\nSupabaseModule->ProfilesModule\n\n\n\nAppModule -->\n\nSupabaseModule->AppModule\n\n\n\nCwDeviceTypeModule -->\n\nSupabaseModule->CwDeviceTypeModule\n\n\n\n\n\nSupabaseService \n\nSupabaseService \n\nSupabaseService  -->\n\nSupabaseModule->SupabaseService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\nGeolocationModule -->\n\nAuthService->GeolocationModule\n\n\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nCwDeviceOwnersService\n\nCwDeviceOwnersService\n\nCwDeviceOwnersModule -->\n\nCwDeviceOwnersService->CwDeviceOwnersModule\n\n\n\nDataModule -->\n\nCwDeviceOwnersService->DataModule\n\n\n\n\n\nDeviceOwnerRepository\n\nDeviceOwnerRepository\n\nCwDeviceOwnersModule -->\n\nDeviceOwnerRepository->CwDeviceOwnersModule\n\n\n\nDataModule -->\n\nDeviceOwnerRepository->DataModule\n\n\n\n\n\nCwDevicesService\n\nCwDevicesService\n\nCwDevicesModule -->\n\nCwDevicesService->CwDevicesModule\n\n\n\nDataModule -->\n\nCwDevicesService->DataModule\n\n\n\n\n\nDeviceRepository\n\nDeviceRepository\n\nCwDevicesModule -->\n\nDeviceRepository->CwDevicesModule\n\n\n\nDataModule -->\n\nDeviceRepository->DataModule\n\n\n\n\n\nCwDeviceTypeService\n\nCwDeviceTypeService\n\nDataModule -->\n\nCwDeviceTypeService->DataModule\n\n\n\nCwDeviceTypeModule -->\n\nCwDeviceTypeService->CwDeviceTypeModule\n\n\n\n\n\nDeviceTypeRepository\n\nDeviceTypeRepository\n\nDataModule -->\n\nDeviceTypeRepository->DataModule\n\n\n\nCwDeviceTypeModule -->\n\nDeviceTypeRepository->CwDeviceTypeModule\n\n\n\n\n\nDataRepository\n\nDataRepository\n\nDataModule -->\n\nDataRepository->DataModule\n\n\n\n\n\nDataService\n\nDataService\n\nDataModule -->\n\nDataService->DataModule\n\n\n\n\n\nSupabaseService\n\nSupabaseService\n\nDataModule -->\n\nSupabaseService->DataModule\n\n\n\nSupabaseModule -->\n\nSupabaseService->SupabaseModule\n\n\n\n\n\nGeolocationService\n\nGeolocationService\n\nGeolocationModule -->\n\nGeolocationService->GeolocationModule\n\n\n\n\n\nLocationRepository\n\nLocationRepository\n\nLocationModule -->\n\nLocationRepository->LocationModule\n\n\n\n\n\nLocationService\n\nLocationService\n\nLocationModule -->\n\nLocationService->LocationModule\n\n\n\n\n\nProfileRepository\n\nProfileRepository\n\nProfilesModule -->\n\nProfileRepository->ProfilesModule\n\n\n\n\n\nProfilesService\n\nProfilesService\n\nProfilesModule -->\n\nProfilesService->ProfilesModule\n\n\n\n\n\nRelayService\n\nRelayService\n\nRelayModule -->\n\nRelayService->RelayModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    19 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    20 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CompositeTypes   (database.types.ts)\n                        \n                        \n                            Database   (database.types.ts)\n                        \n                        \n                            DeviceLocationRow   (src/.../cw_device_locations.repository.ts)\n                        \n                        \n                            DeviceOwnerRow   (src/.../cw_device_owners.service.ts)\n                        \n                        \n                            DeviceOwnerRow   (src/.../cw_device_owners.ts)\n                        \n                        \n                            DeviceRow   (src/.../cw_devices.repository.ts)\n                        \n                        \n                            DevicesRow   (src/.../cw_devices.controller.ts)\n                        \n                        \n                            DevicesRow   (src/.../cw_devices.service.ts)\n                        \n                        \n                            DeviceTypeRow   (src/.../cw_device_type.controller.ts)\n                        \n                        \n                            DeviceTypeRow   (src/.../cw_device_type.service.ts)\n                        \n                        \n                            DeviceTypeRow   (src/.../cw_device_type.repository.ts)\n                        \n                        \n                            Enums   (database.types.ts)\n                        \n                        \n                            Json   (database.types.ts)\n                        \n                        \n                            LocationRow   (src/.../cw_location.repository.ts)\n                        \n                        \n                            ProfileRow   (src/.../profiles.repositories.ts)\n                        \n                        \n                            PublicSchema   (database.types.ts)\n                        \n                        \n                            Tables   (database.types.ts)\n                        \n                        \n                            TablesInsert   (database.types.ts)\n                        \n                        \n                            TablesUpdate   (database.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    database.types.ts\n    \n    \n        \n            \n                \n                    \n                    CompositeTypes\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Database\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Enums\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Json\n                \n            \n            \n                \n                            string | number | boolean | null | literal type | Json[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PublicSchema\n                \n            \n            \n                \n                            Database\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Tables\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TablesInsert\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TablesUpdate\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/repositories/cw_device_locations.repository.ts\n    \n    \n        \n            \n                \n                    \n                    DeviceLocationRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/cw_device_owners/cw_device_owners.service.ts\n    \n    \n        \n            \n                \n                    \n                    DeviceOwnerRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/repositories/cw_device_owners.ts\n    \n    \n        \n            \n                \n                    \n                    DeviceOwnerRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/repositories/cw_devices.repository.ts\n    \n    \n        \n            \n                \n                    \n                    DeviceRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/cw_devices/cw_devices.controller.ts\n    \n    \n        \n            \n                \n                    \n                    DevicesRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/cw_devices/cw_devices.service.ts\n    \n    \n        \n            \n                \n                    \n                    DevicesRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/cw_device_type/cw_device_type.controller.ts\n    \n    \n        \n            \n                \n                    \n                    DeviceTypeRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/cw_device_type/cw_device_type.service.ts\n    \n    \n        \n            \n                \n                    \n                    DeviceTypeRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/repositories/cw_device_type.repository.ts\n    \n    \n        \n            \n                \n                    \n                    DeviceTypeRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/repositories/cw_location.repository.ts\n    \n    \n        \n            \n                \n                    \n                    LocationRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/repositories/profiles.repositories.ts\n    \n    \n        \n            \n                \n                    \n                    ProfileRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            IS_PUBLIC_KEY   (src/.../public.decorator.ts)\n                        \n                        \n                            Public   (src/.../public.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
