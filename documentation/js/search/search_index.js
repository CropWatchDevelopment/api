var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.207,1,3.049]],["body/controllers/AppController.html",[0,1.797,1,4.541,2,1.329,3,0.143,4,0.143,5,0.129,6,4.143,7,0.478,8,1.102,9,1.671,10,6.432,11,1.504,12,0.012,13,4.734,14,3.754,15,0.623,16,4.734,17,0.841,18,2.873,19,0.377,20,3.754,21,0.559,22,2.728,23,2.379,24,1.458,25,4.143,26,4.734,27,3.463,28,3.463,29,5.432,30,3.463,31,2.482,32,4.734,33,4.734,34,6.206,35,4.734,36,4.734,37,0.143,38,0.133,39,1.329,40,2.282,41,3.754,42,3.766,43,3.754,44,4.143,45,0.982,46,1.414,47,0.789,48,4.734,49,4.734,50,0.008,51,0.008]],["title/modules/AppModule.html",[52,1.135,53,3.049]],["body/modules/AppModule.html",[1,3.829,2,1.215,3,0.086,4,0.086,5,0.078,12,0.012,19,0.402,21,0.336,27,2.083,28,2.083,30,2.083,37,0.086,38,0.08,41,2.258,43,3.431,50,0.006,51,0.006,52,1.426,53,6.147,54,1.139,55,1.18,56,1.269,57,1.269,58,1.18,59,2.333,60,1.269,61,2.492,62,2.492,63,2.492,64,3.815,65,4.249,66,4.018,67,4.249,68,4.519,69,4.519,70,4.519,71,4.519,72,4.519,73,4.519,74,4.249,75,3.327,76,3.327,77,1.929,78,1.269,79,1.269,80,4.326,81,2.27,82,2.847,83,1.943,84,2.492,85,2.847,86,2.847,87,2.258,88,2.847,89,2.847,90,2.847,91,4.326,92,2.847,93,5.233,94,2.258,95,2.847,96,3.829,97,2.847,98,2.847,99,2.847,100,2.847,101,2.847,102,2.847,103,2.847,104,2.847,105,2.847,106,2.847,107,2.847,108,2.847,109,2.847,110,2.847,111,4.326,112,2.626,113,2.847,114,2.847,115,2.847,116,2.847,117,2.847,118,2.258,119,2.847,120,2.847,121,2.847,122,2.847,123,0.824,124,2.258,125,2.492,126,4.326,127,4.326,128,2.847,129,2.847,130,1.943]],["title/injectables/AppService.html",[131,0.629,132,3.305]],["body/injectables/AppService.html",[3,0.176,4,0.176,5,0.158,7,0.587,8,1.253,10,6.927,12,0.012,15,0.764,17,1.03,19,0.287,21,0.685,37,0.176,38,0.163,45,1.204,50,0.01,51,0.01,131,1.066,132,5.598,133,1.903,134,5.079,135,5.803,136,1.42,137,5.803,138,5.803]],["title/controllers/AuthController.html",[0,1.207,139,3.049]],["body/controllers/AuthController.html",[0,1.227,2,0.778,3,0.084,4,0.084,5,0.076,7,0.28,8,0.753,9,1.581,11,1.347,12,0.012,14,2.198,15,0.558,17,0.753,18,2.572,19,0.337,21,0.327,22,1.597,23,1.393,24,0.854,29,3.71,30,2.028,31,1.695,37,0.084,38,0.078,40,1.336,41,2.198,42,1.682,43,2.198,44,2.426,45,0.879,46,0.828,47,0.706,50,0.006,51,0.006,76,2.586,139,3.101,140,2.426,141,1.336,142,2.771,143,3.361,144,7.478,145,2.771,146,2.771,147,3.7,148,3.55,149,4.239,150,3.499,151,3.499,152,2.721,153,3.499,154,2.721,155,3.499,156,3.499,157,2.721,158,3.499,159,4.239,160,5.765,161,3.025,162,0.678,163,4.799,164,4.239,165,2.771,166,1.035,167,0.777,168,2.701,169,2.771,170,2.771,171,2.771,172,2.771,173,2.771,174,2.771,175,2.198,176,1.454,177,1.522,178,5.618,179,1.779,180,2.771,181,2.771,182,2.028,183,2.426,184,2.771,185,2.198,186,2.966,187,2.198,188,2.198,189,2.771,190,1.001,191,1.682,192,2.771,193,2.198,194,5.55,195,4.239,196,2.572,197,2.894,198,2.443,199,3.101,200,2.771,201,2.771,202,2.771,203,2.771,204,2.771,205,2.771,206,2.426,207,2.426,208,2.771,209,2.771,210,3.361,211,2.426,212,2.771,213,2.426,214,2.771,215,2.771,216,0.938,217,2.426,218,1.035,219,2.771,220,2.771,221,2.771,222,1.779,223,2.771]],["title/modules/AuthModule.html",[52,1.135,64,2.402]],["body/modules/AuthModule.html",[2,1.84,3,0.156,4,0.156,5,0.14,12,0.012,19,0.357,21,0.608,37,0.156,38,0.145,50,0.009,51,0.009,52,1.964,54,2.06,55,2.134,56,2.296,57,2.296,58,2.134,59,3.214,60,3.214,64,4.69,76,4.26,77,2.922,78,2.296,79,2.296,139,5.274,182,3.768,224,4.507,225,4.507,226,5.15,227,5.15,228,5.15]],["title/injectables/AuthService.html",[76,2.094,131,0.629]],["body/injectables/AuthService.html",[3,0.086,4,0.086,5,0.078,7,0.288,8,0.768,9,1.753,12,0.012,15,0.828,17,0.929,19,0.259,21,0.336,37,0.086,38,0.08,39,1.215,45,1.085,47,0.974,50,0.006,51,0.006,76,2.174,83,1.943,131,0.653,133,0.934,136,1.535,161,1.494,162,0.828,166,1.176,167,1.071,186,2.493,216,1.979,217,3.787,218,1.955,222,2.777,229,2.492,230,1.793,231,3.299,232,5.502,233,4.326,234,4.326,235,4.326,236,2.492,237,5.25,238,4.326,239,4.326,240,5.25,241,2.847,242,3.752,243,1.803,244,4.326,245,2.847,246,3.431,247,4.326,248,2.847,249,4.58,250,2.258,251,2.083,252,2.258,253,2.847,254,2.847,255,2.847,256,2.492,257,2.258,258,2.258,259,4.326,260,2.492,261,2.492,262,3.787,263,2.492,264,2.258,265,2.492,266,1.943,267,2.258,268,2.083,269,3.787,270,2.492,271,3.431,272,4.326,273,1.728,274,2.492,275,3.431,276,2.333,277,3.72,278,2.847,279,2.844,280,2.486,281,4.326,282,2.847,283,3.431,284,2.847,285,2.847,286,2.847,287,2.953,288,3.99,289,2.847,290,2.847,291,2.847,292,2.492,293,2.847,294,2.847,295,4.326,296,2.847,297,1.641,298,2.847,299,2.847,300,2.847,301,1.641,302,3.431,303,2.847,304,2.847,305,4.326,306,2.847,307,2.847,308,2.847,309,2.847]],["title/classes/BaseController.html",[38,0.117,310,2.529]],["body/classes/BaseController.html",[3,0.101,4,0.101,5,0.091,7,0.336,8,0.863,9,1.692,11,1.544,12,0.012,15,0.755,17,0.863,19,0.24,20,2.637,21,0.393,24,1.024,37,0.147,38,0.093,39,0.934,45,1.007,47,0.809,50,0.007,51,0.007,124,2.637,147,3.118,148,3.565,150,3.83,151,3.83,152,3.118,153,3.83,154,3.118,155,3.83,156,3.83,157,3.118,158,3.83,162,0.639,166,0.977,167,0.89,176,1.745,177,2.668,178,5.704,190,1.201,194,5.629,196,2.948,197,3.316,198,2.8,199,3.554,243,1.91,280,1.755,310,2.948,311,1.057,312,2.637,313,1.721,314,2.133,315,3.325,316,3.83,317,3.325,318,3.852,319,2.433,320,3.523,321,3.554,322,3.316,323,2.948,324,2.433,325,3.554,326,2.433,327,3.325,328,2.433,329,2.433,330,3.325,331,4.199,332,1.483,333,1.916,334,1.057,335,2.91,336,3.554,337,2.91,338,2.91,339,1.826,340,2.27,341,2.91]],["title/classes/BaseRepository.html",[38,0.117,342,2.094]],["body/classes/BaseRepository.html",[3,0.084,4,0.084,5,0.075,7,0.279,8,0.75,9,1.889,12,0.012,15,0.861,17,1.101,19,0.137,37,0.084,38,0.078,39,1.187,40,2.476,45,1.193,46,2.263,47,1.033,50,0.006,51,0.006,123,2.084,136,1.609,162,0.816,166,1.247,167,1.136,211,2.416,216,2.1,218,2.316,231,1.449,243,2.001,276,3.131,277,4.107,279,2.664,297,3.316,301,2.959,311,0.877,313,1.084,314,1.828,334,1.343,339,3.16,342,2.124,343,2.416,344,1.984,345,1.885,346,1.69,347,1.516,348,2.71,349,4.494,350,2.761,351,2.565,352,3.287,353,2.761,354,1.816,355,4.369,356,2.761,357,2.58,358,2.761,359,1.751,360,2.761,361,1.579,362,2.761,363,1.516,364,3.764,365,3.574,366,6.201,367,5.135,368,1.676,369,2.761,370,2.761]],["title/classes/BaseService.html",[38,0.117,371,2.402]],["body/classes/BaseService.html",[3,0.111,4,0.111,5,0.1,7,0.37,8,0.924,9,1.981,12,0.012,15,0.953,17,1.237,19,0.181,37,0.158,38,0.103,39,1.027,45,1.445,46,1.808,47,1.161,50,0.007,51,0.007,123,2.244,162,0.917,166,1.402,167,1.277,243,2.187,311,1.162,313,1.334,314,2.215,316,3.675,320,3.314,332,1.631,333,4.016,334,1.162,342,3.314,344,2.01,345,2.32,346,2.081,352,1.838,354,2.235,359,2.156,361,1.943,371,2.998,372,2.901,373,3.807,374,3.658,375,3.658,376,4.126,377,3.887,378,3.658,379,3.658,380,3.658,381,3.658,382,4.233,383,3.658,384,3.201,385,3.201,386,1.2,387,3.201,388,3.201,389,3.201,390,3.201,391,3.201,392,3.201]],["title/interfaces/BaseServiceInterface.html",[316,2.529,332,1.858]],["body/interfaces/BaseServiceInterface.html",[3,0.12,4,0.12,5,0.108,7,0.401,9,1.329,12,0.012,19,0.272,20,3.144,21,0.468,24,1.221,37,0.167,38,0.111,45,1.142,50,0.007,51,0.007,124,3.144,147,2.545,148,3.433,150,3.342,151,3.342,153,3.342,155,3.342,156,3.342,158,3.342,162,0.725,176,2.08,177,3.024,178,5.907,190,1.432,194,5.847,196,3.342,197,3.759,198,3.173,199,4.028,230,2.281,243,1.862,271,5.42,280,1.432,310,2.406,312,3.144,313,1.841,314,2.282,316,3.839,318,3.144,320,3.179,322,2.706,323,2.406,331,4.628,332,1.768,333,2.285,334,1.26,335,3.47,336,4.028,337,3.47,338,3.47,339,2.177,340,2.706,341,3.47,393,2.545]],["title/interfaces/BaseServiceInterface-1.html",[42,2.109,316,2.109,332,1.55]],["body/interfaces/BaseServiceInterface-1.html",[3,0.137,4,0.137,5,0.123,7,0.456,8,1.068,9,1.813,12,0.012,15,0.792,17,1.068,19,0.223,37,0.182,38,0.127,45,1.558,47,0.752,50,0.008,51,0.008,123,1.959,162,0.594,166,0.908,167,0.827,243,2.21,313,1.542,314,2.387,316,4.105,320,3.625,332,2.013,333,3.898,334,1.435,342,3.022,352,2.269,354,1.94,359,1.871,361,1.686,371,2.602,372,3.58,373,3.303,376,3.58,377,4.341,382,3.861,384,3.951,385,3.951,386,1.481,387,3.951,388,3.951,389,3.951,390,3.951,391,3.951,392,3.951,393,2.898,394,4.515,395,4.515]],["title/classes/CreateDatumDto.html",[38,0.117,396,2.529]],["body/classes/CreateDatumDto.html",[3,0.194,4,0.194,5,0.175,12,0.011,37,0.194,38,0.18,50,0.01,51,0.01,311,2.038,396,4.547,397,5.613,398,5.086]],["title/classes/CreateDeviceDto.html",[38,0.117,399,2.675]],["body/classes/CreateDeviceDto.html",[3,0.141,4,0.141,5,0.127,7,0.469,11,2.41,12,0.012,15,0.998,19,0.23,37,0.141,38,0.172,47,1.143,50,0.008,51,0.008,123,1.775,136,1.621,162,1.061,230,2.539,311,1.476,399,3.933,400,6.816,401,3.683,402,3.953,403,6.003,404,4.163,405,4.682,406,4.644,407,4.644,408,4.644,409,3.683,410,4.644,411,4.644,412,4.999,413,4.484,414,4.164,415,2.437]],["title/classes/CreateDeviceOwnerDto.html",[38,0.117,416,2.675]],["body/classes/CreateDeviceOwnerDto.html",[3,0.145,4,0.145,5,0.131,7,0.485,11,2.347,12,0.012,15,0.972,19,0.237,37,0.145,38,0.176,50,0.009,51,0.009,123,2.139,136,1.486,162,0.972,230,2.593,311,1.524,402,4.016,404,4.229,405,4.017,409,4.964,412,4.918,413,5.098,414,3.826,415,2.516,416,4.017,417,6.706,418,2.96,419,3.803,420,6.098,421,6.968,422,4.796,423,4.796,424,4.796,425,4.796]],["title/classes/CreateDeviceTypeDto.html",[38,0.117,426,2.675]],["body/classes/CreateDeviceTypeDto.html",[3,0.163,4,0.163,5,0.146,7,0.543,11,2.14,12,0.011,15,0.886,19,0.266,37,0.163,38,0.189,47,1.225,50,0.009,51,0.009,136,1.55,148,3.159,162,0.886,230,2.79,311,1.709,405,4.322,412,4.719,414,4.038,415,2.821,418,2.841,426,4.322,427,6.435,428,4.264,429,5.377,430,5.377]],["title/classes/CreateLocationDto.html",[38,0.117,431,2.675]],["body/classes/CreateLocationDto.html",[3,0.122,4,0.122,5,0.11,7,0.407,11,2.374,12,0.012,15,0.983,19,0.199,37,0.122,38,0.157,47,1.063,50,0.008,51,0.008,123,2.163,136,1.502,148,2.741,162,0.983,167,1.469,230,2.307,311,1.281,368,4.866,405,2.587,412,3.574,413,4.074,414,3.78,415,2.115,420,5.585,431,3.574,432,6.701,433,3.196,434,6.381,435,6.381,436,6.381,437,4.874,438,4.03,439,4.03,440,4.03,441,4.03,442,4.03,443,4.03,444,4.03,445,4.03,446,4.03,447,6.538,448,5.569,449,5.569]],["title/classes/CreateProfileDto.html",[38,0.117,450,2.845]],["body/classes/CreateProfileDto.html",[3,0.095,4,0.095,5,0.086,7,0.318,11,2.448,12,0.012,15,1.014,19,0.156,37,0.095,38,0.131,46,1.66,50,0.006,51,0.006,136,1.657,162,1.014,167,1.51,230,1.932,242,3.567,311,1,368,4.954,405,2.02,412,2.994,414,4.099,415,1.651,437,6.016,447,6.742,450,3.184,451,6.824,452,2.495,453,5.557,454,5.557,455,5.557,456,5.557,457,5.557,458,5.557,459,5.557,460,5.557,461,5.557,462,3.413,463,3.147,464,3.147,465,3.147,466,3.147,467,3.147,468,3.147,469,3.147,470,3.147,471,3.147,472,3.147,473,3.147,474,3.147,475,3.147,476,3.147,477,3.147,478,4.664,479,3.699,480,5.557]],["title/classes/CreateReportTemplateDto.html",[38,0.117,481,2.845]],["body/classes/CreateReportTemplateDto.html",[3,0.141,4,0.141,5,0.127,7,0.469,11,2.41,12,0.012,15,0.998,19,0.23,37,0.141,38,0.172,47,1.143,50,0.008,51,0.008,123,1.775,136,1.621,162,1.061,230,2.539,311,1.476,402,3.953,403,6.003,404,4.163,405,4.682,409,3.683,412,4.999,413,4.484,414,4.164,415,2.437,481,4.183,482,6.816,483,3.683,484,4.644,485,4.644,486,4.644,487,4.644,488,4.644]],["title/controllers/CwDeviceOwnersController.html",[0,1.207,489,3.049]],["body/controllers/CwDeviceOwnersController.html",[0,0.907,2,0.88,3,0.095,4,0.095,5,0.085,7,0.317,8,0.826,11,2.082,12,0.012,15,0.862,17,1.163,19,0.324,21,0.37,23,1.574,24,0.965,37,0.095,38,0.088,45,1.359,46,2.226,47,1.022,50,0.006,51,0.006,123,2.159,141,1.511,162,0.807,166,1.234,167,1.124,176,2.44,177,2.553,190,1.132,273,1.902,280,1.68,313,1.573,314,1.949,331,5.021,334,0.996,336,4.793,340,2.139,344,2.142,346,2.453,361,1.17,416,4.405,418,3.069,489,3.402,490,4.069,491,2.485,492,6.133,493,2.822,494,3.402,495,3.133,496,5.734,497,3.133,498,3.133,499,3.133,500,3.133,501,1.806,502,5.198,503,3.133,504,3.133,505,2.011,506,3.133,507,3.133,508,4.982,509,3.133,510,3.133,511,2.139,512,2.139,513,3.044,514,2.742,515,1.452,516,3.687,517,1.721,518,3.133,519,3.133,520,2.485,521,3.133,522,3.133,523,2.485,524,3.133,525,2.292,526,2.485,527,2.485,528,3.133,529,2.742,530,2.742,531,3.133,532,3.133,533,2.742,534,2.742,535,3.133,536,2.742,537,2.742,538,3.133]],["title/modules/CwDeviceOwnersModule.html",[52,1.135,65,2.675]],["body/modules/CwDeviceOwnersModule.html",[2,1.703,3,0.138,4,0.138,5,0.125,12,0.012,19,0.373,21,0.54,37,0.138,38,0.128,50,0.008,51,0.008,52,1.854,54,1.828,55,1.894,56,2.038,57,2.038,58,1.894,59,3.035,60,3.035,65,5.313,75,3.896,77,2.704,78,2.038,79,2.038,81,3.182,87,3.625,318,3.625,376,3.625,489,4.98,513,4.577,514,4.001,539,4.001,540,4.001,541,4.001,542,4.571,543,4.706,544,6.065,545,4.571,546,3.625,547,4.571]],["title/injectables/CwDeviceOwnersService.html",[131,0.629,513,2.289]],["body/injectables/CwDeviceOwnersService.html",[3,0.104,4,0.104,5,0.094,7,0.348,8,0.885,9,1.934,12,0.012,15,0.963,17,1.26,19,0.351,21,0.406,31,2.341,37,0.104,38,0.097,39,0.967,45,0.714,46,1.748,47,1.182,50,0.007,51,0.007,123,2.055,131,0.752,133,1.129,136,1.427,162,0.963,166,1.427,167,1.3,190,1.244,243,1.994,313,1.277,314,1.86,320,2.503,333,3.374,334,1.094,344,1.925,345,2.221,346,1.992,354,1.479,359,1.426,361,1.286,371,4.319,377,2.21,382,3.197,386,1.634,404,3.893,416,2.21,418,1.925,508,2.35,513,2.736,515,1.595,516,3.95,517,1.891,543,4.307,546,2.73,548,2.73,549,4.981,550,3.443,551,3.443,552,4.981,553,3.443,554,1.806,555,3.154,556,2.519,557,2.519,558,2.519,559,2.519,560,2.519,561,1.286,562,1.377,563,2.519,564,2.519,565,3.013,566,3.443,567,3.443]],["title/controllers/CwDeviceTypeController.html",[0,1.207,568,3.049]],["body/controllers/CwDeviceTypeController.html",[0,1.173,2,1.138,3,0.123,4,0.123,5,0.11,7,0.41,8,0.993,9,1.665,11,1.776,12,0.012,15,0.736,17,0.993,19,0.37,21,0.478,23,2.036,24,1.248,37,0.123,38,0.114,47,0.675,50,0.008,51,0.008,141,1.954,147,2.601,148,3.448,150,3.393,151,3.393,152,3.588,153,3.393,154,3.588,155,3.393,156,3.393,157,3.588,158,3.393,162,0.953,166,0.815,167,0.743,243,1.523,280,1.464,310,4.187,313,1.641,314,2.034,319,2.965,320,3.216,321,4.09,322,2.766,323,2.459,324,2.965,325,4.09,326,2.965,328,2.965,329,2.965,386,1.833,418,2.473,426,2.601,491,3.214,515,1.878,527,3.214,555,2.59,561,1.514,562,1.621,568,4.09,569,3.214,570,3.214,571,3.214,572,3.214,573,3.214,574,2.933,575,3.547,576,2.766,577,3.214,578,4.052,579,4.052,580,4.052]],["title/modules/CwDeviceTypeModule.html",[52,1.135,581,2.675]],["body/modules/CwDeviceTypeModule.html",[2,1.675,3,0.135,4,0.135,5,0.122,12,0.012,19,0.381,21,0.527,37,0.135,38,0.125,50,0.008,51,0.008,52,1.831,54,1.784,55,1.848,56,1.989,57,1.989,58,1.848,59,2.998,60,2.998,64,4.437,75,3.869,77,2.66,78,1.989,79,1.989,81,3.13,568,4.919,574,4.356,575,3.903,581,5.361,582,3.903,583,4.46,584,3.903,585,3.903,586,4.673,587,4.46,588,4.46,589,3.263,590,3.903,591,3.537]],["title/injectables/CwDeviceTypeService.html",[131,0.629,574,2.187]],["body/injectables/CwDeviceTypeService.html",[3,0.105,4,0.105,5,0.095,7,0.351,8,0.891,9,1.937,12,0.012,15,0.966,17,1.264,19,0.352,21,0.41,31,2.354,37,0.105,38,0.098,39,0.976,45,0.721,46,1.757,47,1.186,50,0.007,51,0.007,123,2.061,131,0.757,133,1.14,136,1.184,162,0.966,166,1.432,167,1.305,190,1.256,243,1.999,313,1.286,314,1.87,320,2.52,333,3.392,334,1.104,344,1.938,345,2.236,346,2.006,354,1.493,359,1.44,361,1.298,371,4.33,377,2.231,382,3.219,386,1.645,418,1.938,426,2.231,515,1.61,517,1.909,555,3.166,556,2.543,557,2.543,558,2.543,559,2.543,560,2.543,561,1.298,562,1.39,563,2.543,573,3.978,574,2.632,576,2.372,577,2.756,586,4.32,591,2.756,592,2.756,593,5.015,594,3.475,595,3.475,596,5.015,597,3.475,598,5.015,599,2.543,600,3.475,601,3.475,602,3.042]],["title/controllers/CwDevicesController.html",[0,1.207,603,3.049]],["body/controllers/CwDevicesController.html",[0,1.124,2,1.09,3,0.118,4,0.118,5,0.106,7,0.392,8,0.963,9,1.634,11,1.724,12,0.012,15,0.714,17,0.963,19,0.365,21,0.458,22,2.236,23,1.95,24,1.195,37,0.118,38,0.109,47,0.646,50,0.007,51,0.007,141,1.871,147,2.491,148,3.418,150,3.292,151,3.292,152,3.482,153,3.292,154,3.482,155,3.292,156,3.292,157,3.482,158,3.292,162,0.714,166,0.78,167,0.711,176,2.036,177,2.131,185,3.077,191,2.355,243,1.478,273,2.355,280,1.402,287,3.703,288,3.703,310,4.109,313,1.603,314,1.987,319,2.839,320,3.142,321,3.969,322,2.649,323,2.355,324,2.839,325,3.969,326,2.839,328,2.839,329,2.839,344,1.499,386,1.779,399,2.491,418,1.499,491,3.077,511,2.649,512,2.649,515,1.798,520,3.077,523,3.077,526,4.302,527,3.077,555,2.513,561,1.45,562,1.552,570,3.077,571,3.077,572,3.077,603,3.969,604,3.077,605,2.726,606,3.396,607,3.396,608,3.077,609,2.839,610,3.077,611,3.396,612,3.396,613,3.88,614,3.88,615,3.88,616,3.88]],["title/modules/CwDevicesModule.html",[52,1.135,66,2.529]],["body/modules/CwDevicesModule.html",[2,1.675,3,0.135,4,0.135,5,0.122,12,0.012,19,0.381,21,0.527,37,0.135,38,0.125,50,0.008,51,0.008,52,1.831,54,1.784,55,1.848,56,1.989,57,1.989,58,1.848,59,2.998,60,2.998,64,4.437,66,5.069,75,3.869,77,2.66,78,1.989,79,1.989,81,3.13,84,3.903,87,3.537,603,4.919,605,4.172,606,3.903,617,3.903,618,4.46,619,3.903,620,3.903,621,4.673,622,5.966,623,4.46,624,3.537]],["title/injectables/CwDevicesService.html",[131,0.629,605,2.094]],["body/injectables/CwDevicesService.html",[3,0.106,4,0.106,5,0.095,7,0.353,8,0.894,9,1.939,12,0.012,15,0.967,17,1.266,19,0.353,21,0.412,31,2.36,37,0.106,38,0.098,39,0.981,45,0.724,46,1.762,47,1.188,50,0.007,51,0.007,123,2.065,131,0.76,133,1.145,136,1.187,162,0.967,166,1.434,167,1.307,190,1.262,243,2.002,313,1.29,314,1.875,320,2.529,333,3.401,334,1.11,344,1.945,345,2.244,346,2.013,354,1.5,359,1.447,361,1.304,371,4.335,377,2.241,382,3.23,386,1.651,399,2.241,402,2.012,515,1.618,517,1.918,554,2.641,555,3.172,556,2.555,557,2.555,558,2.555,559,2.555,560,2.555,561,1.304,562,1.397,563,2.555,605,2.529,608,3.991,609,2.555,610,2.769,621,4.327,624,2.769,625,2.769,626,5.033,627,3.492,628,3.492,629,5.033,630,3.492,631,2.555,632,3.492,633,3.492]],["title/controllers/DataController.html",[0,1.207,634,3.049]],["body/controllers/DataController.html",[0,0.728,2,0.706,3,0.076,4,0.076,5,0.069,7,0.254,8,0.698,11,1.538,12,0.012,15,0.637,17,0.86,19,0.337,21,0.297,22,1.449,23,1.264,24,1.211,37,0.076,38,0.071,39,0.706,40,2.864,45,1.306,46,1.635,47,1.096,50,0.005,51,0.005,118,3.839,123,2.146,136,1.491,141,1.212,148,2.925,162,0.96,166,0.974,167,0.887,168,2.872,176,2.063,177,2.658,185,1.994,191,1.526,197,1.716,198,3.925,213,2.201,231,2.54,273,1.526,276,2.808,313,1.008,314,1.538,331,2.876,334,1.538,336,1.84,340,1.716,344,0.972,357,1.264,396,3.822,418,1.87,493,2.386,496,2.201,501,1.449,511,1.716,512,1.716,515,1.165,517,1.381,520,1.994,523,1.994,526,1.994,529,3.441,530,2.201,533,2.201,534,2.201,536,2.201,537,2.201,554,3.304,574,2.063,605,1.976,634,2.876,635,2.201,636,1.994,637,2.514,638,2.514,639,4.371,640,4.299,641,4.649,642,4.814,643,4.341,644,4.791,645,3.931,646,2.514,647,5.4,648,3.441,649,3.931,650,3.931,651,2.514,652,5.474,653,2.514,654,2.514,655,3.931,656,3.931,657,2.514,658,2.514,659,2.514,660,3.839,661,2.514,662,1.716,663,2.658,664,2.201,665,2.876,666,3.513,667,5.199,668,1.84,669,1.716,670,2.514,671,2.514,672,2.514,673,1.994,674,1.994,675,2.514,676,2.514,677,2.201,678,2.514,679,2.514,680,2.514,681,2.201,682,2.514,683,2.514,684,2.514,685,2.514]],["title/modules/DataModule.html",[52,1.135,67,2.675]],["body/modules/DataModule.html",[2,1.38,3,0.102,4,0.102,5,0.092,12,0.012,19,0.395,21,0.399,37,0.102,38,0.095,50,0.007,51,0.007,52,1.578,54,1.351,55,1.4,56,1.507,57,1.507,58,1.4,59,2.583,60,2.583,66,4.279,67,5.457,77,2.191,78,1.507,79,1.507,81,2.579,348,2.921,513,3.872,543,4.279,546,2.68,574,3.699,581,4.525,586,4.279,591,2.68,605,3.543,621,4.279,624,2.68,634,4.238,663,4.344,664,2.957,668,2.472,669,2.307,686,2.957,687,3.379,688,2.957,689,2.957,690,4.8,691,3.379,692,3.379,693,2.68,694,2.957,695,2.68,696,2.957,697,2.957,698,3.379]],["title/injectables/DataRepository.html",[131,0.629,690,2.529]],["body/injectables/DataRepository.html",[3,0.106,4,0.106,5,0.095,7,0.352,8,0.892,9,1.72,12,0.012,15,0.776,17,0.892,19,0.249,21,0.411,31,2.85,37,0.106,38,0.098,39,0.978,42,2.114,45,1.042,46,2.128,47,0.982,50,0.007,51,0.007,123,2.218,131,0.759,133,1.142,136,1.54,162,0.9,166,1.375,167,1.08,190,1.259,216,1.701,218,1.877,243,1.757,276,3.049,277,3.385,279,2.158,280,1.815,297,2.896,301,2.008,334,1.107,347,1.913,348,2.952,349,5.646,363,1.913,364,3.049,365,2.896,368,2.114,462,4.312,554,3.385,639,4.14,640,4.403,641,4.403,644,3.049,690,3.049,699,3.049,700,5.024,701,5.024,702,3.483,703,5.024,704,3.483,705,3.984,706,5.024,707,3.483,708,5.024,709,2.549,710,3.483,711,3.483,712,3.483,713,3.43,714,3.43,715,3.225,716,3.049,717,2.378,718,3.483]],["title/injectables/DataService.html",[131,0.629,663,2.289]],["body/injectables/DataService.html",[3,0.078,4,0.078,5,0.07,7,0.261,8,0.712,9,1.188,12,0.012,15,0.838,17,1.068,19,0.34,21,0.305,37,0.122,38,0.073,39,1.127,45,1.425,46,1.47,47,1.107,50,0.005,51,0.005,112,1.566,123,2.127,131,0.606,133,0.846,136,1.209,161,3.155,162,0.904,166,1.28,167,1.167,168,1.354,198,1.487,216,2.25,218,1.839,231,2.913,242,3.563,243,1.093,276,2.195,279,2.115,280,2.606,313,1.029,314,1.275,332,1.151,334,1.764,346,1.605,361,1.499,396,3.649,418,1.902,493,2.435,494,2.936,501,2.312,502,1.888,505,2.575,513,3.049,515,1.196,517,1.417,554,2.913,561,0.964,562,1.032,574,2.913,605,2.79,636,3.182,639,3.159,640,3.36,641,3.36,642,2.936,643,2.047,647,2.047,662,1.762,663,2.203,665,2.936,666,4.265,668,1.888,669,1.762,673,3.182,674,3.903,690,4.032,693,2.047,695,2.047,714,1.762,719,2.047,720,2.581,721,4.308,722,2.581,723,2.581,724,3.512,725,4.062,726,2.581,727,3.512,728,2.581,729,2.581,730,2.581,731,2.259,732,2.259,733,2.259,734,5.263,735,2.259,736,3.512,737,2.259,738,2.259,739,2.259,740,2.259,741,4.308,742,3.512,743,2.259,744,3.512,745,2.259,746,4.308,747,2.259,748,2.259,749,2.259,750,2.259,751,2.259,752,2.259]],["title/classes/Datum.html",[38,0.117,753,3.305]],["body/classes/Datum.html",[3,0.195,4,0.195,5,0.175,12,0.011,37,0.195,38,0.181,50,0.01,51,0.01,311,2.047,753,5.957,754,5.638]],["title/injectables/DeviceLocationRepository.html",[131,0.629,755,3.305]],["body/injectables/DeviceLocationRepository.html",[3,0.109,4,0.109,5,0.098,7,0.363,8,0.912,9,1.89,12,0.012,15,0.948,17,1.229,19,0.324,21,0.424,37,0.109,38,0.101,39,1.01,40,2.892,46,2.15,47,1.153,50,0.007,51,0.007,123,2.085,131,0.776,133,1.179,136,1.61,162,0.948,166,1.392,167,1.269,243,1.886,313,1.318,314,1.906,339,3.294,342,3.809,344,1.986,345,2.291,346,2.055,347,2.822,348,2.868,351,2.182,352,3.288,354,1.544,355,4.37,357,3.014,359,1.489,361,1.343,363,1.974,386,1.685,555,3.208,561,1.343,562,1.438,755,4.075,756,2.851,757,3.595,758,2.307,759,2.307,760,2.307,761,2.307,762,2.307,763,2.307,764,2.851,765,3.595,766,2.307,767,3.595]],["title/injectables/DeviceOwnerRepository.html",[131,0.629,543,2.529]],["body/injectables/DeviceOwnerRepository.html",[3,0.092,4,0.092,5,0.083,7,0.307,8,0.808,9,1.889,12,0.012,15,0.926,17,1.205,19,0.299,21,0.359,31,2.179,37,0.092,38,0.085,39,0.854,40,2.626,45,0.631,46,2.027,47,1.131,50,0.006,51,0.006,123,1.966,131,0.687,133,0.998,136,1.634,161,1.596,162,0.926,166,1.365,167,1.244,216,1.03,218,1.136,243,1.917,276,2.429,277,2.387,279,1.954,280,1.643,297,1.753,301,1.753,313,1.166,314,1.731,339,2.991,342,3.635,344,1.757,345,2.028,346,1.819,347,2.498,348,2.681,351,1.846,352,3.037,354,1.307,355,4.12,357,2.737,359,1.26,361,1.136,363,1.671,364,1.846,365,1.753,386,1.492,402,3.913,404,3.668,418,1.175,502,3.328,543,2.76,555,2.998,561,1.136,562,1.217,564,3.328,565,2.662,709,2.226,713,2.077,715,1.953,717,2.077,758,1.953,759,1.953,760,1.953,761,1.953,762,1.953,763,1.953,766,1.953,768,2.412,769,4.548,770,3.042,771,4.548,772,3.042,773,3.042,774,3.042,775,3.042,776,2.226]],["title/injectables/DeviceRepository.html",[131,0.629,621,2.529]],["body/injectables/DeviceRepository.html",[3,0.093,4,0.093,5,0.084,7,0.31,8,0.813,9,1.892,12,0.012,15,0.929,17,1.209,19,0.3,21,0.362,31,2.189,37,0.093,38,0.086,39,0.862,40,2.639,45,0.636,46,2.034,47,1.134,50,0.006,51,0.006,123,1.972,131,0.691,133,1.006,136,1.577,161,1.61,162,0.976,166,1.37,167,1.248,216,1.039,218,1.146,243,1.922,276,2.441,277,2.401,279,1.966,280,1.654,297,1.768,301,1.768,313,1.173,314,1.74,339,3.006,342,3.644,344,1.768,345,2.041,346,1.83,347,2.513,348,2.69,351,1.862,352,3.05,354,1.318,355,4.133,357,2.751,359,1.271,361,1.146,363,1.685,364,1.862,365,1.768,386,1.501,402,4.066,418,1.185,555,3.009,561,1.146,562,1.227,610,2.433,621,2.778,709,2.244,713,2.094,715,1.969,717,2.094,758,1.969,759,1.969,760,1.969,761,1.969,762,1.969,763,1.969,766,1.969,776,2.244,777,2.433,778,4.791,779,3.067,780,2.685,781,3.349,782,3.067,783,3.349,784,3.067,785,3.067]],["title/injectables/DeviceTypeRepository.html",[131,0.629,586,2.529]],["body/injectables/DeviceTypeRepository.html",[3,0.093,4,0.093,5,0.083,7,0.309,8,0.81,9,1.891,12,0.012,15,0.928,17,1.207,19,0.3,21,0.361,31,2.184,37,0.093,38,0.086,39,0.858,40,2.633,45,0.634,46,2.03,47,1.133,50,0.006,51,0.006,123,1.969,131,0.689,133,1.002,136,1.576,161,1.603,162,1.007,166,1.368,167,1.246,216,1.034,218,1.141,243,1.92,276,2.435,277,2.394,279,1.96,280,1.648,297,1.761,301,1.761,313,1.17,314,1.735,339,2.999,342,3.64,344,1.763,345,2.034,346,1.825,347,2.505,348,2.686,351,1.854,352,3.044,354,1.312,355,4.127,357,2.744,359,1.266,361,1.141,363,1.678,364,1.854,365,1.761,386,1.496,418,1.18,555,3.003,561,1.141,562,1.222,576,3.114,577,2.423,586,2.769,602,6.167,713,2.085,715,1.961,717,2.085,758,1.961,759,1.961,760,1.961,761,1.961,762,1.961,763,1.961,766,1.961,776,2.235,781,3.338,786,2.423,787,5.46,788,3.055,789,3.055,790,3.055,791,3.055,792,3.055,793,3.055]],["title/interfaces/FindAllParams.html",[332,1.858,725,3.049]],["body/interfaces/FindAllParams.html",[3,0.09,4,0.09,5,0.081,7,0.301,9,0.719,12,0.012,19,0.356,21,0.352,37,0.136,38,0.084,39,0.837,45,1.491,47,0.496,50,0.006,51,0.006,112,1.809,123,2.13,131,0.676,136,1.29,161,3.365,162,0.887,167,0.821,168,1.564,198,1.718,216,2.366,218,2.01,230,1.856,231,3.139,242,2.875,243,0.812,276,2.399,279,2.311,280,2.707,332,1.329,334,1.901,361,1.113,393,1.913,396,2.718,418,2.079,501,1.718,502,2.18,505,1.913,513,2.459,515,1.381,517,1.637,554,3.667,561,1.113,562,1.192,574,2.35,605,2.251,636,2.363,639,4.324,640,4.599,641,4.599,642,4.377,643,4.267,647,2.363,662,2.034,663,1.637,665,3.277,666,3.453,668,2.18,669,2.034,673,2.363,674,2.363,690,3.265,693,2.363,695,2.363,714,2.034,719,2.363,721,2.608,724,2.608,725,3.937,727,2.608,731,2.608,732,2.608,733,2.608,734,5.613,735,2.608,736,3.92,737,2.608,738,2.608,739,2.608,740,2.608,741,4.709,742,3.92,743,2.608,744,3.92,745,2.608,746,4.709,747,2.608,748,2.608,749,2.608,750,2.608,751,2.608,752,2.608]],["title/controllers/GeolocationController.html",[0,1.207,794,3.049]],["body/controllers/GeolocationController.html",[0,1.393,2,1.351,3,0.146,4,0.146,5,0.131,7,0.486,8,1.114,9,1.684,11,1.529,12,0.012,15,0.633,17,0.854,18,2.92,19,0.366,21,0.568,22,2.773,23,2.418,24,1.482,37,0.146,38,0.135,45,0.998,50,0.009,51,0.009,141,2.32,143,5.865,168,2.525,175,3.816,179,3.088,190,1.738,191,2.92,193,3.816,210,3.816,216,1.629,218,1.797,334,1.529,794,4.589,795,4.211,796,5.49,797,4.811,798,4.811,799,4.211,800,4.479,801,4.211,802,4.811,803,4.811,804,4.811,805,4.026,806,4.811,807,4.811,808,4.811,809,4.811,810,4.811,811,4.811,812,4.811,813,4.811,814,4.811,815,4.811]],["title/modules/GeolocationModule.html",[52,1.135,68,2.845]],["body/modules/GeolocationModule.html",[2,1.828,3,0.154,4,0.154,5,0.139,12,0.012,19,0.374,21,0.602,37,0.154,38,0.143,50,0.009,51,0.009,52,1.954,54,2.038,55,2.111,56,2.272,57,2.272,58,2.111,59,3.198,60,2.272,68,5.611,76,4.013,77,2.903,78,2.272,79,2.272,794,5.248,800,5.126,801,4.46,816,4.46,817,4.46,818,5.096,819,5.096,820,4.46]],["title/injectables/GeolocationService.html",[131,0.629,800,2.675]],["body/injectables/GeolocationService.html",[3,0.156,4,0.156,5,0.14,7,0.521,8,1.164,9,1.74,12,0.012,15,0.678,17,0.914,18,3.125,19,0.255,21,0.608,31,2.883,37,0.156,38,0.145,45,1.068,47,0.858,50,0.009,51,0.009,131,0.99,133,1.689,136,1.45,162,0.678,166,1.036,167,0.944,216,2.219,218,2.448,276,2.922,279,2.212,280,1.861,796,4.507,800,4.206,821,4.507,822,6.553,823,6.553,824,5.15,825,4.084,826,3.768,827,5.15,828,4.507,829,4.507,830,5.15,831,4.507,832,4.507]],["title/controllers/HealthController.html",[0,1.207,833,3.049]],["body/controllers/HealthController.html",[0,1.529,2,1.483,3,0.16,4,0.16,5,0.144,7,0.534,8,1.182,11,1.678,12,0.012,15,0.695,17,0.938,19,0.329,21,0.623,37,0.16,38,0.148,39,1.483,45,1.095,50,0.009,51,0.009,141,2.546,231,3.493,833,4.871,834,4.621,835,6.657,836,6.072,837,5.28,838,5.28,839,6.657,840,6.657,841,6.657,842,4.187,843,5.28,844,5.28,845,5.28,846,5.28,847,5.28,848,5.28]],["title/modules/HealthModule.html",[52,1.135,69,2.845]],["body/modules/HealthModule.html",[2,1.963,3,0.173,4,0.173,5,0.156,12,0.012,19,0.389,21,0.674,37,0.173,38,0.161,50,0.01,51,0.01,52,1.905,54,2.285,69,4.773,81,2.997,833,5.528,842,4.53,849,5.712,850,6.991,851,6.991,852,5,853,5.712]],["title/injectables/HttpCacheInterceptor.html",[131,0.629,854,3.305]],["body/injectables/HttpCacheInterceptor.html",[3,0.142,4,0.142,5,0.128,7,0.475,8,1.097,12,0.012,14,5.474,15,0.619,17,0.835,19,0.306,21,0.555,25,6.041,27,3.441,28,3.441,37,0.142,38,0.132,45,1.282,47,0.784,50,0.008,51,0.008,131,0.933,133,1.542,136,1.243,162,0.619,166,0.946,167,0.862,196,2.854,216,2.482,251,5.363,386,2.027,854,4.901,855,5.409,856,4.116,857,6.18,858,6.18,859,4.703,860,3.73,861,3.73,862,4.703,863,4.703,864,6.902,865,4.703,866,4.703,867,4.703,868,4.703,869,4.703,870,4.703]],["title/interfaces/IRepositoryBase.html",[332,1.858,871,3.049]],["body/interfaces/IRepositoryBase.html",[3,0.129,4,0.129,5,0.116,7,0.43,8,1.026,12,0.011,15,0.969,17,1.307,37,0.175,46,1.959,47,1.173,50,0.008,51,0.008,123,2.32,136,1.32,162,0.927,166,1.416,167,1.29,243,2.284,313,1.481,314,2.339,332,2.576,346,2.311,352,2.137,354,1.827,359,1.762,361,2.451,393,2.729,493,3.506,494,4.227,501,3.33,505,3.708,705,6.16,871,4.227,872,3.372,873,5.743,874,4.252,875,6.443,876,4.252,877,4.252,878,4.252,879,4.252,880,3.111]],["title/guards/JwtAuthGuard.html",[96,3.049,130,2.845]],["body/guards/JwtAuthGuard.html",[3,0.097,4,0.097,5,0.088,7,0.325,8,0.842,9,1.359,12,0.012,15,0.741,17,0.842,19,0.307,21,0.38,31,1.286,37,0.097,38,0.09,39,1.331,42,1.952,45,1.373,47,0.938,50,0.006,51,0.006,76,3.6,94,2.55,96,3.468,112,3.416,130,2.195,131,0.716,136,0.953,161,1.687,162,0.624,166,1.132,167,1.031,182,2.353,183,2.815,186,3.58,196,3.769,216,2.426,218,1.77,222,3.613,231,3.475,243,1.291,246,3.759,250,4.926,251,4.544,252,2.55,264,2.55,275,2.55,277,1.687,279,2.418,280,2.034,283,2.55,287,4.24,288,4.24,292,2.815,302,2.55,368,3.416,373,2.353,639,2.064,836,2.55,860,2.55,861,2.55,881,2.55,882,5.436,883,2.815,884,4.739,885,3.216,886,6.928,887,3.216,888,4.148,889,3.216,890,4.739,891,3.216,892,2.55,893,4.148,894,3.216,895,3.216,896,3.216,897,3.216,898,3.216,899,4.148,900,2.55,901,2.815,902,4.926,903,2.815,904,3.216,905,3.216,906,3.216,907,2.55,908,3.216,909,3.216,910,2.815,911,2.815,912,3.216,913,4.148,914,3.216,915,3.216,916,2.815]],["title/classes/Location.html",[38,0.117,805,2.675]],["body/classes/Location.html",[3,0.195,4,0.195,5,0.175,12,0.011,37,0.195,38,0.181,50,0.01,51,0.01,311,2.047,805,4.821,917,5.638]],["title/controllers/LocationController.html",[0,1.207,918,3.049]],["body/controllers/LocationController.html",[0,1.133,2,1.099,3,0.119,4,0.119,5,0.107,7,0.395,8,0.969,9,1.64,11,1.733,12,0.012,15,0.718,17,0.969,19,0.366,21,0.462,23,1.966,24,1.205,37,0.119,38,0.11,45,0.811,47,0.652,50,0.007,51,0.007,141,1.886,147,2.511,148,3.424,150,3.31,151,3.31,152,3.501,153,3.31,154,3.501,155,3.31,156,3.31,157,3.501,158,3.31,162,0.718,166,0.787,167,0.717,176,2.053,177,2.995,190,1.413,243,1.486,280,1.413,310,4.124,313,1.61,314,1.996,319,2.862,320,3.156,321,3.991,322,2.67,323,2.374,324,2.862,325,3.991,326,2.862,328,2.862,329,2.862,334,1.243,340,2.67,344,1.511,386,1.789,431,4.031,511,2.67,512,2.67,515,1.812,555,2.527,561,1.461,562,1.565,570,3.102,571,3.102,572,3.102,805,2.511,918,3.991,919,3.102,920,4.031,921,3.424,922,3.102,923,3.102,924,3.424,925,3.912,926,3.912,927,3.912,928,3.912]],["title/modules/LocationModule.html",[52,1.135,70,2.845]],["body/modules/LocationModule.html",[2,1.762,3,0.146,4,0.146,5,0.131,12,0.012,19,0.379,21,0.568,37,0.146,38,0.135,50,0.009,51,0.009,52,1.901,54,1.924,55,1.994,56,2.145,57,2.145,58,1.994,59,3.112,60,2.145,70,5.656,75,3.952,77,2.797,78,2.145,79,2.145,81,3.291,589,3.52,918,5.106,920,5.048,921,4.211,929,4.211,930,4.211,931,4.811,932,5.048,933,4.811,934,4.811,935,4.211]],["title/injectables/LocationRepository.html",[131,0.629,932,2.675]],["body/injectables/LocationRepository.html",[3,0.109,4,0.109,5,0.098,7,0.363,8,0.912,9,1.89,12,0.012,15,0.948,17,1.229,19,0.324,21,0.424,37,0.109,38,0.101,39,1.01,40,2.892,46,2.15,47,1.153,50,0.007,51,0.007,123,2.085,131,0.776,133,1.179,136,1.61,162,0.948,166,1.392,167,1.269,243,1.886,313,1.318,314,1.906,339,3.294,342,3.809,344,1.986,345,2.291,346,2.055,347,2.822,348,2.868,351,2.182,352,3.288,354,1.544,355,4.37,357,3.014,359,1.489,361,1.343,363,1.974,386,1.685,555,3.208,561,1.343,562,1.438,758,2.307,759,2.307,760,2.307,761,2.307,762,2.307,763,2.307,766,2.307,924,3.146,932,3.298,936,2.851,937,3.595,938,2.851,939,3.595]],["title/injectables/LocationService.html",[131,0.629,920,2.675]],["body/injectables/LocationService.html",[3,0.116,4,0.116,5,0.105,7,0.388,8,0.956,12,0.012,15,0.969,17,1.26,19,0.333,21,0.453,37,0.116,38,0.108,39,1.078,45,1.472,46,2.119,47,1.182,50,0.007,51,0.007,123,2.269,131,0.813,133,1.259,136,1.083,162,0.934,166,1.427,167,1.301,190,1.387,313,1.381,314,2.142,334,1.22,346,2.154,361,2.011,431,4.555,493,3.268,494,3.94,501,3.103,505,3.456,515,1.779,517,2.109,805,3.456,920,3.456,922,4.27,932,4.722,935,3.361,940,3.361,941,3.84,942,3.84,943,5.384,944,3.84,945,3.84,946,3.84,947,3.84,948,5.528,949,3.84,950,3.84,951,3.84,952,3.84,953,4.713,954,3.84,955,3.84]],["title/classes/LoginDto.html",[38,0.117,163,2.845]],["body/classes/LoginDto.html",[3,0.148,4,0.148,5,0.133,7,0.494,11,2.015,12,0.012,15,0.835,19,0.314,24,1.507,37,0.192,38,0.198,50,0.009,51,0.009,136,1.551,148,3.022,162,0.835,163,4.328,186,4.289,187,3.879,222,4.07,230,2.627,240,5.902,242,4.949,273,2.969,311,1.555,414,3.863,415,2.567,479,5.028,825,3.879,956,3.879,957,5.028,958,4.892,959,4.892,960,4.892,961,4.892,962,5.902,963,3.579]],["title/controllers/PdfController.html",[0,1.207,964,3.049]],["body/controllers/PdfController.html",[0,1.193,2,1.157,3,0.125,4,0.125,5,0.154,7,0.417,8,1.004,9,1.558,11,1.31,12,0.012,15,0.542,17,0.732,19,0.36,21,0.487,22,2.375,23,2.842,24,1.269,37,0.125,38,0.116,47,0.686,50,0.008,51,0.008,136,1.298,141,1.987,162,0.744,166,0.829,167,0.755,168,3.82,175,3.268,176,2.162,179,2.645,190,1.489,191,2.501,193,3.268,216,1.915,218,1.539,243,1.54,287,4.743,288,4.407,323,3.918,334,1.31,404,2.501,554,3.646,607,3.607,611,3.607,612,4.949,662,2.813,677,3.607,799,3.607,826,5.083,964,4.137,965,3.607,966,6.456,967,6.456,968,4.121,969,4.121,970,4.121,971,4.121,972,6.948,973,4.121,974,3.607,975,4.144,976,3.607,977,4.121,978,4.121,979,4.121,980,4.121,981,4.121,982,4.121,983,4.121,984,4.121,985,4.121,986,4.121,987,4.121,988,4.121,989,4.121]],["title/classes/PdfDTO.html",[38,0.117,990,3.305]],["body/classes/PdfDTO.html",[3,0.165,4,0.165,5,0.148,7,0.55,11,1.728,12,0.012,15,0.716,19,0.335,24,1.675,37,0.165,38,0.191,50,0.009,51,0.009,136,1.364,148,2.336,162,0.716,230,2.81,311,1.728,414,3.724,415,2.853,418,2.62,554,3.878,648,5.935,957,4.312,962,5.377,990,5.377,991,4.758,992,6.781,993,6.781,994,5.935,995,5.437,996,5.437]],["title/modules/PdfModule.html",[52,1.135,71,2.845]],["body/modules/PdfModule.html",[2,1.443,3,0.109,4,0.109,5,0.098,12,0.012,19,0.402,21,0.424,37,0.109,38,0.101,50,0.007,51,0.007,52,1.634,54,1.438,55,1.489,56,1.603,57,1.603,58,1.489,59,2.674,60,1.603,65,4.622,66,4.37,67,4.622,71,5.755,74,4.622,76,3.618,77,2.291,78,1.603,79,1.603,81,2.696,581,4.622,605,1.806,663,4.238,669,2.454,696,3.146,697,3.146,820,3.146,964,4.388,975,4.622,976,3.146,997,3.146,998,3.146,999,3.595,1000,3.595,1001,3.595,1002,3.595,1003,3.146,1004,3.146,1005,3.146,1006,3.146,1007,3.146,1008,3.595,1009,3.595,1010,2.072,1011,3.146,1012,3.595,1013,3.595,1014,3.595,1015,3.595,1016,3.146]],["title/injectables/PdfService.html",[131,0.629,975,2.675]],["body/injectables/PdfService.html",[3,0.066,4,0.066,5,0.06,7,0.221,8,0.624,9,1.43,12,0.012,15,0.73,17,0.784,18,1.326,19,0.293,21,0.258,31,1.765,37,0.066,38,0.061,39,0.987,40,1.053,45,0.915,46,0.652,47,0.843,50,0.005,51,0.005,118,1.732,131,0.531,133,0.716,136,1.499,162,0.78,166,1.017,167,0.927,198,2.026,216,2.264,218,1.648,230,1.457,231,3.681,243,0.958,276,2.641,279,1.51,280,1.827,334,1.117,357,1.098,404,3.78,554,3.108,639,1.402,640,1.491,641,1.491,642,1.598,660,1.732,663,3.253,681,1.912,714,1.491,900,2.788,975,2.257,994,3.862,1005,1.912,1006,1.912,1007,1.912,1010,3.59,1011,1.912,1016,3.862,1017,1.912,1018,3.516,1019,3.516,1020,3.516,1021,2.184,1022,2.184,1023,3.516,1024,2.184,1025,3.516,1026,2.184,1027,3.516,1028,2.184,1029,5.058,1030,4.413,1031,3.516,1032,5.058,1033,7.536,1034,7.536,1035,6.478,1036,5.058,1037,5.058,1038,5.058,1039,5.058,1040,3.516,1041,5.058,1042,3.516,1043,3.516,1044,6.478,1045,5.058,1046,2.184,1047,3.516,1048,1.912,1049,3.516,1050,2.184,1051,2.184,1052,2.184,1053,4.413,1054,5.058,1055,2.184,1056,2.184,1057,2.184,1058,2.184,1059,2.184,1060,2.184,1061,2.184,1062,3.516,1063,2.184,1064,2.184,1065,2.184,1066,2.184,1067,2.184,1068,2.184,1069,2.184,1070,2.184,1071,2.184,1072,2.184,1073,2.184,1074,2.184,1075,2.184,1076,2.184,1077,2.184,1078,2.184,1079,2.184,1080,2.184,1081,2.184,1082,2.184,1083,2.184,1084,3.516,1085,4.413,1086,2.184,1087,2.184,1088,2.184,1089,2.184,1090,2.184,1091,2.184,1092,2.184,1093,2.184,1094,2.184,1095,3.516,1096,1.732,1097,2.184,1098,2.184,1099,2.184,1100,2.184,1101,2.184,1102,2.184,1103,2.184,1104,2.184,1105,2.184,1106,1.912,1107,2.184]],["title/classes/Profile.html",[38,0.117,525,3.049]],["body/classes/Profile.html",[3,0.195,4,0.195,5,0.175,12,0.011,37,0.195,38,0.181,50,0.01,51,0.01,311,2.047,525,5.496,1108,5.638]],["title/injectables/ProfileRepository.html",[131,0.629,1109,2.675]],["body/injectables/ProfileRepository.html",[3,0.131,4,0.131,5,0.118,7,0.436,8,1.036,9,1.596,11,1.371,12,0.012,15,0.768,17,0.766,19,0.35,21,0.509,22,2.487,24,1.329,37,0.131,38,0.121,39,1.212,45,0.895,46,1.289,47,0.972,50,0.008,51,0.008,131,0.881,133,1.415,136,1.33,162,0.87,166,1.174,167,1.069,168,2.264,186,2.487,190,1.559,191,3.541,216,1.976,218,2.18,243,1.59,276,2.948,277,3.716,279,2.507,297,2.487,301,2.487,334,1.371,345,2.602,347,2.37,348,3.16,359,2.418,363,2.37,364,2.619,365,2.487,368,2.619,561,1.612,562,1.726,716,3.777,1109,3.745,1110,3.422,1111,4.315,1112,4.315,1113,3.422,1114,4.315,1115,6.611,1116,4.315,1117,4.315,1118,4.315]],["title/controllers/ProfilesController.html",[0,1.207,1119,3.049]],["body/controllers/ProfilesController.html",[0,1.471,2,1.426,3,0.154,4,0.154,5,0.138,7,0.513,8,1.153,11,1.614,12,0.012,15,0.669,17,0.902,19,0.354,21,0.6,22,2.927,23,2.552,24,1.564,37,0.154,38,0.143,45,1.053,46,1.517,47,0.846,50,0.009,51,0.009,141,2.449,166,1.021,167,0.931,168,3.757,176,2.665,177,2.789,190,1.835,191,3.082,216,1.719,334,1.614,344,1.962,493,3.942,511,3.467,512,3.467,1119,4.752,1120,4.445,1121,5.078,1122,5.078,1123,5.078,1124,5.078,1125,4.596,1126,4.445,1127,5.078,1128,5.078,1129,5.078,1130,5.078,1131,5.078]],["title/modules/ProfilesModule.html",[52,1.135,72,2.845]],["body/modules/ProfilesModule.html",[2,1.747,3,0.144,4,0.144,5,0.129,12,0.012,19,0.388,21,0.561,37,0.144,38,0.133,50,0.008,51,0.008,52,1.889,54,1.899,55,1.968,56,2.118,57,2.118,58,1.968,59,3.092,60,2.118,72,5.643,75,3.938,77,2.773,78,2.118,79,2.118,81,3.263,348,1.968,589,3.475,694,4.156,1109,5.03,1119,5.074,1125,5.03,1126,4.156,1132,4.156,1133,4.156,1134,4.749,1135,4.749,1136,4.749,1137,4.156]],["title/injectables/ProfilesService.html",[131,0.629,1125,2.675]],["body/injectables/ProfilesService.html",[3,0.152,4,0.152,5,0.136,7,0.506,8,1.143,12,0.012,15,0.848,17,0.889,19,0.352,21,0.591,37,0.152,38,0.141,39,1.407,45,1.039,46,1.922,47,1.073,50,0.009,51,0.009,131,0.972,133,1.643,136,1.431,162,0.848,166,1.295,167,1.18,168,2.628,190,1.81,334,1.592,450,3.419,493,3.907,501,3.71,515,2.321,1109,4.82,1125,4.132,1137,4.384,1138,4.384,1139,5.009,1140,5.009,1141,6.438,1142,5.009,1143,4.384,1144,5.009,1145,5.009]],["title/controllers/RelayController.html",[0,1.207,1146,3.049]],["body/controllers/RelayController.html",[0,1.054,2,1.022,3,0.11,4,0.11,5,0.099,7,0.368,8,0.921,9,1.458,11,1.157,12,0.012,15,0.479,17,0.646,18,2.209,19,0.326,21,0.43,23,1.829,24,1.121,31,2.073,37,0.11,38,0.102,45,0.755,47,0.864,50,0.007,51,0.007,141,1.755,143,4.111,148,3.446,150,3.146,151,3.146,152,2.336,153,3.146,154,2.336,155,3.146,156,3.146,157,2.336,158,3.146,162,0.479,166,0.732,167,0.667,168,3.65,178,5.29,190,1.315,194,5.089,196,2.209,197,2.484,198,2.098,199,3.793,210,2.886,216,1.755,218,1.359,334,1.157,662,2.484,667,4.537,826,3.793,953,4.537,1146,3.793,1147,2.886,1148,6.581,1149,3.639,1150,6.328,1151,3.639,1152,6.656,1153,6.039,1154,5.184,1155,5.76,1156,3.639,1157,5.184,1158,3.639,1159,3.639,1160,3.876,1161,3.185,1162,3.639,1163,5.285,1164,3.639,1165,3.639,1166,3.639,1167,3.639,1168,3.639,1169,3.639,1170,3.639,1171,3.639,1172,3.639,1173,3.639]],["title/modules/RelayModule.html",[52,1.135,73,2.845]],["body/modules/RelayModule.html",[2,1.887,3,0.162,4,0.162,5,0.146,12,0.012,19,0.363,21,0.633,37,0.162,38,0.151,50,0.009,51,0.009,52,2,54,2.143,55,2.22,56,2.389,57,2.389,58,2.22,59,3.273,60,2.389,73,5.522,77,2.996,78,2.389,79,2.389,1146,5.371,1160,5.192,1161,4.689,1174,4.689,1175,4.689,1176,5.357,1177,5.357]],["title/injectables/RelayService.html",[131,0.629,1160,2.675]],["body/injectables/RelayService.html",[3,0.106,4,0.106,5,0.095,7,0.354,8,0.895,9,1.426,12,0.012,15,0.778,17,0.895,18,2.124,19,0.249,21,0.413,31,2.363,37,0.106,38,0.098,39,1.659,42,2.124,45,1.046,47,0.84,50,0.007,51,0.007,83,2.389,112,2.124,131,0.761,133,1.148,162,0.664,166,1.014,167,0.924,176,1.837,177,1.922,186,2.017,188,2.776,207,3.063,216,2.668,218,1.883,231,3.1,237,2.776,266,2.389,275,2.776,276,1.561,277,1.837,279,1.504,280,1.822,283,2.776,323,2.124,462,4.323,715,2.247,826,2.561,828,3.063,829,3.063,831,3.063,832,3.063,907,2.776,1152,4.412,1160,3.236,1178,3.063,1179,5.041,1180,5.041,1181,3.5,1182,5.041,1183,3.5,1184,3.5,1185,5.041,1186,3.5,1187,3.5,1188,5.041,1189,3.5,1190,3.5,1191,3.5,1192,3.5,1193,5.041,1194,3.5,1195,3.5,1196,5.041,1197,3.5,1198,5.041,1199,3.5,1200,3.5,1201,3.5,1202,3.5,1203,3.5,1204,3.5,1205,3.5,1206,3.5,1207,3.5,1208,3.5,1209,3.5,1210,3.5,1211,3.5,1212,3.5,1213,3.5,1214,3.5,1215,3.5,1216,3.5,1217,3.5,1218,3.5,1219,3.5,1220,3.5,1221,5.041,1222,5.041,1223,5.909,1224,3.5,1225,3.5,1226,3.5,1227,3.5,1228,3.5,1229,3.5,1230,3.5,1231,3.5,1232,3.5]],["title/injectables/ReportTemplatesRepository.html",[131,0.629,1233,2.675]],["body/injectables/ReportTemplatesRepository.html",[3,0.093,4,0.093,5,0.084,7,0.31,8,0.813,9,1.892,12,0.012,15,0.929,17,1.209,19,0.3,21,0.362,31,2.189,37,0.093,38,0.086,39,0.862,40,2.639,45,0.636,46,2.034,47,1.134,50,0.006,51,0.006,123,1.972,131,0.691,133,1.006,136,1.577,161,1.61,162,0.976,166,1.37,167,1.248,216,1.039,218,1.146,243,1.922,276,2.441,277,2.401,279,1.966,280,1.654,297,1.768,301,1.768,313,1.173,314,1.74,339,3.006,342,3.644,344,1.768,345,2.041,346,1.83,347,2.513,348,2.69,351,1.862,352,3.05,354,1.318,355,4.133,357,2.751,359,1.271,361,1.146,363,1.685,364,1.862,365,1.768,386,1.501,402,4.066,418,1.185,555,3.009,561,1.146,562,1.227,709,2.244,713,2.094,715,1.969,717,2.094,758,1.969,759,1.969,760,1.969,761,1.969,762,1.969,763,1.969,766,1.969,776,2.244,778,4.791,780,2.685,781,3.349,783,3.349,1233,2.937,1234,2.433,1235,3.067,1236,3.067,1237,2.685,1238,3.067,1239,3.067]],["title/controllers/ReportsTemplatesController.html",[0,1.207,1240,3.049]],["body/controllers/ReportsTemplatesController.html",[0,1.592,2,1.544,3,0.167,4,0.167,5,0.15,7,0.556,8,1.212,11,1.747,12,0.012,15,0.724,17,0.976,19,0.338,21,0.649,37,0.167,38,0.155,45,1.14,50,0.009,51,0.009,141,2.651,190,1.987,334,1.747,1010,3.935,1240,4.996,1241,4.812,1242,5.498,1243,6.828,1244,7.768,1245,5.498,1246,4.812,1247,5.498,1248,5.498,1249,5.498]],["title/modules/ReportsTemplatesModule.html",[52,1.135,74,2.675]],["body/modules/ReportsTemplatesModule.html",[2,1.679,3,0.136,4,0.136,5,0.122,12,0.012,19,0.381,21,0.528,37,0.136,38,0.126,50,0.008,51,0.008,52,1.834,54,1.789,55,1.853,56,1.995,57,1.995,58,1.853,59,3.002,60,3.002,64,4.441,74,5.363,75,3.872,77,2.666,78,1.995,79,1.995,81,3.137,589,3.273,590,3.915,1010,4.787,1233,4.946,1240,4.926,1246,3.915,1250,3.915,1251,3.915,1252,3.915,1253,4.473,1254,4.473,1255,4.473,1256,3.915]],["title/injectables/ReportsTemplatesService.html",[131,0.629,1010,2.402]],["body/injectables/ReportsTemplatesService.html",[3,0.107,4,0.107,5,0.097,7,0.358,8,0.903,9,1.884,12,0.012,15,0.972,17,1.272,19,0.354,21,0.418,37,0.107,38,0.1,39,0.995,45,0.735,46,1.776,47,1.194,50,0.007,51,0.007,123,2.075,131,0.768,133,1.162,136,1.196,162,0.972,166,1.441,167,1.313,190,1.28,243,2.011,313,1.304,314,1.89,320,2.555,333,3.428,334,1.126,344,1.965,345,2.267,346,2.034,354,1.522,359,1.468,361,1.323,371,4.352,377,2.274,382,3.264,386,1.668,402,2.042,481,2.418,515,1.641,517,1.945,554,2.668,555,3.19,556,2.592,557,2.592,558,2.592,559,2.592,560,2.592,561,1.323,562,1.417,563,2.592,1010,2.931,1233,4.599,1237,3.101,1256,3.101,1257,2.809,1258,5.085,1259,3.542,1260,3.542,1261,5.085,1262,3.542,1263,2.592,1264,4.451,1265,2.809,1266,3.542,1267,3.542]],["title/interfaces/RepositoryInterface.html",[332,1.858,880,3.049]],["body/interfaces/RepositoryInterface.html",[3,0.129,4,0.129,5,0.116,7,0.43,8,1.026,12,0.011,15,0.969,17,1.307,37,0.175,46,1.959,47,1.173,50,0.008,51,0.008,123,1.9,136,1.611,162,0.927,166,1.416,167,1.29,243,2.284,313,1.481,314,2.339,332,2.576,344,2.232,345,2.576,346,2.311,352,3.297,354,2.482,359,2.394,361,2.451,393,2.729,501,2.451,505,2.729,705,5.838,871,3.111,872,3.372,873,5.743,875,6.443,880,4.227,1268,4.252,1269,4.252,1270,4.252,1271,4.252,1272,4.252]],["title/guards/SupabaseAuthGuard.html",[130,2.845,179,2.675]],["body/guards/SupabaseAuthGuard.html",[2,1.062,3,0.115,4,0.115,5,0.103,7,0.382,8,0.946,9,1.488,12,0.012,15,0.701,17,0.671,19,0.263,21,0.446,37,0.115,38,0.106,39,1.062,42,2.294,45,1.105,47,0.887,50,0.007,51,0.007,76,3.859,112,3.232,131,0.804,161,2.794,162,0.701,166,1.071,167,0.976,179,3.418,182,2.766,186,3.858,188,2.998,190,1.366,196,3.232,216,2.479,218,1.989,222,4.296,243,1.451,246,4.223,250,5.308,251,4.898,252,2.998,274,4.661,279,2.876,280,2.419,287,4.569,288,4.569,302,4.223,373,2.766,836,4.223,860,2.998,861,2.998,881,2.998,888,4.661,899,3.309,900,2.998,901,3.309,902,4.661,903,3.309,907,2.998,910,3.309,911,3.309,913,4.661,916,3.309,1106,3.309,1273,3.309,1274,3.78,1275,3.78,1276,3.78,1277,5.326,1278,5.326,1279,3.78,1280,3.78,1281,3.78,1282,3.78,1283,3.78,1284,3.78,1285,3.78]],["title/modules/SupabaseModule.html",[52,1.135,75,2.094]],["body/modules/SupabaseModule.html",[3,0.158,4,0.158,5,0.142,12,0.012,19,0.326,21,0.615,37,0.2,38,0.146,50,0.009,51,0.009,52,1.973,54,2.639,55,2.157,56,2.321,57,2.321,58,2.157,59,3.23,60,3.23,75,4.099,77,2.942,78,2.321,79,2.321,348,3.518,1286,4.555,1287,5.205,1288,4.555,1289,6.597,1290,5.205,1291,5.205]],["title/injectables/SupabaseService.html",[131,0.629,348,1.727]],["body/injectables/SupabaseService.html",[3,0.139,4,0.139,5,0.125,7,0.465,8,1.081,12,0.012,15,0.899,17,0.817,19,0.359,21,0.543,37,0.139,38,0.129,39,1.292,45,0.954,47,0.766,50,0.008,51,0.008,83,3.14,131,0.92,133,1.509,162,0.802,166,0.925,167,0.843,190,1.662,216,2.062,230,2.523,231,3.582,232,6.36,236,4.026,237,6.16,249,6.616,256,4.026,257,3.648,258,3.648,260,4.026,261,4.026,262,5.33,263,4.026,264,3.648,265,4.026,266,3.14,267,3.648,268,3.366,269,5.33,270,4.026,348,2.523,365,4.188,561,1.718,562,1.84,1292,4.026,1293,6.09,1294,4.6]],["title/classes/UpdateDatumDto.html",[38,0.117,666,2.675]],["body/classes/UpdateDatumDto.html",[3,0.182,4,0.182,5,0.164,12,0.011,19,0.357,24,1.854,37,0.182,38,0.169,50,0.01,51,0.01,311,1.912,313,1.543,386,2.366,396,3.652,398,4.772,665,4.403,666,4.631,1295,5.267,1296,7.215,1297,3.652]],["title/classes/UpdateDeviceDto.html",[38,0.117,631,3.049]],["body/classes/UpdateDeviceDto.html",[3,0.182,4,0.182,5,0.164,12,0.011,19,0.357,24,1.854,37,0.182,38,0.169,50,0.01,51,0.01,311,1.912,313,1.543,386,2.366,399,3.862,401,4.772,608,4.772,631,5.279,1297,3.652,1298,5.267,1299,7.215]],["title/classes/UpdateDeviceOwnerDto.html",[38,0.117,508,2.845]],["body/classes/UpdateDeviceOwnerDto.html",[3,0.181,4,0.181,5,0.163,12,0.011,19,0.355,24,1.838,37,0.181,38,0.168,50,0.01,51,0.01,311,1.897,313,1.53,386,2.355,416,3.831,418,2.774,419,4.733,508,4.901,516,4.733,1297,3.622,1300,5.224,1301,7.18]],["title/classes/UpdateDeviceTypeDto.html",[38,0.117,599,3.049]],["body/classes/UpdateDeviceTypeDto.html",[3,0.181,4,0.181,5,0.163,12,0.011,19,0.355,24,1.838,37,0.181,38,0.168,50,0.01,51,0.01,311,1.897,313,1.53,386,2.355,418,2.774,426,3.831,428,4.733,573,4.733,599,5.253,1297,3.622,1302,5.224,1303,7.18]],["title/classes/UpdateLocationDto.html",[38,0.117,948,3.049]],["body/classes/UpdateLocationDto.html",[3,0.182,4,0.182,5,0.164,12,0.011,19,0.357,24,1.854,37,0.182,38,0.169,50,0.01,51,0.01,311,1.912,313,1.543,386,2.366,431,3.862,433,4.772,922,4.772,948,5.279,1297,3.652,1304,5.267,1305,7.215]],["title/classes/UpdateProfileDto.html",[38,0.117,1306,3.305]],["body/classes/UpdateProfileDto.html",[3,0.182,4,0.182,5,0.164,12,0.011,19,0.357,24,1.854,37,0.182,38,0.169,50,0.01,51,0.01,311,1.912,313,1.543,386,2.366,450,4.108,452,4.772,1143,5.267,1297,3.652,1306,5.722,1307,5.267,1308,7.215]],["title/classes/UpdateReportDto.html",[38,0.117,1263,3.049]],["body/classes/UpdateReportDto.html",[3,0.182,4,0.182,5,0.164,12,0.011,19,0.357,24,1.854,37,0.182,38,0.169,50,0.01,51,0.01,311,1.912,313,1.543,386,2.366,481,4.108,483,4.772,1263,5.279,1264,5.267,1297,3.652,1309,5.267,1310,7.215]],["title/classes/UserAuthDto.html",[38,0.117,963,3.049]],["body/classes/UserAuthDto.html",[3,0.154,4,0.154,5,0.139,7,0.515,11,1.619,12,0.012,15,0.671,19,0.322,24,1.57,37,0.197,38,0.202,50,0.009,51,0.009,136,1.52,148,3.081,162,0.671,163,3.479,186,3.752,187,5.162,222,4.851,230,2.697,240,5.162,242,4.178,273,3.951,311,1.619,414,3.939,415,2.674,479,5.162,825,4.041,956,4.041,957,4.041,962,5.993,963,4.763,1311,5.096,1312,5.096]],["title/coverage.html",[1313,4.988]],["body/coverage.html",[0,1.993,1,1.316,5,0.049,6,1.574,12,0.012,31,0.719,38,0.216,50,0.004,51,0.004,58,0.745,76,0.904,96,1.316,130,2.046,131,1.15,132,1.426,134,1.574,139,1.316,140,1.574,162,1.01,163,1.227,179,1.154,229,1.574,271,2.377,280,0.65,310,1.091,312,2.377,316,1.819,332,2.229,342,0.904,343,1.574,348,0.745,371,1.036,372,2.377,396,1.091,397,1.574,398,2.377,399,1.154,400,1.574,401,2.377,416,1.154,417,1.574,418,1.738,419,2.377,426,1.154,427,1.574,428,2.377,431,1.154,432,1.574,433,2.377,450,1.227,451,1.574,452,2.377,481,1.227,482,1.574,483,2.377,489,1.316,490,1.574,508,1.227,513,0.987,525,1.316,543,1.091,548,2.377,561,0.672,564,2.193,568,1.316,569,2.377,574,0.943,576,2.632,586,1.091,592,2.377,599,1.316,603,1.316,604,2.377,605,0.904,609,2.193,621,1.091,625,2.377,631,1.316,634,1.316,635,1.574,660,6.842,663,0.987,666,1.154,690,1.091,699,1.574,714,1.227,719,2.377,725,1.316,753,1.426,754,1.574,755,1.426,756,2.377,764,1.426,768,2.377,777,2.377,783,2.193,786,2.377,794,1.316,795,1.574,800,1.154,805,1.154,821,1.574,833,1.316,834,1.574,854,1.426,855,1.574,856,1.574,871,1.316,872,2.377,880,1.316,882,1.574,883,1.574,892,1.426,917,1.574,918,1.316,919,2.377,920,1.154,923,1.426,932,1.154,936,2.377,938,1.426,940,1.574,948,1.316,956,2.377,963,1.316,964,1.316,965,1.574,975,1.154,990,1.426,991,1.574,1010,1.036,1017,1.574,1096,1.426,1108,1.574,1109,1.154,1110,2.377,1113,1.426,1119,1.316,1120,1.574,1125,1.154,1138,1.574,1146,1.316,1147,1.426,1160,1.154,1178,1.574,1233,1.154,1234,2.377,1240,1.316,1241,1.574,1257,2.377,1263,1.316,1265,1.426,1273,1.574,1292,1.574,1295,1.574,1298,1.574,1300,1.574,1302,1.574,1304,1.574,1306,1.426,1307,1.574,1309,1.574,1313,1.574,1314,1.798,1315,1.798,1316,1.798,1317,5.252,1318,7.619,1319,1.574,1320,8.127,1321,1.574,1322,1.574,1323,1.574,1324,1.574,1325,1.574,1326,6.752,1327,6.601,1328,5.727,1329,5.399,1330,2.624,1331,2.998,1332,5.727,1333,6,1334,2.998,1335,2.624,1336,1.574,1337,1.798,1338,1.798]],["title/dependencies.html",[55,2.078,268,2.543]],["body/dependencies.html",[12,0.012,21,0.589,24,1.538,27,3.652,28,4.7,30,3.652,38,0.181,50,0.009,51,0.009,55,2.068,83,3.408,94,3.959,125,4.369,257,3.959,258,3.959,273,3.03,415,2.619,842,3.959,852,4.369,974,4.369,1003,4.369,1004,4.369,1048,4.369,1339,4.992,1340,4.992,1341,7.103,1342,4.992,1343,4.992,1344,4.992,1345,4.992,1346,4.992,1347,4.992,1348,4.992,1349,4.992,1350,4.992,1351,4.992,1352,4.992,1353,4.992,1354,4.992,1355,4.992,1356,4.992,1357,4.992,1358,4.992,1359,4.992,1360,4.992,1361,4.992,1362,4.992,1363,4.992,1364,4.992,1365,4.992,1366,4.992,1367,4.992,1368,4.992]],["title/miscellaneous/enumerations.html",[1369,2.003,1370,4.39]],["body/miscellaneous/enumerations.html",[7,0.637,12,0.011,50,0.01,51,0.01,357,3.727,1147,4.998,1150,6.491,1155,6.491,1163,6.491,1369,3.632,1370,5.516,1371,6.303]],["title/miscellaneous/functions.html",[1369,2.003,1372,4.39]],["body/miscellaneous/functions.html",[7,0.624,12,0.011,47,1.028,50,0.01,51,0.01,58,3.236,136,1.473,162,0.812,166,1.241,167,1.131,266,4.212,1335,5.4,1336,6.41,1369,3.556,1372,5.4,1373,7.323,1374,6.17]],["title/index.html",[7,0.351,1375,3.475,1376,3.475]],["body/index.html",[12,0.01,50,0.01,51,0.01,148,2.767,206,5.638,1377,6.441,1378,6.441,1379,6.441,1380,6.441,1381,6.441,1382,6.441,1383,6.441,1384,6.441]],["title/modules.html",[54,2.279]],["body/modules.html",[12,0.009,50,0.009,51,0.009,53,3.729,54,2.038,64,2.937,65,3.271,66,3.093,67,3.271,68,3.479,69,3.479,70,3.479,71,3.479,72,3.479,73,3.479,74,3.271,75,2.561,581,3.271,1385,8.505,1386,8.505,1387,8.505,1388,8.539,1389,5.096,1390,5.096]],["title/overview.html",[1391,4.988]],["body/overview.html",[2,0.66,12,0.012,50,0.005,51,0.005,52,0.64,53,5.985,54,0.94,55,0.973,56,1.047,57,1.047,58,0.973,59,1.047,60,1.047,61,2.056,62,2.056,63,2.056,64,3.948,65,4.597,66,4.546,67,5.25,68,4.377,69,3.162,70,4.676,71,5.418,72,4.676,73,3.924,74,4.747,75,3.661,76,3.527,77,1.662,78,1.047,79,1.047,133,0.77,224,2.056,225,2.056,267,1.863,311,0.746,348,2.756,393,1.508,513,3.653,539,2.056,540,2.056,541,2.056,543,3.199,574,3.49,581,4.747,582,2.056,584,2.056,585,2.056,586,3.199,605,3.342,617,2.056,619,2.056,620,2.056,621,3.199,663,3.762,686,2.056,688,2.056,689,2.056,690,3.891,800,2.973,816,2.056,817,2.056,881,1.863,920,2.973,929,2.056,930,2.056,932,2.973,975,2.973,997,2.056,998,2.056,1010,3.695,1109,2.973,1125,2.973,1132,2.056,1133,2.056,1160,2.973,1174,2.056,1175,2.056,1233,2.973,1250,2.056,1251,2.056,1252,2.056,1286,2.056,1288,2.056,1391,2.056,1392,2.349,1393,2.349,1394,2.349,1395,2.349,1396,2.349]],["title/properties.html",[230,2.078,268,2.543]],["body/properties.html",[12,0.011,50,0.01,51,0.01,148,2.755,230,2.657,266,4.378,1397,6.413,1398,6.413,1399,6.413,1400,6.413]],["title/miscellaneous/typealiases.html",[1369,2.003,1401,5.015]],["body/miscellaneous/typealiases.html",[7,0.466,12,0.011,50,0.008,51,0.008,123,1.336,136,0.928,162,0.9,368,2.8,462,3.376,548,3.659,561,2.554,564,5.323,569,3.659,576,5.307,592,3.659,604,3.659,609,5.323,625,3.659,756,3.659,764,4.84,768,3.659,777,3.659,781,4.465,783,5.323,786,3.659,919,3.659,923,4.84,936,3.659,938,4.84,1096,5.423,1110,3.659,1113,4.84,1234,3.659,1257,3.659,1265,4.84,1317,7.13,1319,5.341,1321,5.341,1322,5.341,1323,5.341,1324,5.341,1325,5.341,1369,2.659,1402,4.614,1403,4.614,1404,4.614,1405,4.614,1406,4.614,1407,4.614,1408,4.614,1409,4.614,1410,4.614,1411,4.614,1412,4.614,1413,4.614,1414,4.614,1415,4.614,1416,4.614]],["title/miscellaneous/variables.html",[1369,2.003,1417,4.39]],["body/miscellaneous/variables.html",[7,0.613,12,0.011,31,2.9,40,3.496,50,0.01,51,0.01,112,3.682,136,1.22,162,0.799,357,3.644,892,5.75,893,5.31,1330,5.31,1369,3.497,1417,5.31,1418,7.251,1419,6.067]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDatumDto.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"classes/Datum.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"controllers/PdfController.html":{},"classes/PdfDTO.html":{},"modules/PdfModule.html":{},"injectables/PdfService.html":{},"classes/Profile.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"modules/RelayModule.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"controllers/ReportsTemplatesController.html":{},"modules/ReportsTemplatesModule.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateReportDto.html":{},"classes/UserAuthDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":660,"title":{},"body":{"controllers/DataController.html":{},"injectables/PdfService.html":{},"coverage.html":{}}}],["0)'})@apiquery({name",{"_index":653,"title":{},"body":{"controllers/DataController.html":{}}}],["0.0.1",{"_index":1397,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":1356,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1366,"title":{},"body":{"dependencies.html":{}}}],["0.2.15",{"_index":1363,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1355,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1320,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1337,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1326,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1327,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1329,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1334,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1328,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1332,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1333,"title":{},"body":{"coverage.html":{}}}],["030011",{"_index":1197,"title":{},"body":{"injectables/RelayService.html":{}}}],["030111",{"_index":1199,"title":{},"body":{"injectables/RelayService.html":{}}}],["1",{"_index":42,"title":{"interfaces/BaseServiceInterface-1.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/DataRepository.html":{},"guards/JwtAuthGuard.html":{},"injectables/RelayService.html":{},"guards/SupabaseAuthGuard.html":{}}}],["1.7.5",{"_index":1358,"title":{},"body":{"dependencies.html":{}}}],["1.7.7",{"_index":1352,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"controllers/DataController.html":{},"injectables/PdfService.html":{}}}],["10)'})@apiquery({name",{"_index":654,"title":{},"body":{"controllers/DataController.html":{}}}],["10.0.0",{"_index":1341,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":1344,"title":{},"body":{"dependencies.html":{}}}],["10.2.3",{"_index":1348,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["13",{"_index":1393,"title":{},"body":{"overview.html":{}}}],["14",{"_index":1392,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1231,"title":{},"body":{"injectables/RelayService.html":{}}}],["2",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{},"overview.html":{}}}],["2.3.0",{"_index":1340,"title":{},"body":{"dependencies.html":{}}}],["2.45.6",{"_index":1350,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{}}}],["201",{"_index":322,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{}}}],["202",{"_index":1157,"title":{},"body":{"controllers/RelayController.html":{}}}],["22",{"_index":1394,"title":{},"body":{"overview.html":{}}}],["22222",{"_index":1190,"title":{},"body":{"injectables/RelayService.html":{}}}],["23",{"_index":1395,"title":{},"body":{"overview.html":{}}}],["3",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["3.1.1",{"_index":1339,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":1342,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1362,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":1346,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{},"controllers/RelayController.html":{}}}],["401",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{},"controllers/RelayController.html":{}}}],["402",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{},"controllers/RelayController.html":{}}}],["403",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{},"controllers/RelayController.html":{}}}],["404",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["5",{"_index":1396,"title":{},"body":{"overview.html":{}}}],["5.7.6",{"_index":1353,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1349,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["6000",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["60000",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["6ah",{"_index":812,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["7.4.2",{"_index":1347,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1368,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":808,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["8.0.0",{"_index":1360,"title":{},"body":{"dependencies.html":{}}}],["accepted_agreements",{"_index":453,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["access",{"_index":906,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["accesskey",{"_index":1193,"title":{},"body":{"injectables/RelayService.html":{}}}],["action",{"_index":953,"title":{},"body":{"injectables/LocationService.html":{},"controllers/RelayController.html":{}}}],["add",{"_index":547,"title":{},"body":{"modules/CwDeviceOwnersModule.html":{}}}],["address",{"_index":825,"title":{},"body":{"injectables/GeolocationService.html":{},"classes/LoginDto.html":{},"classes/UserAuthDto.html":{}}}],["address'})@isemail",{"_index":958,"title":{},"body":{"classes/LoginDto.html":{}}}],["agent",{"_index":1217,"title":{},"body":{"injectables/RelayService.html":{}}}],["alias",{"_index":1318,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1402,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":905,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["already",{"_index":1060,"title":{},"body":{"injectables/PdfService.html":{}}}],["api",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CwDevicesController.html":{},"guards/JwtAuthGuard.html":{},"controllers/PdfController.html":{},"guards/SupabaseAuthGuard.html":{}}}],["apibearerauth",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"controllers/GeolocationController.html":{},"controllers/PdfController.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{}}}],["apibearerauth('authorization",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["apibearerauth('jwt",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"controllers/GeolocationController.html":{},"controllers/PdfController.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{}}}],["apibearerauth('jwt')@get('address')@useguards(supabaseauthguard",{"_index":797,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["apibearerauth('jwt')@get('user')@useguards(supabaseauthguard)@apiresponse({status",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["apikey",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["apioperation",{"_index":331,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/DataController.html":{}}}],["apioperation({summary",{"_index":496,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/DataController.html":{}}}],["apiproperty",{"_index":962,"title":{},"body":{"classes/LoginDto.html":{},"classes/PdfDTO.html":{},"classes/UserAuthDto.html":{}}}],["apiproperty({description",{"_index":957,"title":{},"body":{"classes/LoginDto.html":{},"classes/PdfDTO.html":{},"classes/UserAuthDto.html":{}}}],["apiquery",{"_index":667,"title":{},"body":{"controllers/DataController.html":{},"controllers/RelayController.html":{}}}],["apiresponse",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/RelayController.html":{}}}],["apiresponse({status",{"_index":321,"title":{},"body":{"classes/BaseController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{}}}],["apisecurity",{"_index":607,"title":{},"body":{"controllers/CwDevicesController.html":{},"controllers/PdfController.html":{}}}],["apisecurity('x",{"_index":611,"title":{},"body":{"controllers/CwDevicesController.html":{},"controllers/PdfController.html":{}}}],["apitags",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"controllers/GeolocationController.html":{},"controllers/LocationController.html":{},"controllers/PdfController.html":{},"controllers/ProfilesController.html":{},"controllers/RelayController.html":{}}}],["apitags('addresses",{"_index":802,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["apitags('app",{"_index":36,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('crud",{"_index":671,"title":{},"body":{"controllers/DataController.html":{}}}],["apitags('device",{"_index":578,"title":{},"body":{"controllers/CwDeviceTypeController.html":{}}}],["apitags('devices",{"_index":613,"title":{},"body":{"controllers/CwDevicesController.html":{}}}],["apitags('endpoints",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('locations",{"_index":925,"title":{},"body":{"controllers/LocationController.html":{}}}],["apitags('profiles",{"_index":1127,"title":{},"body":{"controllers/ProfilesController.html":{}}}],["apitags('relay",{"_index":1164,"title":{},"body":{"controllers/RelayController.html":{}}}],["apitags('🔒device",{"_index":518,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["app.controller",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["app_guard",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appid",{"_index":1187,"title":{},"body":{"injectables/RelayService.html":{}}}],["application/json",{"_index":1216,"title":{},"body":{"injectables/RelayService.html":{}}}],["application/pdf",{"_index":983,"title":{},"body":{"controllers/PdfController.html":{}}}],["applications",{"_index":1384,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":53,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":132,"title":{"injectables/AppService.html":{}},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["array",{"_index":1099,"title":{},"body":{"injectables/PdfService.html":{}}}],["asc",{"_index":642,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"injectables/PdfService.html":{}}}],["ascending",{"_index":712,"title":{},"body":{"injectables/DataRepository.html":{}}}],["assume",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["async",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"injectables/GeolocationService.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"controllers/PdfController.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"guards/SupabaseAuthGuard.html":{}}}],["attach",{"_index":911,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["attachment",{"_index":985,"title":{},"body":{"controllers/PdfController.html":{}}}],["auth",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":228,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["auth.guard.ts",{"_index":883,"title":{},"body":{"guards/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:15",{"_index":889,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["auth.guard.ts:52",{"_index":891,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["auth.guard.ts:9",{"_index":887,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["auth.service",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["auth/auth.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/CwDevicesModule.html":{}}}],["auth/auth.service",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/jwt",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/public.decorator",{"_index":32,"title":{},"body":{"controllers/AppController.html":{}}}],["authcontroller",{"_index":139,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"classes/UserAuthDto.html":{}}}],["authguard",{"_index":1277,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["authheader",{"_index":913,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["authheader.split",{"_index":916,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["authheader.startswith('bearer",{"_index":915,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["authmodule",{"_index":64,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/ReportsTemplatesModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1400,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RelayService.html":{},"guards/SupabaseAuthGuard.html":{}}}],["authservice",{"_index":76,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/GeolocationModule.html":{},"guards/JwtAuthGuard.html":{},"modules/PdfModule.html":{},"guards/SupabaseAuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["automation",{"_index":1165,"title":{},"body":{"controllers/RelayController.html":{}}}],["available",{"_index":1390,"title":{},"body":{"modules.html":{}}}],["avatar_url",{"_index":454,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["await",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseRepository.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"injectables/GeolocationService.html":{},"guards/JwtAuthGuard.html":{},"controllers/PdfController.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"guards/SupabaseAuthGuard.html":{}}}],["axios",{"_index":1351,"title":{},"body":{"dependencies.html":{}}}],["bad",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{},"controllers/RelayController.html":{}}}],["badrequestexception",{"_index":731,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["badrequestexception('deveui",{"_index":735,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["base.repository",{"_index":763,"title":{},"body":{"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["base64",{"_index":1204,"title":{},"body":{"injectables/RelayService.html":{}}}],["basecontroller",{"_index":310,"title":{"classes/BaseController.html":{}},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{},"coverage.html":{}}}],["basecontroller:19",{"_index":571,"title":{},"body":{"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{}}}],["basecontroller:30",{"_index":570,"title":{},"body":{"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{}}}],["baserepository",{"_index":342,"title":{"classes/BaseRepository.html":{}},"body":{"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/ReportTemplatesRepository.html":{},"coverage.html":{}}}],["baserepository:10",{"_index":760,"title":{},"body":{"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["baserepository:21",{"_index":761,"title":{},"body":{"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["baserepository:34",{"_index":758,"title":{},"body":{"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["baserepository:47",{"_index":762,"title":{},"body":{"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["baserepository:61",{"_index":759,"title":{},"body":{"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["baseservice",{"_index":371,"title":{"classes/BaseService.html":{}},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/ReportsTemplatesService.html":{},"coverage.html":{}}}],["baseservice:12",{"_index":558,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/ReportsTemplatesService.html":{}}}],["baseservice:16",{"_index":559,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/ReportsTemplatesService.html":{}}}],["baseservice:20",{"_index":556,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/ReportsTemplatesService.html":{}}}],["baseservice:24",{"_index":560,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/ReportsTemplatesService.html":{}}}],["baseservice:28",{"_index":557,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/ReportsTemplatesService.html":{}}}],["baseserviceinterface",{"_index":316,"title":{"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{}},"body":{"classes/BaseController.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"coverage.html":{}}}],["bearer",{"_index":907,"title":{},"body":{"guards/JwtAuthGuard.html":{},"injectables/RelayService.html":{},"guards/SupabaseAuthGuard.html":{}}}],["between",{"_index":522,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["body",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"controllers/LocationController.html":{},"controllers/PdfController.html":{},"controllers/ProfilesController.html":{},"injectables/RelayService.html":{}}}],["bold",{"_index":1037,"title":{},"body":{"injectables/PdfService.html":{}}}],["bolditalics",{"_index":1041,"title":{},"body":{"injectables/PdfService.html":{}}}],["boolean",{"_index":462,"title":{},"body":{"classes/CreateProfileDto.html":{},"injectables/DataRepository.html":{},"injectables/RelayService.html":{},"miscellaneous/typealiases.html":{}}}],["bootstrap",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/LocationModule.html":{},"modules/PdfModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/ReportsTemplatesModule.html":{},"modules/SupabaseModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1388,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1385,"title":{},"body":{"modules.html":{}}}],["btoa(string.fromcharcode(...bytes",{"_index":1232,"title":{},"body":{"injectables/RelayService.html":{}}}],["buffer",{"_index":1066,"title":{},"body":{"injectables/PdfService.html":{}}}],["building",{"_index":1380,"title":{},"body":{"index.html":{}}}],["bytes",{"_index":1228,"title":{},"body":{"injectables/RelayService.html":{}}}],["cache",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["cache.interceptor.ts",{"_index":856,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{},"coverage.html":{}}}],["cache.interceptor.ts:6",{"_index":859,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["cacheinterceptor",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/HttpCacheInterceptor.html":{}}}],["cachemodule",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule.register",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["cachettl",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["cachettl(20",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["canactivate",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["canactivate(context",{"_index":888,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["catch",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/RelayService.html":{}}}],["change",{"_index":1208,"title":{},"body":{"injectables/RelayService.html":{}}}],["check",{"_index":836,"title":{},"body":{"controllers/HealthController.html":{},"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["chunk",{"_index":1068,"title":{},"body":{"injectables/PdfService.html":{}}}],["chunks",{"_index":1065,"title":{},"body":{"injectables/PdfService.html":{}}}],["chunks.push(chunk",{"_index":1069,"title":{},"body":{"injectables/PdfService.html":{}}}],["class",{"_index":38,"title":{"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"classes/CreateDatumDto.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"classes/Datum.html":{},"classes/Location.html":{},"classes/LoginDto.html":{},"classes/PdfDTO.html":{},"classes/Profile.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateReportDto.html":{},"classes/UserAuthDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDatumDto.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"classes/Datum.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HttpCacheInterceptor.html":{},"guards/JwtAuthGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"controllers/PdfController.html":{},"classes/PdfDTO.html":{},"modules/PdfModule.html":{},"injectables/PdfService.html":{},"classes/Profile.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"modules/RelayModule.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"controllers/ReportsTemplatesController.html":{},"modules/ReportsTemplatesModule.html":{},"injectables/ReportsTemplatesService.html":{},"guards/SupabaseAuthGuard.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateReportDto.html":{},"classes/UserAuthDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":311,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"classes/CreateDatumDto.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"classes/Datum.html":{},"classes/Location.html":{},"classes/LoginDto.html":{},"classes/PdfDTO.html":{},"classes/Profile.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateReportDto.html":{},"classes/UserAuthDto.html":{},"overview.html":{}}}],["client",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["close",{"_index":1163,"title":{},"body":{"controllers/RelayController.html":{},"miscellaneous/enumerations.html":{}}}],["close'})@apiresponse({status",{"_index":1156,"title":{},"body":{"controllers/RelayController.html":{}}}],["clue",{"_index":1076,"title":{},"body":{"injectables/PdfService.html":{}}}],["cluster_appmodule",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":224,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":225,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":226,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_cwdeviceownersmodule",{"_index":539,"title":{},"body":{"modules/CwDeviceOwnersModule.html":{},"overview.html":{}}}],["cluster_cwdeviceownersmodule_exports",{"_index":541,"title":{},"body":{"modules/CwDeviceOwnersModule.html":{},"overview.html":{}}}],["cluster_cwdeviceownersmodule_imports",{"_index":542,"title":{},"body":{"modules/CwDeviceOwnersModule.html":{}}}],["cluster_cwdeviceownersmodule_providers",{"_index":540,"title":{},"body":{"modules/CwDeviceOwnersModule.html":{},"overview.html":{}}}],["cluster_cwdevicesmodule",{"_index":617,"title":{},"body":{"modules/CwDevicesModule.html":{},"overview.html":{}}}],["cluster_cwdevicesmodule_exports",{"_index":620,"title":{},"body":{"modules/CwDevicesModule.html":{},"overview.html":{}}}],["cluster_cwdevicesmodule_imports",{"_index":618,"title":{},"body":{"modules/CwDevicesModule.html":{}}}],["cluster_cwdevicesmodule_providers",{"_index":619,"title":{},"body":{"modules/CwDevicesModule.html":{},"overview.html":{}}}],["cluster_cwdevicetypemodule",{"_index":582,"title":{},"body":{"modules/CwDeviceTypeModule.html":{},"overview.html":{}}}],["cluster_cwdevicetypemodule_exports",{"_index":584,"title":{},"body":{"modules/CwDeviceTypeModule.html":{},"overview.html":{}}}],["cluster_cwdevicetypemodule_imports",{"_index":583,"title":{},"body":{"modules/CwDeviceTypeModule.html":{}}}],["cluster_cwdevicetypemodule_providers",{"_index":585,"title":{},"body":{"modules/CwDeviceTypeModule.html":{},"overview.html":{}}}],["cluster_datamodule",{"_index":686,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_exports",{"_index":689,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_imports",{"_index":687,"title":{},"body":{"modules/DataModule.html":{}}}],["cluster_datamodule_providers",{"_index":688,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_geolocationmodule",{"_index":816,"title":{},"body":{"modules/GeolocationModule.html":{},"overview.html":{}}}],["cluster_geolocationmodule_providers",{"_index":817,"title":{},"body":{"modules/GeolocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule",{"_index":929,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_imports",{"_index":931,"title":{},"body":{"modules/LocationModule.html":{}}}],["cluster_locationmodule_providers",{"_index":930,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_pdfmodule",{"_index":997,"title":{},"body":{"modules/PdfModule.html":{},"overview.html":{}}}],["cluster_pdfmodule_imports",{"_index":999,"title":{},"body":{"modules/PdfModule.html":{}}}],["cluster_pdfmodule_providers",{"_index":998,"title":{},"body":{"modules/PdfModule.html":{},"overview.html":{}}}],["cluster_profilesmodule",{"_index":1132,"title":{},"body":{"modules/ProfilesModule.html":{},"overview.html":{}}}],["cluster_profilesmodule_imports",{"_index":1134,"title":{},"body":{"modules/ProfilesModule.html":{}}}],["cluster_profilesmodule_providers",{"_index":1133,"title":{},"body":{"modules/ProfilesModule.html":{},"overview.html":{}}}],["cluster_relaymodule",{"_index":1174,"title":{},"body":{"modules/RelayModule.html":{},"overview.html":{}}}],["cluster_relaymodule_providers",{"_index":1175,"title":{},"body":{"modules/RelayModule.html":{},"overview.html":{}}}],["cluster_reportstemplatesmodule",{"_index":1250,"title":{},"body":{"modules/ReportsTemplatesModule.html":{},"overview.html":{}}}],["cluster_reportstemplatesmodule_exports",{"_index":1251,"title":{},"body":{"modules/ReportsTemplatesModule.html":{},"overview.html":{}}}],["cluster_reportstemplatesmodule_imports",{"_index":1253,"title":{},"body":{"modules/ReportsTemplatesModule.html":{}}}],["cluster_reportstemplatesmodule_providers",{"_index":1252,"title":{},"body":{"modules/ReportsTemplatesModule.html":{},"overview.html":{}}}],["cluster_supabasemodule",{"_index":1286,"title":{},"body":{"modules/SupabaseModule.html":{},"overview.html":{}}}],["cluster_supabasemodule_exports",{"_index":1288,"title":{},"body":{"modules/SupabaseModule.html":{},"overview.html":{}}}],["cluster_supabasemodule_providers",{"_index":1287,"title":{},"body":{"modules/SupabaseModule.html":{}}}],["command",{"_index":1200,"title":{},"body":{"injectables/RelayService.html":{}}}],["compositetypes",{"_index":1319,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["compression",{"_index":1357,"title":{},"body":{"dependencies.html":{}}}],["configmodule",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RelayService.html":{},"injectables/SupabaseService.html":{}}}],["confirmed",{"_index":1210,"title":{},"body":{"injectables/RelayService.html":{}}}],["console.error('error",{"_index":1227,"title":{},"body":{"injectables/RelayService.html":{}}}],["console.log('downlink",{"_index":1224,"title":{},"body":{"injectables/RelayService.html":{}}}],["const",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseRepository.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"injectables/GeolocationService.html":{},"injectables/HttpCacheInterceptor.html":{},"guards/JwtAuthGuard.html":{},"controllers/PdfController.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{}}}],["constructor",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/HealthController.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"injectables/ProfilesService.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{}}}],["constructor(authservice",{"_index":1274,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["constructor(configservice",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["constructor(cwdevicesservice",{"_index":615,"title":{},"body":{"controllers/CwDevicesController.html":{}}}],["constructor(cwdevicetypeservice",{"_index":579,"title":{},"body":{"controllers/CwDeviceTypeController.html":{}}}],["constructor(dataservice",{"_index":1021,"title":{},"body":{"injectables/PdfService.html":{}}}],["constructor(deviceownerrepository",{"_index":550,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{}}}],["constructor(devicerepository",{"_index":627,"title":{},"body":{"injectables/CwDevicesService.html":{}}}],["constructor(deviceservice",{"_index":720,"title":{},"body":{"injectables/DataService.html":{}}}],["constructor(devicetyperepository",{"_index":594,"title":{},"body":{"injectables/CwDeviceTypeService.html":{}}}],["constructor(locationrepository",{"_index":941,"title":{},"body":{"injectables/LocationService.html":{}}}],["constructor(private",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/DataRepository.html":{},"controllers/GeolocationController.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"controllers/PdfController.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"controllers/ReportsTemplatesController.html":{},"injectables/ReportsTemplatesService.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{}}}],["constructor(profilesrepository",{"_index":1139,"title":{},"body":{"injectables/ProfilesService.html":{}}}],["constructor(protected",{"_index":387,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{}}}],["constructor(reflector",{"_index":885,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["constructor(reporttemplatesrepository",{"_index":1259,"title":{},"body":{"injectables/ReportsTemplatesService.html":{}}}],["constructor(repository",{"_index":374,"title":{},"body":{"classes/BaseService.html":{}}}],["constructor(service",{"_index":315,"title":{},"body":{"classes/BaseController.html":{}}}],["constructor(supabaseservice",{"_index":347,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/DataRepository.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/ProfileRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["contain",{"_index":749,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["content",{"_index":323,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{},"controllers/PdfController.html":{},"injectables/RelayService.html":{}}}],["context",{"_index":860,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{},"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["context.getclass",{"_index":896,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":895,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":861,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{},"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"controllers/GeolocationController.html":{},"controllers/HealthController.html":{},"controllers/LocationController.html":{},"controllers/PdfController.html":{},"controllers/ProfilesController.html":{},"controllers/RelayController.html":{},"controllers/ReportsTemplatesController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"controllers/GeolocationController.html":{},"controllers/HealthController.html":{},"controllers/LocationController.html":{},"controllers/PdfController.html":{},"controllers/ProfilesController.html":{},"controllers/RelayController.html":{},"controllers/ReportsTemplatesController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('cw",{"_index":527,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{}}}],["controller('data",{"_index":670,"title":{},"body":{"controllers/DataController.html":{}}}],["controller('geolocation",{"_index":803,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["controller('health",{"_index":843,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('location",{"_index":926,"title":{},"body":{"controllers/LocationController.html":{}}}],["controller('pdf",{"_index":978,"title":{},"body":{"controllers/PdfController.html":{}}}],["controller('profiles",{"_index":1128,"title":{},"body":{"controllers/ProfilesController.html":{}}}],["controller('relay",{"_index":1166,"title":{},"body":{"controllers/RelayController.html":{}}}],["controller('reports",{"_index":1247,"title":{},"body":{"controllers/ReportsTemplatesController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"controllers/PdfController.html":{},"modules/PdfModule.html":{},"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"controllers/RelayController.html":{},"modules/RelayModule.html":{},"controllers/ReportsTemplatesController.html":{},"modules/ReportsTemplatesModule.html":{},"guards/SupabaseAuthGuard.html":{},"overview.html":{}}}],["correct",{"_index":1075,"title":{},"body":{"injectables/PdfService.html":{}}}],["coverage",{"_index":1313,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":313,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/IRepositoryBase.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateReportDto.html":{}}}],["create(@body",{"_index":340,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/DataController.html":{},"controllers/LocationController.html":{}}}],["create(createdatumdto",{"_index":636,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["create(createdeviceownerdto",{"_index":495,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["create(createdto",{"_index":319,"title":{},"body":{"classes/BaseController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{}}}],["create(createlocationdto",{"_index":943,"title":{},"body":{"injectables/LocationService.html":{}}}],["create(dto",{"_index":377,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/ReportsTemplatesService.html":{}}}],["create(entity",{"_index":873,"title":{},"body":{"interfaces/IRepositoryBase.html":{},"interfaces/RepositoryInterface.html":{}}}],["create(item",{"_index":351,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["createclient",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["createclient(supabaseurl",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["created",{"_index":338,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{}}}],["created'})@apiresponse({status",{"_index":324,"title":{},"body":{"classes/BaseController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{}}}],["created_at",{"_index":655,"title":{},"body":{"controllers/DataController.html":{}}}],["createdatumdto",{"_index":396,"title":{"classes/CreateDatumDto.html":{}},"body":{"classes/CreateDatumDto.html":{},"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"classes/UpdateDatumDto.html":{},"coverage.html":{}}}],["createdevicedto",{"_index":399,"title":{"classes/CreateDeviceDto.html":{}},"body":{"classes/CreateDeviceDto.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"classes/UpdateDeviceDto.html":{},"coverage.html":{}}}],["createdeviceownerdto",{"_index":416,"title":{"classes/CreateDeviceOwnerDto.html":{}},"body":{"classes/CreateDeviceOwnerDto.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"classes/UpdateDeviceOwnerDto.html":{},"coverage.html":{}}}],["createdevicetypedto",{"_index":426,"title":{"classes/CreateDeviceTypeDto.html":{}},"body":{"classes/CreateDeviceTypeDto.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"classes/UpdateDeviceTypeDto.html":{},"coverage.html":{}}}],["createdto",{"_index":320,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/LocationController.html":{},"injectables/ReportsTemplatesService.html":{}}}],["createlocationdto",{"_index":431,"title":{"classes/CreateLocationDto.html":{}},"body":{"classes/CreateLocationDto.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"classes/UpdateLocationDto.html":{},"coverage.html":{}}}],["createpdfbinary",{"_index":1018,"title":{},"body":{"injectables/PdfService.html":{}}}],["createpdfbinary(user_id",{"_index":1023,"title":{},"body":{"injectables/PdfService.html":{}}}],["createprofiledto",{"_index":450,"title":{"classes/CreateProfileDto.html":{}},"body":{"classes/CreateProfileDto.html":{},"injectables/ProfilesService.html":{},"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["createreporttemplatedto",{"_index":481,"title":{"classes/CreateReportTemplateDto.html":{}},"body":{"classes/CreateReportTemplateDto.html":{},"injectables/ReportsTemplatesService.html":{},"classes/UpdateReportDto.html":{},"coverage.html":{}}}],["credentials",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["crud",{"_index":519,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["current",{"_index":523,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{}}}],["cw",{"_index":491,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{}}}],["cw_device_locations",{"_index":767,"title":{},"body":{"injectables/DeviceLocationRepository.html":{}}}],["cw_device_owners",{"_index":773,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{}}}],["cw_device_owners.controller",{"_index":545,"title":{},"body":{"modules/CwDeviceOwnersModule.html":{}}}],["cw_device_owners.service",{"_index":514,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{}}}],["cw_device_owners/cw_device_owners.module",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["cw_device_type",{"_index":791,"title":{},"body":{"injectables/DeviceTypeRepository.html":{}}}],["cw_device_type.controller",{"_index":588,"title":{},"body":{"modules/CwDeviceTypeModule.html":{}}}],["cw_device_type.service",{"_index":575,"title":{},"body":{"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{}}}],["cw_devices",{"_index":784,"title":{},"body":{"injectables/DeviceRepository.html":{}}}],["cw_devices.controller",{"_index":623,"title":{},"body":{"modules/CwDevicesModule.html":{}}}],["cw_devices.service",{"_index":606,"title":{},"body":{"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{}}}],["cw_devices/cw_devices.module",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["cw_locations",{"_index":939,"title":{},"body":{"injectables/LocationRepository.html":{}}}],["cwdeviceownerscontroller",{"_index":489,"title":{"controllers/CwDeviceOwnersController.html":{}},"body":{"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"coverage.html":{}}}],["cwdeviceownersmodule",{"_index":65,"title":{"modules/CwDeviceOwnersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/PdfModule.html":{},"modules.html":{},"overview.html":{}}}],["cwdeviceownersservice",{"_index":513,"title":{"injectables/CwDeviceOwnersService.html":{}},"body":{"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"modules/DataModule.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"coverage.html":{},"overview.html":{}}}],["cwdevicescontroller",{"_index":603,"title":{"controllers/CwDevicesController.html":{}},"body":{"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"coverage.html":{}}}],["cwdevicesmodule",{"_index":66,"title":{"modules/CwDevicesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/PdfModule.html":{},"modules.html":{},"overview.html":{}}}],["cwdevicesservice",{"_index":605,"title":{"injectables/CwDevicesService.html":{}},"body":{"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"modules/PdfModule.html":{},"coverage.html":{},"overview.html":{}}}],["cwdevicetypecontroller",{"_index":568,"title":{"controllers/CwDeviceTypeController.html":{}},"body":{"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"coverage.html":{}}}],["cwdevicetypemodule",{"_index":581,"title":{"modules/CwDeviceTypeModule.html":{}},"body":{"modules/CwDeviceTypeModule.html":{},"modules/DataModule.html":{},"modules/PdfModule.html":{},"modules.html":{},"overview.html":{}}}],["cwdevicetypeservice",{"_index":574,"title":{"injectables/CwDeviceTypeService.html":{}},"body":{"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseRepository.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"injectables/GeolocationService.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["data.controller",{"_index":692,"title":{},"body":{"modules/DataModule.html":{}}}],["data.map(item",{"_index":1086,"title":{},"body":{"injectables/PdfService.html":{}}}],["data.service",{"_index":664,"title":{},"body":{"controllers/DataController.html":{},"modules/DataModule.html":{}}}],["data/data.module",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["data[0]?.dev_eui",{"_index":1101,"title":{},"body":{"injectables/PdfService.html":{}}}],["data_table",{"_index":746,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["database",{"_index":561,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/ProfileRepository.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"injectables/SupabaseService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["database.types",{"_index":562,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/ProfileRepository.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"injectables/SupabaseService.html":{}}}],["database.types.ts",{"_index":1317,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["database['public']['tables']['cw_device_locations']['row",{"_index":765,"title":{},"body":{"injectables/DeviceLocationRepository.html":{}}}],["database['public']['tables']['cw_device_owners']['row",{"_index":565,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"injectables/DeviceOwnerRepository.html":{}}}],["database['public']['tables']['cw_device_type']['row",{"_index":577,"title":{},"body":{"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/DeviceTypeRepository.html":{}}}],["database['public']['tables']['cw_devices']['row",{"_index":610,"title":{},"body":{"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"injectables/DeviceRepository.html":{}}}],["database['public']['tables']['cw_locations']['row",{"_index":924,"title":{},"body":{"controllers/LocationController.html":{},"injectables/LocationRepository.html":{}}}],["database['public']['tables']['profiles']['row",{"_index":1114,"title":{},"body":{"injectables/ProfileRepository.html":{}}}],["database['public']['tables']['reports_templates']['row",{"_index":1237,"title":{},"body":{"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{}}}],["datacontroller",{"_index":634,"title":{"controllers/DataController.html":{}},"body":{"controllers/DataController.html":{},"modules/DataModule.html":{},"coverage.html":{}}}],["datamodule",{"_index":67,"title":{"modules/DataModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/PdfModule.html":{},"modules.html":{},"overview.html":{}}}],["datarepository",{"_index":690,"title":{"injectables/DataRepository.html":{}},"body":{"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"coverage.html":{},"overview.html":{}}}],["datarows",{"_index":1085,"title":{},"body":{"injectables/PdfService.html":{}}}],["dataservice",{"_index":663,"title":{"injectables/DataService.html":{}},"body":{"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"modules/PdfModule.html":{},"injectables/PdfService.html":{},"coverage.html":{},"overview.html":{}}}],["datatable",{"_index":750,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["date().toisostring",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["datum",{"_index":753,"title":{"classes/Datum.html":{}},"body":{"classes/Datum.html":{},"coverage.html":{}}}],["datum.dto",{"_index":665,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"classes/UpdateDatumDto.html":{}}}],["datum.dto.ts",{"_index":398,"title":{},"body":{"classes/CreateDatumDto.html":{},"classes/UpdateDatumDto.html":{},"coverage.html":{}}}],["declarations",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/LocationModule.html":{},"modules/PdfModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/ReportsTemplatesModule.html":{},"modules/SupabaseModule.html":{},"overview.html":{}}}],["decorators",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/BaseController.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"controllers/GeolocationController.html":{},"controllers/HealthController.html":{},"controllers/LocationController.html":{},"classes/LoginDto.html":{},"controllers/PdfController.html":{},"classes/PdfDTO.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"controllers/RelayController.html":{},"controllers/ReportsTemplatesController.html":{},"classes/UserAuthDto.html":{}}}],["default",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/BaseRepository.html":{},"controllers/DataController.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/PdfService.html":{},"injectables/ReportTemplatesRepository.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"controllers/GeolocationController.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"controllers/PdfController.html":{},"classes/PdfDTO.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"controllers/ReportsTemplatesController.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{},"classes/UserAuthDto.html":{}}}],["delete",{"_index":344,"title":{},"body":{"classes/BaseRepository.html":{},"classes/BaseService.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{}}}],["delete(':id",{"_index":536,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/DataController.html":{}}}],["delete(id",{"_index":354,"title":{},"body":{"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/IRepositoryBase.html":{},"injectables/LocationRepository.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{}}}],["demonstration",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["dependencies",{"_index":55,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/LocationModule.html":{},"modules/PdfModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/ReportsTemplatesModule.html":{},"modules/SupabaseModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":643,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["desc.'})@apibearerauth('jwt')@get",{"_index":657,"title":{},"body":{"controllers/DataController.html":{}}}],["description",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"controllers/LocationController.html":{},"classes/LoginDto.html":{},"classes/PdfDTO.html":{},"controllers/RelayController.html":{},"classes/UserAuthDto.html":{},"index.html":{},"properties.html":{}}}],["dev",{"_index":992,"title":{},"body":{"classes/PdfDTO.html":{}}}],["dev_eui",{"_index":402,"title":{},"body":{"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateReportTemplateDto.html":{},"injectables/CwDevicesService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{}}}],["dev_type",{"_index":602,"title":{},"body":{"injectables/CwDeviceTypeService.html":{},"injectables/DeviceTypeRepository.html":{}}}],["deveui",{"_index":554,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"controllers/PdfController.html":{},"classes/PdfDTO.html":{},"injectables/PdfService.html":{},"injectables/ReportsTemplatesService.html":{}}}],["device",{"_index":418,"title":{},"body":{"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"classes/PdfDTO.html":{},"injectables/ReportTemplatesRepository.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"coverage.html":{}}}],["device.'})@apiquery({name",{"_index":651,"title":{},"body":{"controllers/DataController.html":{}}}],["device.dto",{"_index":608,"title":{},"body":{"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"classes/UpdateDeviceDto.html":{}}}],["device.dto.ts",{"_index":401,"title":{},"body":{"classes/CreateDeviceDto.html":{},"classes/UpdateDeviceDto.html":{},"coverage.html":{}}}],["device.dto.ts:10",{"_index":407,"title":{},"body":{"classes/CreateDeviceDto.html":{}}}],["device.dto.ts:14",{"_index":410,"title":{},"body":{"classes/CreateDeviceDto.html":{}}}],["device.dto.ts:18",{"_index":408,"title":{},"body":{"classes/CreateDeviceDto.html":{}}}],["device.dto.ts:22",{"_index":411,"title":{},"body":{"classes/CreateDeviceDto.html":{}}}],["device.dto.ts:6",{"_index":406,"title":{},"body":{"classes/CreateDeviceDto.html":{}}}],["device.type",{"_index":743,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["deviceid",{"_index":1191,"title":{},"body":{"injectables/RelayService.html":{}}}],["devicelocationrepository",{"_index":755,"title":{"injectables/DeviceLocationRepository.html":{}},"body":{"injectables/DeviceLocationRepository.html":{},"coverage.html":{}}}],["devicelocationrow",{"_index":764,"title":{},"body":{"injectables/DeviceLocationRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["deviceowner",{"_index":736,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["deviceownerrepository",{"_index":543,"title":{"injectables/DeviceOwnerRepository.html":{}},"body":{"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"modules/DataModule.html":{},"injectables/DeviceOwnerRepository.html":{},"coverage.html":{},"overview.html":{}}}],["deviceownerrow",{"_index":564,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"injectables/DeviceOwnerRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["deviceownerservice",{"_index":721,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["devicerepository",{"_index":621,"title":{"injectables/DeviceRepository.html":{}},"body":{"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"modules/DataModule.html":{},"injectables/DeviceRepository.html":{},"coverage.html":{},"overview.html":{}}}],["devicerow",{"_index":783,"title":{},"body":{"injectables/DeviceRepository.html":{},"injectables/ReportTemplatesRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["devices",{"_index":526,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{}}}],["deviceservice",{"_index":673,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["devicesrow",{"_index":609,"title":{},"body":{"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["devicetype",{"_index":742,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["devicetypedata",{"_index":744,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["devicetypedata.data_table",{"_index":747,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["devicetyperepository",{"_index":586,"title":{"injectables/DeviceTypeRepository.html":{}},"body":{"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"modules/DataModule.html":{},"injectables/DeviceTypeRepository.html":{},"coverage.html":{},"overview.html":{}}}],["devicetyperow",{"_index":576,"title":{},"body":{"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/DeviceTypeRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["devicetypeservice",{"_index":674,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["devtype",{"_index":598,"title":{},"body":{"injectables/CwDeviceTypeService.html":{}}}],["direction",{"_index":656,"title":{},"body":{"controllers/DataController.html":{}}}],["directly",{"_index":1097,"title":{},"body":{"injectables/PdfService.html":{}}}],["disposition",{"_index":984,"title":{},"body":{"controllers/PdfController.html":{}}}],["dist",{"_index":1034,"title":{},"body":{"injectables/PdfService.html":{}}}],["docdefinition",{"_index":1059,"title":{},"body":{"injectables/PdfService.html":{}}}],["docs",{"_index":847,"title":{},"body":{"controllers/HealthController.html":{}}}],["documentation",{"_index":1314,"title":{},"body":{"coverage.html":{}}}],["downlink",{"_index":1222,"title":{},"body":{"injectables/RelayService.html":{}}}],["downlinks",{"_index":1201,"title":{},"body":{"injectables/RelayService.html":{}}}],["dragino",{"_index":1188,"title":{},"body":{"injectables/RelayService.html":{}}}],["dto",{"_index":333,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/ReportsTemplatesService.html":{}}}],["dto/create",{"_index":515,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"injectables/ProfilesService.html":{},"injectables/ReportsTemplatesService.html":{}}}],["dto/update",{"_index":517,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"injectables/LocationService.html":{},"injectables/ReportsTemplatesService.html":{}}}],["dtos/userauth.dto",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{}}}],["efficient",{"_index":1381,"title":{},"body":{"index.html":{}}}],["email",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateProfileDto.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"classes/LoginDto.html":{},"classes/UserAuthDto.html":{}}}],["employer",{"_index":455,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["encoded",{"_index":1205,"title":{},"body":{"injectables/RelayService.html":{}}}],["endpoint",{"_index":897,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["entity",{"_index":875,"title":{},"body":{"interfaces/IRepositoryBase.html":{},"interfaces/RepositoryInterface.html":{}}}],["enum",{"_index":1153,"title":{},"body":{"controllers/RelayController.html":{}}}],["enumerations",{"_index":1370,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":1321,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["env",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["env.development",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["env.development.local",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["eq('api_key",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["eq('dev_eui",{"_index":709,"title":{},"body":{"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["eq('dev_type",{"_index":793,"title":{},"body":{"injectables/DeviceTypeRepository.html":{}}}],["eq('id",{"_index":716,"title":{},"body":{"injectables/DataRepository.html":{},"injectables/ProfileRepository.html":{}}}],["eq('user_id",{"_index":775,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{}}}],["eq(idcolumn",{"_index":367,"title":{},"body":{"classes/BaseRepository.html":{}}}],["error",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseRepository.html":{},"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"guards/JwtAuthGuard.html":{},"injectables/ProfileRepository.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["error('deveui",{"_index":1052,"title":{},"body":{"injectables/PdfService.html":{}}}],["error('user",{"_index":1051,"title":{},"body":{"injectables/PdfService.html":{}}}],["error(`device",{"_index":776,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["error(`error",{"_index":829,"title":{},"body":{"injectables/GeolocationService.html":{},"injectables/RelayService.html":{}}}],["error(`failed",{"_index":713,"title":{},"body":{"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["error.message",{"_index":715,"title":{},"body":{"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["eui",{"_index":648,"title":{},"body":{"controllers/DataController.html":{},"classes/PdfDTO.html":{}}}],["example",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{}}}],["examplelink",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["excluded",{"_index":868,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["excludepaths",{"_index":866,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["excludepaths.includes(httpadapter.getrequesturl(request",{"_index":869,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["executioncontext",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpCacheInterceptor.html":{},"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["exist",{"_index":739,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["export",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDatumDto.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"classes/Datum.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"controllers/PdfController.html":{},"classes/PdfDTO.html":{},"modules/PdfModule.html":{},"injectables/PdfService.html":{},"classes/Profile.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"modules/RelayModule.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"controllers/ReportsTemplatesController.html":{},"modules/ReportsTemplatesModule.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateReportDto.html":{},"classes/UserAuthDto.html":{}}}],["exports",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/LocationModule.html":{},"modules/PdfModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/ReportsTemplatesModule.html":{},"modules/SupabaseModule.html":{},"overview.html":{}}}],["express",{"_index":974,"title":{},"body":{"controllers/PdfController.html":{},"dependencies.html":{}}}],["extends",{"_index":386,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/HttpCacheInterceptor.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateReportDto.html":{}}}],["extracttokenfromheader",{"_index":884,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["extracttokenfromheader(request",{"_index":890,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["f_port",{"_index":1207,"title":{},"body":{"injectables/RelayService.html":{}}}],["false",{"_index":647,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["fetch",{"_index":1074,"title":{},"body":{"injectables/PdfService.html":{}}}],["fetch(`https://geocode.maps.co/search?q=${address}&api_key=${process.env.geocoding_api_key",{"_index":827,"title":{},"body":{"injectables/GeolocationService.html":{}}}],["fetch(url",{"_index":1213,"title":{},"body":{"injectables/RelayService.html":{}}}],["fetchdataandreportfromdb",{"_index":1019,"title":{},"body":{"injectables/PdfService.html":{}}}],["fetchdataandreportfromdb(deveui",{"_index":1025,"title":{},"body":{"injectables/PdfService.html":{}}}],["fetched",{"_index":815,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["fetching",{"_index":830,"title":{},"body":{"injectables/GeolocationService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDatumDto.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"classes/Datum.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"controllers/PdfController.html":{},"classes/PdfDTO.html":{},"modules/PdfModule.html":{},"injectables/PdfService.html":{},"classes/Profile.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"modules/RelayModule.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"controllers/ReportsTemplatesController.html":{},"modules/ReportsTemplatesModule.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateReportDto.html":{},"classes/UserAuthDto.html":{},"coverage.html":{}}}],["filename=\"report.pdf",{"_index":986,"title":{},"body":{"controllers/PdfController.html":{}}}],["filter",{"_index":649,"title":{},"body":{"controllers/DataController.html":{}}}],["filters",{"_index":645,"title":{},"body":{"controllers/DataController.html":{}}}],["find",{"_index":717,"title":{},"body":{"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["findall",{"_index":314,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/IRepositoryBase.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{}}}],["findall(params",{"_index":724,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["findall(req",{"_index":638,"title":{},"body":{"controllers/DataController.html":{}}}],["findallbytable",{"_index":700,"title":{},"body":{"injectables/DataRepository.html":{}}}],["findallbytable(tablename",{"_index":703,"title":{},"body":{"injectables/DataRepository.html":{}}}],["findallparams",{"_index":725,"title":{"interfaces/FindAllParams.html":{}},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"coverage.html":{}}}],["findbydeveui",{"_index":778,"title":{},"body":{"injectables/DeviceRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["findbydeveui(undefined",{"_index":780,"title":{},"body":{"injectables/DeviceRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["findbydeveuianduid",{"_index":769,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{}}}],["findbydeveuianduid(dev_eui",{"_index":771,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{}}}],["findbydevicetype",{"_index":787,"title":{},"body":{"injectables/DeviceTypeRepository.html":{}}}],["findbydevicetype(undefined",{"_index":789,"title":{},"body":{"injectables/DeviceTypeRepository.html":{}}}],["findbyid",{"_index":345,"title":{},"body":{"classes/BaseRepository.html":{},"classes/BaseService.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/ProfileRepository.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{}}}],["findbyid(id",{"_index":359,"title":{},"body":{"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/IRepositoryBase.html":{},"injectables/LocationRepository.html":{},"injectables/ProfileRepository.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{}}}],["findbyidintable",{"_index":701,"title":{},"body":{"injectables/DataRepository.html":{}}}],["findbyidintable(tablename",{"_index":706,"title":{},"body":{"injectables/DataRepository.html":{}}}],["findone",{"_index":493,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/IRepositoryBase.html":{},"injectables/LocationService.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{}}}],["findone(@param('id",{"_index":530,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/DataController.html":{}}}],["findone(@req",{"_index":1129,"title":{},"body":{"controllers/ProfilesController.html":{}}}],["findone(id",{"_index":501,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"interfaces/IRepositoryBase.html":{},"injectables/LocationService.html":{},"injectables/ProfilesService.html":{},"interfaces/RepositoryInterface.html":{}}}],["findone(req",{"_index":1122,"title":{},"body":{"controllers/ProfilesController.html":{}}}],["fonts",{"_index":1016,"title":{},"body":{"modules/PdfModule.html":{},"injectables/PdfService.html":{}}}],["for.'})@isstring",{"_index":995,"title":{},"body":{"classes/PdfDTO.html":{}}}],["forbidden",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/RelayController.html":{}}}],["forbidden'})@apioperation({summary",{"_index":325,"title":{},"body":{"classes/BaseController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{}}}],["forbidden'})@apiresponse({status",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["format",{"_index":1282,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["found",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"guards/JwtAuthGuard.html":{},"injectables/ReportTemplatesRepository.html":{},"guards/SupabaseAuthGuard.html":{}}}],["framework",{"_index":1379,"title":{},"body":{"index.html":{}}}],["frm_payload",{"_index":1202,"title":{},"body":{"injectables/RelayService.html":{}}}],["from('api_keys",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["from('cw_device_owners",{"_index":774,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{}}}],["from('cw_device_type",{"_index":792,"title":{},"body":{"injectables/DeviceTypeRepository.html":{}}}],["from('cw_devices",{"_index":785,"title":{},"body":{"injectables/DeviceRepository.html":{}}}],["from('profiles",{"_index":1117,"title":{},"body":{"injectables/ProfileRepository.html":{}}}],["from('reports_templates",{"_index":1239,"title":{},"body":{"injectables/ReportTemplatesRepository.html":{}}}],["from(tablename",{"_index":708,"title":{},"body":{"injectables/DataRepository.html":{}}}],["from(this.tablename",{"_index":366,"title":{},"body":{"classes/BaseRepository.html":{}}}],["full_name",{"_index":456,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["function",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/BaseServiceInterface.html":{},"coverage.html":{}}}],["functions",{"_index":1372,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":993,"title":{},"body":{"classes/PdfDTO.html":{}}}],["geolocation",{"_index":796,"title":{},"body":{"controllers/GeolocationController.html":{},"injectables/GeolocationService.html":{}}}],["geolocation.controller",{"_index":819,"title":{},"body":{"modules/GeolocationModule.html":{}}}],["geolocation.service",{"_index":801,"title":{},"body":{"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{}}}],["geolocation/geolocation.module",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["geolocationcontroller",{"_index":794,"title":{"controllers/GeolocationController.html":{}},"body":{"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"coverage.html":{}}}],["geolocationmodule",{"_index":68,"title":{"modules/GeolocationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GeolocationModule.html":{},"modules.html":{},"overview.html":{}}}],["geolocationservice",{"_index":800,"title":{"injectables/GeolocationService.html":{}},"body":{"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"injectables/GeolocationService.html":{},"coverage.html":{},"overview.html":{}}}],["get(':id",{"_index":529,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/DataController.html":{}}}],["get('address",{"_index":804,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["get('control",{"_index":1167,"title":{},"body":{"controllers/RelayController.html":{}}}],["get('user",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@apibearerauth('jwt",{"_index":1123,"title":{},"body":{"controllers/ProfilesController.html":{}}}],["get()@apisecurity('x",{"_index":969,"title":{},"body":{"controllers/PdfController.html":{}}}],["get()@healthcheck",{"_index":837,"title":{},"body":{"controllers/HealthController.html":{}}}],["getdevicebydeveui",{"_index":626,"title":{},"body":{"injectables/CwDevicesService.html":{}}}],["getdevicebydeveui(deveui",{"_index":629,"title":{},"body":{"injectables/CwDevicesService.html":{}}}],["getdeviceownerbydeveuianduid",{"_index":549,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{}}}],["getdeviceownerbydeveuianduid(deveui",{"_index":552,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{}}}],["getdevicetypebydevtype",{"_index":593,"title":{},"body":{"injectables/CwDeviceTypeService.html":{}}}],["getdevicetypebydevtype(devtype",{"_index":596,"title":{},"body":{"injectables/CwDeviceTypeService.html":{}}}],["getfile",{"_index":967,"title":{},"body":{"controllers/PdfController.html":{}}}],["getfile(res",{"_index":968,"title":{},"body":{"controllers/PdfController.html":{}}}],["getgeolocation",{"_index":822,"title":{},"body":{"injectables/GeolocationService.html":{}}}],["getgeolocation(address",{"_index":823,"title":{},"body":{"injectables/GeolocationService.html":{}}}],["gethello",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getprotectedroute",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GeolocationController.html":{},"controllers/RelayController.html":{}}}],["getprotectedroute(@query('state",{"_index":1169,"title":{},"body":{"controllers/RelayController.html":{}}}],["getprotectedroute(@req",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprotectedroute(req",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprotectedroute(state",{"_index":1149,"title":{},"body":{"controllers/RelayController.html":{}}}],["getreporttemplatebydeveui",{"_index":1258,"title":{},"body":{"injectables/ReportsTemplatesService.html":{}}}],["getreporttemplatebydeveui(deveui",{"_index":1261,"title":{},"body":{"injectables/ReportsTemplatesService.html":{}}}],["getreporttemplates",{"_index":1244,"title":{},"body":{"controllers/ReportsTemplatesController.html":{}}}],["getsupabaseclient",{"_index":365,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/ProfileRepository.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/SupabaseService.html":{}}}],["getswaggerconfig",{"_index":1336,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getswaggerconfig(version",{"_index":1374,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getting",{"_index":1375,"title":{"index.html":{}},"body":{}}],["getuserbyid",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["global",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["graph",{"_index":1389,"title":{},"body":{"modules.html":{}}}],["gt('expires_at",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["guard",{"_index":130,"title":{"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/JwtAuthGuard.html":{},"coverage.html":{}}}],["guards",{"_index":881,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{},"overview.html":{}}}],["guards/supabase.guard",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{}}}],["hardcoded",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["header",{"_index":1106,"title":{},"body":{"injectables/PdfService.html":{},"guards/SupabaseAuthGuard.html":{}}}],["headers",{"_index":1215,"title":{},"body":{"injectables/RelayService.html":{}}}],["health",{"_index":835,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":853,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":841,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":839,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":833,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":69,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["hello",{"_index":137,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":1359,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["hexstring",{"_index":1184,"title":{},"body":{"injectables/RelayService.html":{}}}],["hextobase64",{"_index":1179,"title":{},"body":{"injectables/RelayService.html":{}}}],["hextobase64(hexstring",{"_index":1182,"title":{},"body":{"injectables/RelayService.html":{}}}],["high",{"_index":1212,"title":{},"body":{"injectables/RelayService.html":{}}}],["house",{"_index":807,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["http",{"_index":844,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpadapter",{"_index":862,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["httpadapter.getrequestmethod(request",{"_index":865,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["httpadapter.getrequesturl(request",{"_index":870,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["httpcacheinterceptor",{"_index":854,"title":{"injectables/HttpCacheInterceptor.html":{}},"body":{"injectables/HttpCacheInterceptor.html":{},"coverage.html":{}}}],["httpexception",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["httphealthindicator",{"_index":840,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":851,"title":{},"body":{"modules/HealthModule.html":{}}}],["https://api.cropwatch.io/api/auth/user",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://docs.nestjs.com",{"_index":848,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpstatus",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["id",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"classes/CreateProfileDto.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/IRepositoryBase.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{}}}],["id'})@delete(':id",{"_index":506,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["id'})@get(':id",{"_index":503,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["id'})@patch(':id",{"_index":509,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["id.replace('bearer",{"_index":1144,"title":{},"body":{"injectables/ProfilesService.html":{}}}],["idcolumn",{"_index":355,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["identifier",{"_index":1315,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["implementation",{"_index":1278,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["implements",{"_index":373,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["import",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HttpCacheInterceptor.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"controllers/PdfController.html":{},"classes/PdfDTO.html":{},"modules/PdfModule.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"modules/RelayModule.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"controllers/ReportsTemplatesController.html":{},"modules/ReportsTemplatesModule.html":{},"injectables/ReportsTemplatesService.html":{},"guards/SupabaseAuthGuard.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateReportDto.html":{},"classes/UserAuthDto.html":{}}}],["imports",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/LocationModule.html":{},"modules/PdfModule.html":{},"modules/ProfilesModule.html":{},"modules/ReportsTemplatesModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"controllers/PdfController.html":{},"classes/PdfDTO.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"controllers/ReportsTemplatesController.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{},"classes/UserAuthDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDatumDto.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"classes/Datum.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"controllers/PdfController.html":{},"classes/PdfDTO.html":{},"modules/PdfModule.html":{},"injectables/PdfService.html":{},"classes/Profile.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"modules/RelayModule.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"controllers/ReportsTemplatesController.html":{},"modules/ReportsTemplatesModule.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateReportDto.html":{},"classes/UserAuthDto.html":{}}}],["inherited",{"_index":555,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{}}}],["initialize",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/SupabaseService.html":{}}}],["injectable",{"_index":131,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/GeolocationService.html":{},"injectables/HttpCacheInterceptor.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"injectables/ProfilesService.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"injectables/SupabaseService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"injectables/GeolocationService.html":{},"injectables/HttpCacheInterceptor.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"injectables/ProfilesService.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{},"coverage.html":{}}}],["injectables",{"_index":133,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/GeolocationService.html":{},"injectables/HttpCacheInterceptor.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"injectables/ProfilesService.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"injectables/SupabaseService.html":{},"overview.html":{}}}],["insert",{"_index":1098,"title":{},"body":{"injectables/PdfService.html":{}}}],["insert(item",{"_index":369,"title":{},"body":{"classes/BaseRepository.html":{}}}],["insertdataintoreport",{"_index":1020,"title":{},"body":{"injectables/PdfService.html":{}}}],["insertdataintoreport(reportjson",{"_index":1027,"title":{},"body":{"injectables/PdfService.html":{}}}],["integration",{"_index":1219,"title":{},"body":{"injectables/RelayService.html":{}}}],["integration/my",{"_index":1218,"title":{},"body":{"injectables/RelayService.html":{}}}],["interface",{"_index":332,"title":{"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"interfaces/FindAllParams.html":{},"interfaces/IRepositoryBase.html":{},"interfaces/RepositoryInterface.html":{}},"body":{"classes/BaseController.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"interfaces/IRepositoryBase.html":{},"interfaces/RepositoryInterface.html":{},"coverage.html":{}}}],["interfaces",{"_index":393,"title":{},"body":{"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"interfaces/FindAllParams.html":{},"interfaces/IRepositoryBase.html":{},"interfaces/RepositoryInterface.html":{},"overview.html":{}}}],["irepositorybase",{"_index":871,"title":{"interfaces/IRepositoryBase.html":{}},"body":{"interfaces/IRepositoryBase.html":{},"interfaces/RepositoryInterface.html":{},"coverage.html":{}}}],["is_public_key",{"_index":892,"title":{},"body":{"guards/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isboolean",{"_index":478,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["isemail",{"_index":479,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/LoginDto.html":{},"classes/UserAuthDto.html":{}}}],["isgetrequest",{"_index":864,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["isglobal",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["islatitude",{"_index":448,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["islongitude",{"_index":449,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["isnotempty",{"_index":412,"title":{},"body":{"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{}}}],["isnotempty()@isnumber",{"_index":409,"title":{},"body":{"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateReportTemplateDto.html":{}}}],["isnotempty()@isstring",{"_index":405,"title":{},"body":{"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{}}}],["isnumber",{"_index":413,"title":{},"body":{"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateReportTemplateDto.html":{}}}],["isoptional",{"_index":447,"title":{},"body":{"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{}}}],["isoptional()@isboolean",{"_index":463,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["isoptional()@isemail",{"_index":467,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["isoptional()@islatitude",{"_index":439,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["isoptional()@islongitude",{"_index":441,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["isoptional()@isnumber",{"_index":443,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["isoptional()@isstring",{"_index":437,"title":{},"body":{"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{}}}],["isoptional()@isstring()@isurl",{"_index":465,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["isoptional()@isurl",{"_index":476,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["ispublic",{"_index":893,"title":{},"body":{"guards/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["isstring",{"_index":414,"title":{},"body":{"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"classes/LoginDto.html":{},"classes/PdfDTO.html":{},"classes/UserAuthDto.html":{}}}],["isurl",{"_index":480,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["isvalidapikey",{"_index":902,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["italic.ttf",{"_index":1040,"title":{},"body":{"injectables/PdfService.html":{}}}],["italics",{"_index":1039,"title":{},"body":{"injectables/PdfService.html":{}}}],["item",{"_index":339,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseRepository.html":{},"interfaces/BaseServiceInterface.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["item'})@post",{"_index":326,"title":{},"body":{"classes/BaseController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{}}}],["item.created_at",{"_index":1088,"title":{},"body":{"injectables/PdfService.html":{}}}],["item.dev_eui",{"_index":1093,"title":{},"body":{"injectables/PdfService.html":{}}}],["item.dewpointc",{"_index":1089,"title":{},"body":{"injectables/PdfService.html":{}}}],["item.humidity",{"_index":1090,"title":{},"body":{"injectables/PdfService.html":{}}}],["item.id",{"_index":1087,"title":{},"body":{"injectables/PdfService.html":{}}}],["item.profile_id",{"_index":1094,"title":{},"body":{"injectables/PdfService.html":{}}}],["item.temperaturec",{"_index":1091,"title":{},"body":{"injectables/PdfService.html":{}}}],["item.vpd",{"_index":1092,"title":{},"body":{"injectables/PdfService.html":{}}}],["items",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{}}}],["items'})@get",{"_index":329,"title":{},"body":{"classes/BaseController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{}}}],["join",{"_index":1005,"title":{},"body":{"modules/PdfModule.html":{},"injectables/PdfService.html":{}}}],["join(__dirname",{"_index":1015,"title":{},"body":{"modules/PdfModule.html":{}}}],["join(process.cwd",{"_index":1033,"title":{},"body":{"injectables/PdfService.html":{}}}],["js",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{},"dependencies.html":{}}}],["json",{"_index":1096,"title":{},"body":{"injectables/PdfService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["json.parse(reportjson",{"_index":1102,"title":{},"body":{"injectables/PdfService.html":{}}}],["json.stringify(data",{"_index":1220,"title":{},"body":{"injectables/RelayService.html":{}}}],["json.stringify(reportjsonresponse.template",{"_index":1082,"title":{},"body":{"injectables/PdfService.html":{}}}],["jwt",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"classes/LoginDto.html":{},"classes/UserAuthDto.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":96,"title":{"guards/JwtAuthGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtservice",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["key",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CwDevicesController.html":{},"guards/JwtAuthGuard.html":{},"controllers/PdfController.html":{},"guards/SupabaseAuthGuard.html":{}}}],["key'])@apibearerauth('jwt')@useguards(supabaseauthguard",{"_index":970,"title":{},"body":{"controllers/PdfController.html":{}}}],["kingdom",{"_index":814,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["kingsway",{"_index":809,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["last_login",{"_index":457,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["lat",{"_index":434,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["later",{"_index":1078,"title":{},"body":{"injectables/PdfService.html":{}}}],["legend",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/LocationModule.html":{},"modules/PdfModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/ReportsTemplatesModule.html":{},"modules/SupabaseModule.html":{},"overview.html":{}}}],["length",{"_index":987,"title":{},"body":{"controllers/PdfController.html":{}}}],["license",{"_index":1398,"title":{},"body":{"properties.html":{}}}],["light.ttf",{"_index":1045,"title":{},"body":{"injectables/PdfService.html":{}}}],["limit",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["line_notify_token",{"_index":458,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["link",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["linkages",{"_index":521,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["links",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{}}}],["literal",{"_index":781,"title":{},"body":{"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/ReportTemplatesRepository.html":{},"miscellaneous/typealiases.html":{}}}],["location",{"_index":805,"title":{"classes/Location.html":{}},"body":{"controllers/GeolocationController.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"coverage.html":{}}}],["location.controller",{"_index":934,"title":{},"body":{"modules/LocationModule.html":{}}}],["location.dto",{"_index":922,"title":{},"body":{"controllers/LocationController.html":{},"injectables/LocationService.html":{},"classes/UpdateLocationDto.html":{}}}],["location.dto.ts",{"_index":433,"title":{},"body":{"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{},"coverage.html":{}}}],["location.dto.ts:11",{"_index":438,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["location.dto.ts:15",{"_index":440,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["location.dto.ts:19",{"_index":442,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["location.dto.ts:23",{"_index":444,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["location.dto.ts:27",{"_index":446,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["location.dto.ts:7",{"_index":445,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["location.service",{"_index":921,"title":{},"body":{"controllers/LocationController.html":{},"modules/LocationModule.html":{}}}],["location/location.module",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["locationcontroller",{"_index":918,"title":{"controllers/LocationController.html":{}},"body":{"controllers/LocationController.html":{},"modules/LocationModule.html":{},"coverage.html":{}}}],["locationmodule",{"_index":70,"title":{"modules/LocationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LocationModule.html":{},"modules.html":{},"overview.html":{}}}],["locationrepository",{"_index":932,"title":{"injectables/LocationRepository.html":{}},"body":{"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"coverage.html":{},"overview.html":{}}}],["locationrow",{"_index":938,"title":{},"body":{"injectables/LocationRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["locationservice",{"_index":920,"title":{"injectables/LocationService.html":{}},"body":{"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"coverage.html":{},"overview.html":{}}}],["locationsrow",{"_index":923,"title":{},"body":{"controllers/LocationController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["logger",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["logic",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(@body",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{}}}],["logindto",{"_index":163,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"classes/UserAuthDto.html":{},"coverage.html":{}}}],["logindto.password",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["london",{"_index":810,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["long",{"_index":435,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["lt",{"_index":1189,"title":{},"body":{"injectables/RelayService.html":{}}}],["management",{"_index":614,"title":{},"body":{"controllers/CwDevicesController.html":{}}}],["manager",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/HttpCacheInterceptor.html":{},"dependencies.html":{}}}],["map",{"_index":1077,"title":{},"body":{"injectables/PdfService.html":{}}}],["map_zoom",{"_index":436,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["marked",{"_index":898,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["matching",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDatumDto.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"classes/Datum.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"controllers/PdfController.html":{},"classes/PdfDTO.html":{},"modules/PdfModule.html":{},"injectables/PdfService.html":{},"classes/Profile.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"modules/RelayModule.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"controllers/ReportsTemplatesController.html":{},"modules/ReportsTemplatesModule.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateReportDto.html":{},"classes/UserAuthDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.random",{"_index":49,"title":{},"body":{"controllers/AppController.html":{}}}],["max",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["maximum",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["medium.ttf",{"_index":1038,"title":{},"body":{"injectables/PdfService.html":{}}}],["mediumitalic.ttf",{"_index":1042,"title":{},"body":{"injectables/PdfService.html":{}}}],["message",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GeolocationController.html":{},"controllers/RelayController.html":{}}}],["metadata",{"_index":1365,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":1214,"title":{},"body":{"injectables/RelayService.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"controllers/GeolocationController.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"controllers/PdfController.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"controllers/ReportsTemplatesController.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{}}}],["miscellaneous",{"_index":1369,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":52,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/HealthModule.html":{},"modules/LocationModule.html":{},"modules/PdfModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/ReportsTemplatesModule.html":{},"modules/SupabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/HealthModule.html":{},"modules/LocationModule.html":{},"modules/PdfModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/ReportsTemplatesModule.html":{},"modules/SupabaseModule.html":{},"overview.html":{}}}],["modules",{"_index":54,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/HealthModule.html":{},"modules/LocationModule.html":{},"modules/PdfModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/ReportsTemplatesModule.html":{},"modules/SupabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["name",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateReportTemplateDto.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"injectables/GeolocationService.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"controllers/PdfController.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{},"miscellaneous/functions.html":{}}}],["needed",{"_index":1209,"title":{},"body":{"injectables/RelayService.html":{}}}],["nest",{"_index":48,"title":{},"body":{"controllers/AppController.html":{}}}],["nestjs/axios",{"_index":852,"title":{},"body":{"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/cache",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/HttpCacheInterceptor.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HttpCacheInterceptor.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"controllers/PdfController.html":{},"modules/PdfModule.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"modules/RelayModule.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"controllers/ReportsTemplatesController.html":{},"modules/ReportsTemplatesModule.html":{},"injectables/ReportsTemplatesService.html":{},"guards/SupabaseAuthGuard.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/RelayService.html":{},"injectables/SupabaseService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"guards/JwtAuthGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":1343,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":1345,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":1003,"title":{},"body":{"modules/PdfModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"controllers/GeolocationController.html":{},"controllers/LocationController.html":{},"classes/LoginDto.html":{},"controllers/PdfController.html":{},"classes/PdfDTO.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"controllers/RelayController.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateReportDto.html":{},"classes/UserAuthDto.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":842,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"dependencies.html":{}}}],["new",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"injectables/GeolocationService.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/PdfService.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"guards/SupabaseAuthGuard.html":{},"coverage.html":{}}}],["node.js",{"_index":1378,"title":{},"body":{"index.html":{}}}],["normal",{"_index":1032,"title":{},"body":{"injectables/PdfService.html":{}}}],["notacceptableexception",{"_index":732,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["notacceptableexception('device",{"_index":738,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["notfoundexception",{"_index":733,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["notfoundexception('data",{"_index":748,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["notfoundexception('device",{"_index":741,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["notimplementedexception",{"_index":734,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["noto_sans_jp",{"_index":1043,"title":{},"body":{"injectables/PdfService.html":{}}}],["now",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["null",{"_index":368,"title":{},"body":{"classes/BaseRepository.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"injectables/DataRepository.html":{},"guards/JwtAuthGuard.html":{},"injectables/ProfileRepository.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateReportTemplateDto.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"interfaces/IRepositoryBase.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"miscellaneous/typealiases.html":{}}}],["object",{"_index":900,"title":{},"body":{"guards/JwtAuthGuard.html":{},"injectables/PdfService.html":{},"guards/SupabaseAuthGuard.html":{}}}],["offcommand",{"_index":1198,"title":{},"body":{"injectables/RelayService.html":{}}}],["ok",{"_index":335,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{}}}],["ok'})@apiresponse({status",{"_index":328,"title":{},"body":{"classes/BaseController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{}}}],["once",{"_index":1103,"title":{},"body":{"injectables/PdfService.html":{}}}],["oncommand",{"_index":1196,"title":{},"body":{"injectables/RelayService.html":{}}}],["open",{"_index":1155,"title":{},"body":{"controllers/RelayController.html":{},"miscellaneous/enumerations.html":{}}}],["operationid",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["operations",{"_index":520,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{}}}],["optional",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"injectables/GeolocationService.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"controllers/PdfController.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":641,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"injectables/PdfService.html":{}}}],["order('created_at",{"_index":711,"title":{},"body":{"injectables/DataRepository.html":{}}}],["out",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/LocationModule.html":{},"modules/PdfModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/ReportsTemplatesModule.html":{},"modules/SupabaseModule.html":{},"overview.html":{}}}],["overview",{"_index":1391,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":502,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"interfaces/FindAllParams.html":{}}}],["owner'})@post",{"_index":497,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["owner.dto",{"_index":516,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"classes/UpdateDeviceOwnerDto.html":{}}}],["owner.dto.ts",{"_index":419,"title":{},"body":{"classes/CreateDeviceOwnerDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"coverage.html":{}}}],["owner.dto.ts:11",{"_index":423,"title":{},"body":{"classes/CreateDeviceOwnerDto.html":{}}}],["owner.dto.ts:15",{"_index":424,"title":{},"body":{"classes/CreateDeviceOwnerDto.html":{}}}],["owner.dto.ts:19",{"_index":425,"title":{},"body":{"classes/CreateDeviceOwnerDto.html":{}}}],["owner.dto.ts:7",{"_index":422,"title":{},"body":{"classes/CreateDeviceOwnerDto.html":{}}}],["owner_id",{"_index":420,"title":{},"body":{"classes/CreateDeviceOwnerDto.html":{},"classes/CreateLocationDto.html":{}}}],["owners",{"_index":492,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["owners'})@get",{"_index":499,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["package",{"_index":268,"title":{"dependencies.html":{},"properties.html":{}},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["pagination",{"_index":676,"title":{},"body":{"controllers/DataController.html":{}}}],["pagination'})@apiquery({name",{"_index":646,"title":{},"body":{"controllers/DataController.html":{}}}],["param",{"_index":512,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"controllers/LocationController.html":{},"controllers/ProfilesController.html":{}}}],["parameters",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/GeolocationService.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"controllers/PdfController.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":727,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["parse",{"_index":1095,"title":{},"body":{"injectables/PdfService.html":{}}}],["parseint(byte",{"_index":1230,"title":{},"body":{"injectables/RelayService.html":{}}}],["partial",{"_index":352,"title":{},"body":{"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/IRepositoryBase.html":{},"injectables/LocationRepository.html":{},"injectables/ReportTemplatesRepository.html":{},"interfaces/RepositoryInterface.html":{}}}],["partialtype",{"_index":1297,"title":{},"body":{"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateReportDto.html":{}}}],["partialtype(createdatumdto",{"_index":1296,"title":{},"body":{"classes/UpdateDatumDto.html":{}}}],["partialtype(createdevicedto",{"_index":1299,"title":{},"body":{"classes/UpdateDeviceDto.html":{}}}],["partialtype(createdeviceownerdto",{"_index":1301,"title":{},"body":{"classes/UpdateDeviceOwnerDto.html":{}}}],["partialtype(createdevicetypedto",{"_index":1303,"title":{},"body":{"classes/UpdateDeviceTypeDto.html":{}}}],["partialtype(createlocationdto",{"_index":1305,"title":{},"body":{"classes/UpdateLocationDto.html":{}}}],["partialtype(createprofiledto",{"_index":1308,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["partialtype(createreporttemplatedto",{"_index":1310,"title":{},"body":{"classes/UpdateReportDto.html":{}}}],["passport",{"_index":1361,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/UserAuthDto.html":{}}}],["password'})@isstring",{"_index":960,"title":{},"body":{"classes/LoginDto.html":{}}}],["patch",{"_index":511,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"controllers/LocationController.html":{},"controllers/ProfilesController.html":{}}}],["patch(':id",{"_index":533,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/DataController.html":{}}}],["path",{"_index":1006,"title":{},"body":{"modules/PdfModule.html":{},"injectables/PdfService.html":{}}}],["payload",{"_index":1206,"title":{},"body":{"injectables/RelayService.html":{}}}],["payment",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{},"controllers/RelayController.html":{}}}],["pdf",{"_index":966,"title":{},"body":{"controllers/PdfController.html":{}}}],["pdf.controller",{"_index":1001,"title":{},"body":{"modules/PdfModule.html":{}}}],["pdf.controller.ts",{"_index":973,"title":{},"body":{"controllers/PdfController.html":{}}}],["pdf.service",{"_index":976,"title":{},"body":{"controllers/PdfController.html":{},"modules/PdfModule.html":{}}}],["pdf/pdf.module",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["pdfbuffer",{"_index":980,"title":{},"body":{"controllers/PdfController.html":{}}}],["pdfbuffer.length",{"_index":988,"title":{},"body":{"controllers/PdfController.html":{}}}],["pdfcontroller",{"_index":964,"title":{"controllers/PdfController.html":{}},"body":{"controllers/PdfController.html":{},"modules/PdfModule.html":{},"coverage.html":{}}}],["pdfdoc",{"_index":1063,"title":{},"body":{"injectables/PdfService.html":{}}}],["pdfdoc.end",{"_index":1073,"title":{},"body":{"injectables/PdfService.html":{}}}],["pdfdoc.on('data",{"_index":1067,"title":{},"body":{"injectables/PdfService.html":{}}}],["pdfdoc.on('end",{"_index":1070,"title":{},"body":{"injectables/PdfService.html":{}}}],["pdfdoc.on('error",{"_index":1072,"title":{},"body":{"injectables/PdfService.html":{}}}],["pdfdto",{"_index":990,"title":{"classes/PdfDTO.html":{}},"body":{"classes/PdfDTO.html":{},"coverage.html":{}}}],["pdfmake",{"_index":1048,"title":{},"body":{"injectables/PdfService.html":{},"dependencies.html":{}}}],["pdfmake/build/pdfmake",{"_index":1050,"title":{},"body":{"injectables/PdfService.html":{}}}],["pdfmodule",{"_index":71,"title":{"modules/PdfModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PdfModule.html":{},"modules.html":{},"overview.html":{}}}],["pdfprinter",{"_index":1047,"title":{},"body":{"injectables/PdfService.html":{}}}],["pdfprinter(this.fonts",{"_index":1058,"title":{},"body":{"injectables/PdfService.html":{}}}],["pdfservice",{"_index":975,"title":{"injectables/PdfService.html":{}},"body":{"controllers/PdfController.html":{},"modules/PdfModule.html":{},"injectables/PdfService.html":{},"coverage.html":{},"overview.html":{}}}],["permission_level",{"_index":421,"title":{},"body":{"classes/CreateDeviceOwnerDto.html":{}}}],["post",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"controllers/LocationController.html":{},"controllers/ProfilesController.html":{},"injectables/RelayService.html":{}}}],["post('login",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{},"controllers/GeolocationController.html":{},"controllers/HealthController.html":{},"controllers/LocationController.html":{},"controllers/PdfController.html":{},"controllers/ProfilesController.html":{},"controllers/RelayController.html":{},"controllers/ReportsTemplatesController.html":{}}}],["prepare",{"_index":1083,"title":{},"body":{"injectables/PdfService.html":{}}}],["printer",{"_index":1057,"title":{},"body":{"injectables/PdfService.html":{}}}],["printer.createpdfkitdocument(docdefinition",{"_index":1064,"title":{},"body":{"injectables/PdfService.html":{}}}],["priority",{"_index":1211,"title":{},"body":{"injectables/RelayService.html":{}}}],["private",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseRepository.html":{},"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"controllers/HealthController.html":{},"guards/JwtAuthGuard.html":{},"injectables/PdfService.html":{},"injectables/RelayService.html":{},"injectables/SupabaseService.html":{}}}],["process.env.dragino_api_key",{"_index":1194,"title":{},"body":{"injectables/RelayService.html":{}}}],["process.env.tti_base_url}/api/v3/as/applications/${appid}/devices/${deviceid}/down/replace",{"_index":1195,"title":{},"body":{"injectables/RelayService.html":{}}}],["profile",{"_index":525,"title":{"classes/Profile.html":{}},"body":{"controllers/CwDeviceOwnersController.html":{},"classes/Profile.html":{},"coverage.html":{}}}],["profile.dto",{"_index":1143,"title":{},"body":{"injectables/ProfilesService.html":{},"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts",{"_index":452,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["profile.dto.ts:10",{"_index":464,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:15",{"_index":466,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:19",{"_index":468,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:23",{"_index":469,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:27",{"_index":470,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:31",{"_index":472,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:35",{"_index":473,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:39",{"_index":474,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:43",{"_index":475,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:47",{"_index":477,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:6",{"_index":471,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profilerepository",{"_index":1109,"title":{"injectables/ProfileRepository.html":{}},"body":{"injectables/ProfileRepository.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"coverage.html":{},"overview.html":{}}}],["profilerow",{"_index":1113,"title":{},"body":{"injectables/ProfileRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["profiles",{"_index":1121,"title":{},"body":{"controllers/ProfilesController.html":{}}}],["profiles.controller",{"_index":1136,"title":{},"body":{"modules/ProfilesModule.html":{}}}],["profiles.service",{"_index":1126,"title":{},"body":{"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{}}}],["profiles/profiles.module",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["profilescontroller",{"_index":1119,"title":{"controllers/ProfilesController.html":{}},"body":{"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"coverage.html":{}}}],["profilesmodule",{"_index":72,"title":{"modules/ProfilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfilesModule.html":{},"modules.html":{},"overview.html":{}}}],["profilesrepository",{"_index":1141,"title":{},"body":{"injectables/ProfilesService.html":{}}}],["profilesservice",{"_index":1125,"title":{"injectables/ProfilesService.html":{}},"body":{"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":1377,"title":{},"body":{"index.html":{}}}],["promise",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"controllers/PdfController.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{}}}],["promise((resolve",{"_index":1061,"title":{},"body":{"injectables/PdfService.html":{}}}],["properties",{"_index":230,"title":{"properties.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/BaseServiceInterface.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"interfaces/FindAllParams.html":{},"classes/LoginDto.html":{},"classes/PdfDTO.html":{},"injectables/PdfService.html":{},"injectables/SupabaseService.html":{},"classes/UserAuthDto.html":{},"properties.html":{}}}],["protected",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseRepository.html":{}}}],["provide",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":1280,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["providers",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/LocationModule.html":{},"modules/PdfModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/ReportsTemplatesModule.html":{},"modules/SupabaseModule.html":{},"overview.html":{}}}],["public",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/GeolocationService.html":{},"guards/JwtAuthGuard.html":{},"injectables/PdfService.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@get('/')@throttle({default",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["public()@get('control')@apiquery({name",{"_index":1151,"title":{},"body":{"controllers/RelayController.html":{}}}],["public()@post('login')@throttle({default",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{}}}],["public.decorator",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{},"guards/JwtAuthGuard.html":{}}}],["publicschema",{"_index":1322,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["purposes",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["query",{"_index":662,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"controllers/PdfController.html":{},"controllers/RelayController.html":{}}}],["query('deveui",{"_index":677,"title":{},"body":{"controllers/DataController.html":{},"controllers/PdfController.html":{}}}],["query('order",{"_index":680,"title":{},"body":{"controllers/DataController.html":{}}}],["query('skip",{"_index":678,"title":{},"body":{"controllers/DataController.html":{}}}],["query('take",{"_index":679,"title":{},"body":{"controllers/DataController.html":{}}}],["queued",{"_index":1168,"title":{},"body":{"controllers/RelayController.html":{}}}],["queued'})@apiresponse({status",{"_index":1158,"title":{},"body":{"controllers/RelayController.html":{}}}],["range(skip",{"_index":710,"title":{},"body":{"injectables/DataRepository.html":{}}}],["readonly",{"_index":334,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"controllers/PdfController.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"controllers/ReportsTemplatesController.html":{},"injectables/ReportsTemplatesService.html":{}}}],["record",{"_index":718,"title":{},"body":{"injectables/DataRepository.html":{}}}],["records",{"_index":652,"title":{},"body":{"controllers/DataController.html":{}}}],["reflect",{"_index":1364,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":886,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["register",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["regular.ttf",{"_index":1036,"title":{},"body":{"injectables/PdfService.html":{}}}],["reject",{"_index":1062,"title":{},"body":{"injectables/PdfService.html":{}}}],["related",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CwDevicesController.html":{},"controllers/DataController.html":{}}}],["relay",{"_index":1148,"title":{},"body":{"controllers/RelayController.html":{}}}],["relay.controller",{"_index":1177,"title":{},"body":{"modules/RelayModule.html":{}}}],["relay.service",{"_index":1161,"title":{},"body":{"controllers/RelayController.html":{},"modules/RelayModule.html":{}}}],["relay/relay.module",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["relaycontroller",{"_index":1146,"title":{"controllers/RelayController.html":{}},"body":{"controllers/RelayController.html":{},"modules/RelayModule.html":{},"coverage.html":{}}}],["relaymodule",{"_index":73,"title":{"modules/RelayModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RelayModule.html":{},"modules.html":{},"overview.html":{}}}],["relayon",{"_index":1170,"title":{},"body":{"controllers/RelayController.html":{}}}],["relayservice",{"_index":1160,"title":{"injectables/RelayService.html":{}},"body":{"controllers/RelayController.html":{},"modules/RelayModule.html":{},"injectables/RelayService.html":{},"coverage.html":{},"overview.html":{}}}],["relaystate",{"_index":1150,"title":{},"body":{"controllers/RelayController.html":{},"miscellaneous/enumerations.html":{}}}],["relaystate.open",{"_index":1171,"title":{},"body":{"controllers/RelayController.html":{}}}],["remove",{"_index":494,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"injectables/DataService.html":{},"interfaces/IRepositoryBase.html":{},"injectables/LocationService.html":{}}}],["remove(@param('id",{"_index":537,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/DataController.html":{}}}],["remove(id",{"_index":505,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"interfaces/IRepositoryBase.html":{},"injectables/LocationService.html":{},"interfaces/RepositoryInterface.html":{}}}],["removes",{"_index":955,"title":{},"body":{"injectables/LocationService.html":{}}}],["repo",{"_index":751,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["report",{"_index":994,"title":{},"body":{"classes/PdfDTO.html":{},"injectables/PdfService.html":{}}}],["report.content[2].table.body",{"_index":1104,"title":{},"body":{"injectables/PdfService.html":{}}}],["report.content[2].table.body[0",{"_index":1105,"title":{},"body":{"injectables/PdfService.html":{}}}],["report_template.dto",{"_index":1264,"title":{},"body":{"injectables/ReportsTemplatesService.html":{},"classes/UpdateReportDto.html":{}}}],["report_template.dto.ts",{"_index":483,"title":{},"body":{"classes/CreateReportTemplateDto.html":{},"classes/UpdateReportDto.html":{},"coverage.html":{}}}],["report_template.dto.ts:10",{"_index":485,"title":{},"body":{"classes/CreateReportTemplateDto.html":{}}}],["report_template.dto.ts:14",{"_index":487,"title":{},"body":{"classes/CreateReportTemplateDto.html":{}}}],["report_template.dto.ts:18",{"_index":486,"title":{},"body":{"classes/CreateReportTemplateDto.html":{}}}],["report_template.dto.ts:22",{"_index":488,"title":{},"body":{"classes/CreateReportTemplateDto.html":{}}}],["report_template.dto.ts:6",{"_index":484,"title":{},"body":{"classes/CreateReportTemplateDto.html":{}}}],["reportdata",{"_index":1054,"title":{},"body":{"injectables/PdfService.html":{}}}],["reportjson",{"_index":1029,"title":{},"body":{"injectables/PdfService.html":{}}}],["reportjson.replace(/{{dev_eui}}/g",{"_index":1100,"title":{},"body":{"injectables/PdfService.html":{}}}],["reportjsonresponse",{"_index":1080,"title":{},"body":{"injectables/PdfService.html":{}}}],["reports",{"_index":1242,"title":{},"body":{"controllers/ReportsTemplatesController.html":{}}}],["reports_templates",{"_index":1238,"title":{},"body":{"injectables/ReportTemplatesRepository.html":{}}}],["reports_templates.controller",{"_index":1255,"title":{},"body":{"modules/ReportsTemplatesModule.html":{}}}],["reports_templates.service",{"_index":1246,"title":{},"body":{"controllers/ReportsTemplatesController.html":{},"modules/ReportsTemplatesModule.html":{}}}],["reports_templates/reports_templates.module",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["reportstemplatescontroller",{"_index":1240,"title":{"controllers/ReportsTemplatesController.html":{}},"body":{"controllers/ReportsTemplatesController.html":{},"modules/ReportsTemplatesModule.html":{},"coverage.html":{}}}],["reportstemplatesmodule",{"_index":74,"title":{"modules/ReportsTemplatesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PdfModule.html":{},"modules/ReportsTemplatesModule.html":{},"modules.html":{},"overview.html":{}}}],["reportstemplatesrow",{"_index":1265,"title":{},"body":{"injectables/ReportsTemplatesService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["reportstemplatesservice",{"_index":1010,"title":{"injectables/ReportsTemplatesService.html":{}},"body":{"modules/PdfModule.html":{},"injectables/PdfService.html":{},"controllers/ReportsTemplatesController.html":{},"modules/ReportsTemplatesModule.html":{},"injectables/ReportsTemplatesService.html":{},"coverage.html":{},"overview.html":{}}}],["reportstring",{"_index":1053,"title":{},"body":{"injectables/PdfService.html":{}}}],["reporttemplatesrepository",{"_index":1233,"title":{"injectables/ReportTemplatesRepository.html":{}},"body":{"injectables/ReportTemplatesRepository.html":{},"modules/ReportsTemplatesModule.html":{},"injectables/ReportsTemplatesService.html":{},"coverage.html":{},"overview.html":{}}}],["reporttemplatesservice",{"_index":1248,"title":{},"body":{"controllers/ReportsTemplatesController.html":{}}}],["repository",{"_index":376,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"modules/CwDeviceOwnersModule.html":{}}}],["repositoryinterface",{"_index":880,"title":{"interfaces/RepositoryInterface.html":{}},"body":{"interfaces/IRepositoryBase.html":{},"interfaces/RepositoryInterface.html":{},"coverage.html":{}}}],["req",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"controllers/PdfController.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{}}}],["req.headers['authorization",{"_index":1130,"title":{},"body":{"controllers/ProfilesController.html":{}}}],["req.user",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DataController.html":{}}}],["req.user.email",{"_index":682,"title":{},"body":{"controllers/DataController.html":{}}}],["req.user.id",{"_index":979,"title":{},"body":{"controllers/PdfController.html":{}}}],["request",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"injectables/HttpCacheInterceptor.html":{},"guards/JwtAuthGuard.html":{},"controllers/RelayController.html":{},"guards/SupabaseAuthGuard.html":{}}}],["request'})@apiresponse({status",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{},"controllers/RelayController.html":{}}}],["request.headers.authorization",{"_index":914,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["request.headers['authorization",{"_index":1279,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["request.headers['x",{"_index":901,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["request.path.id",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.user",{"_index":899,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["request.user.id",{"_index":904,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["required",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"injectables/PdfService.html":{},"controllers/RelayController.html":{}}}],["required'})@apiresponse({status",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{},"controllers/RelayController.html":{}}}],["res",{"_index":972,"title":{},"body":{"controllers/PdfController.html":{}}}],["res.send(pdfbuffer",{"_index":989,"title":{},"body":{"controllers/PdfController.html":{}}}],["res.set",{"_index":982,"title":{},"body":{"controllers/PdfController.html":{}}}],["reset",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/LocationModule.html":{},"modules/PdfModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/ReportsTemplatesModule.html":{},"modules/SupabaseModule.html":{},"overview.html":{}}}],["resolve(buffer.concat(chunks",{"_index":1071,"title":{},"body":{"injectables/PdfService.html":{}}}],["response",{"_index":826,"title":{},"body":{"injectables/GeolocationService.html":{},"controllers/PdfController.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{}}}],["response.json",{"_index":832,"title":{},"body":{"injectables/GeolocationService.html":{},"injectables/RelayService.html":{}}}],["response.ok",{"_index":828,"title":{},"body":{"injectables/GeolocationService.html":{},"injectables/RelayService.html":{}}}],["response.statustext",{"_index":831,"title":{},"body":{"injectables/GeolocationService.html":{},"injectables/RelayService.html":{}}}],["responsedata",{"_index":1223,"title":{},"body":{"injectables/RelayService.html":{}}}],["results",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDatumDto.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"classes/Datum.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"controllers/PdfController.html":{},"classes/PdfDTO.html":{},"modules/PdfModule.html":{},"injectables/PdfService.html":{},"classes/Profile.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"modules/RelayModule.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"controllers/ReportsTemplatesController.html":{},"modules/ReportsTemplatesModule.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateReportDto.html":{},"classes/UserAuthDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":644,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataRepository.html":{}}}],["return",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"injectables/HttpCacheInterceptor.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"controllers/ReportsTemplatesController.html":{},"injectables/ReportsTemplatesService.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{}}}],["returns",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"controllers/GeolocationController.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"controllers/PdfController.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"controllers/ReportsTemplatesController.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{}}}],["rigistered",{"_index":672,"title":{},"body":{"controllers/DataController.html":{}}}],["roboto",{"_index":1031,"title":{},"body":{"injectables/PdfService.html":{}}}],["rootpath",{"_index":1014,"title":{},"body":{"modules/PdfModule.html":{}}}],["route",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["routes",{"_index":867,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["row",{"_index":1107,"title":{},"body":{"injectables/PdfService.html":{}}}],["rows",{"_index":1084,"title":{},"body":{"injectables/PdfService.html":{}}}],["rxjs",{"_index":1367,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":1382,"title":{},"body":{"index.html":{}}}],["seconds",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["select",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseRepository.html":{},"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/ProfileRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["senddownlink",{"_index":1180,"title":{},"body":{"injectables/RelayService.html":{}}}],["senddownlink(state",{"_index":1185,"title":{},"body":{"injectables/RelayService.html":{}}}],["sending",{"_index":1221,"title":{},"body":{"injectables/RelayService.html":{}}}],["sent",{"_index":1225,"title":{},"body":{"injectables/RelayService.html":{}}}],["serial_number",{"_index":403,"title":{},"body":{"classes/CreateDeviceDto.html":{},"classes/CreateReportTemplateDto.html":{}}}],["serve",{"_index":977,"title":{},"body":{"controllers/PdfController.html":{}}}],["server",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["servestaticmodule",{"_index":1002,"title":{},"body":{"modules/PdfModule.html":{}}}],["servestaticmodule.forroot",{"_index":1013,"title":{},"body":{"modules/PdfModule.html":{}}}],["service",{"_index":318,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"modules/CwDeviceOwnersModule.html":{}}}],["session",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["session.session?.access_token",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["set",{"_index":1154,"title":{},"body":{"controllers/RelayController.html":{}}}],["setmetadata(is_public_key",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":1383,"title":{},"body":{"index.html":{}}}],["sign",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinwithemail",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinwithemail(email",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["single",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseRepository.html":{},"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/ProfileRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["skip",{"_index":639,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"guards/JwtAuthGuard.html":{},"injectables/PdfService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDatumDto.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"controllers/CwDeviceOwnersController.html":{},"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"classes/Datum.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"injectables/GeolocationService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"controllers/PdfController.html":{},"classes/PdfDTO.html":{},"modules/PdfModule.html":{},"injectables/PdfService.html":{},"classes/Profile.html":{},"injectables/ProfileRepository.html":{},"controllers/ProfilesController.html":{},"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"modules/RelayModule.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"controllers/ReportsTemplatesController.html":{},"modules/ReportsTemplatesModule.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"classes/UpdateDatumDto.html":{},"classes/UpdateDeviceDto.html":{},"classes/UpdateDeviceOwnerDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateReportDto.html":{},"classes/UserAuthDto.html":{}}}],["specific",{"_index":650,"title":{},"body":{"controllers/DataController.html":{}}}],["src/.../cw_device_locations.repository.ts",{"_index":1403,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../cw_device_owners.service.ts",{"_index":1404,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../cw_device_owners.ts",{"_index":1405,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../cw_device_type.controller.ts",{"_index":1410,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../cw_device_type.repository.ts",{"_index":1412,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../cw_device_type.service.ts",{"_index":1411,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../cw_devices.controller.ts",{"_index":1408,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../cw_devices.repository.ts",{"_index":1406,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../cw_devices.service.ts",{"_index":1409,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../cw_location.repository.ts",{"_index":1413,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../location.controller.ts",{"_index":1414,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":1373,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../profiles.repositories.ts",{"_index":1415,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../public.decorator.ts",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../relay.controller.ts",{"_index":1371,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../reports_templates.repository.ts",{"_index":1407,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../reports_templates.service.ts",{"_index":1416,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:19",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":134,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":135,"title":{},"body":{"injectables/AppService.html":{}}}],["src/assets/fonts/noto_sans_jp/static/notosansjp",{"_index":1044,"title":{},"body":{"injectables/PdfService.html":{}}}],["src/assets/fonts/roboto/roboto",{"_index":1035,"title":{},"body":{"injectables/PdfService.html":{}}}],["src/auth/auth.controller.ts",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:35",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:48",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module",{"_index":590,"title":{},"body":{"modules/CwDeviceTypeModule.html":{},"modules/ReportsTemplatesModule.html":{}}}],["src/auth/auth.module.ts",{"_index":227,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service",{"_index":820,"title":{},"body":{"modules/GeolocationModule.html":{},"modules/PdfModule.html":{}}}],["src/auth/auth.service.ts",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:22",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:34",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:57",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:8",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dtos/userauth.dto.ts",{"_index":956,"title":{},"body":{"classes/LoginDto.html":{},"classes/UserAuthDto.html":{},"coverage.html":{}}}],["src/auth/dtos/userauth.dto.ts:14",{"_index":959,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dtos/userauth.dto.ts:18",{"_index":961,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dtos/userauth.dto.ts:8",{"_index":1312,"title":{},"body":{"classes/UserAuthDto.html":{}}}],["src/auth/guards/jwt",{"_index":882,"title":{},"body":{"guards/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/supabase.guard",{"_index":799,"title":{},"body":{"controllers/GeolocationController.html":{},"controllers/PdfController.html":{}}}],["src/auth/guards/supabase.guard.ts",{"_index":1273,"title":{},"body":{"guards/SupabaseAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/supabase.guard.ts:10",{"_index":1276,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["src/auth/guards/supabase.guard.ts:7",{"_index":1275,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["src/auth/public.decorator",{"_index":1162,"title":{},"body":{"controllers/RelayController.html":{}}}],["src/auth/public.decorator.ts",{"_index":1330,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/bases/base.controller",{"_index":572,"title":{},"body":{"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{}}}],["src/bases/base.controller.ts",{"_index":312,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"coverage.html":{}}}],["src/bases/base.controller.ts:19",{"_index":330,"title":{},"body":{"classes/BaseController.html":{}}}],["src/bases/base.controller.ts:30",{"_index":327,"title":{},"body":{"classes/BaseController.html":{}}}],["src/bases/base.controller.ts:9",{"_index":317,"title":{},"body":{"classes/BaseController.html":{}}}],["src/bases/base.service",{"_index":563,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/ReportsTemplatesService.html":{}}}],["src/bases/base.service.ts",{"_index":372,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"coverage.html":{}}}],["src/bases/base.service.ts:12",{"_index":380,"title":{},"body":{"classes/BaseService.html":{}}}],["src/bases/base.service.ts:16",{"_index":381,"title":{},"body":{"classes/BaseService.html":{}}}],["src/bases/base.service.ts:20",{"_index":378,"title":{},"body":{"classes/BaseService.html":{}}}],["src/bases/base.service.ts:24",{"_index":383,"title":{},"body":{"classes/BaseService.html":{}}}],["src/bases/base.service.ts:28",{"_index":379,"title":{},"body":{"classes/BaseService.html":{}}}],["src/bases/base.service.ts:5",{"_index":395,"title":{},"body":{"interfaces/BaseServiceInterface-1.html":{}}}],["src/bases/base.service.ts:6",{"_index":394,"title":{},"body":{"interfaces/BaseServiceInterface-1.html":{}}}],["src/bases/base.service.ts:9",{"_index":375,"title":{},"body":{"classes/BaseService.html":{}}}],["src/common/http",{"_index":855,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{},"coverage.html":{}}}],["src/cw_device_owners/cw_device_owners.controller.ts",{"_index":490,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"coverage.html":{}}}],["src/cw_device_owners/cw_device_owners.controller.ts:15",{"_index":500,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["src/cw_device_owners/cw_device_owners.controller.ts:21",{"_index":504,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["src/cw_device_owners/cw_device_owners.controller.ts:27",{"_index":498,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["src/cw_device_owners/cw_device_owners.controller.ts:33",{"_index":510,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["src/cw_device_owners/cw_device_owners.controller.ts:39",{"_index":507,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["src/cw_device_owners/cw_device_owners.module",{"_index":1009,"title":{},"body":{"modules/PdfModule.html":{}}}],["src/cw_device_owners/cw_device_owners.module.ts",{"_index":544,"title":{},"body":{"modules/CwDeviceOwnersModule.html":{}}}],["src/cw_device_owners/cw_device_owners.service",{"_index":695,"title":{},"body":{"modules/DataModule.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["src/cw_device_owners/cw_device_owners.service.ts",{"_index":548,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/cw_device_owners/cw_device_owners.service.ts:12",{"_index":551,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{}}}],["src/cw_device_owners/cw_device_owners.service.ts:17",{"_index":553,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{}}}],["src/cw_device_owners/dto/create",{"_index":417,"title":{},"body":{"classes/CreateDeviceOwnerDto.html":{},"coverage.html":{}}}],["src/cw_device_owners/dto/update",{"_index":1300,"title":{},"body":{"classes/UpdateDeviceOwnerDto.html":{},"coverage.html":{}}}],["src/cw_device_type/cw_device_type.controller.ts",{"_index":569,"title":{},"body":{"controllers/CwDeviceTypeController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/cw_device_type/cw_device_type.module",{"_index":697,"title":{},"body":{"modules/DataModule.html":{},"modules/PdfModule.html":{}}}],["src/cw_device_type/cw_device_type.module.ts",{"_index":587,"title":{},"body":{"modules/CwDeviceTypeModule.html":{}}}],["src/cw_device_type/cw_device_type.service",{"_index":668,"title":{},"body":{"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["src/cw_device_type/cw_device_type.service.ts",{"_index":592,"title":{},"body":{"injectables/CwDeviceTypeService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/cw_device_type/cw_device_type.service.ts:11",{"_index":595,"title":{},"body":{"injectables/CwDeviceTypeService.html":{}}}],["src/cw_device_type/cw_device_type.service.ts:16",{"_index":597,"title":{},"body":{"injectables/CwDeviceTypeService.html":{}}}],["src/cw_device_type/dto/create",{"_index":427,"title":{},"body":{"classes/CreateDeviceTypeDto.html":{},"coverage.html":{}}}],["src/cw_device_type/dto/update",{"_index":1302,"title":{},"body":{"classes/UpdateDeviceTypeDto.html":{},"coverage.html":{}}}],["src/cw_devices/cw_devices.controller.ts",{"_index":604,"title":{},"body":{"controllers/CwDevicesController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/cw_devices/cw_devices.module",{"_index":696,"title":{},"body":{"modules/DataModule.html":{},"modules/PdfModule.html":{}}}],["src/cw_devices/cw_devices.module.ts",{"_index":622,"title":{},"body":{"modules/CwDevicesModule.html":{}}}],["src/cw_devices/cw_devices.service",{"_index":669,"title":{},"body":{"controllers/DataController.html":{},"modules/DataModule.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"modules/PdfModule.html":{}}}],["src/cw_devices/cw_devices.service.ts",{"_index":625,"title":{},"body":{"injectables/CwDevicesService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/cw_devices/cw_devices.service.ts:11",{"_index":628,"title":{},"body":{"injectables/CwDevicesService.html":{}}}],["src/cw_devices/cw_devices.service.ts:16",{"_index":630,"title":{},"body":{"injectables/CwDevicesService.html":{}}}],["src/cw_devices/dto/create",{"_index":400,"title":{},"body":{"classes/CreateDeviceDto.html":{},"coverage.html":{}}}],["src/cw_devices/dto/update",{"_index":1298,"title":{},"body":{"classes/UpdateDeviceDto.html":{},"coverage.html":{}}}],["src/data/data.controller.ts",{"_index":635,"title":{},"body":{"controllers/DataController.html":{},"coverage.html":{}}}],["src/data/data.controller.ts:21",{"_index":637,"title":{},"body":{"controllers/DataController.html":{}}}],["src/data/data.controller.ts:32",{"_index":658,"title":{},"body":{"controllers/DataController.html":{}}}],["src/data/data.controller.ts:46",{"_index":661,"title":{},"body":{"controllers/DataController.html":{}}}],["src/data/data.module",{"_index":1008,"title":{},"body":{"modules/PdfModule.html":{}}}],["src/data/data.module.ts",{"_index":691,"title":{},"body":{"modules/DataModule.html":{}}}],["src/data/data.service",{"_index":1007,"title":{},"body":{"modules/PdfModule.html":{},"injectables/PdfService.html":{}}}],["src/data/data.service.ts",{"_index":719,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"coverage.html":{}}}],["src/data/data.service.ts:19",{"_index":722,"title":{},"body":{"injectables/DataService.html":{}}}],["src/data/data.service.ts:27",{"_index":723,"title":{},"body":{"injectables/DataService.html":{}}}],["src/data/data.service.ts:31",{"_index":726,"title":{},"body":{"injectables/DataService.html":{}}}],["src/data/data.service.ts:61",{"_index":728,"title":{},"body":{"injectables/DataService.html":{}}}],["src/data/data.service.ts:65",{"_index":730,"title":{},"body":{"injectables/DataService.html":{}}}],["src/data/data.service.ts:69",{"_index":729,"title":{},"body":{"injectables/DataService.html":{}}}],["src/data/dto/create",{"_index":397,"title":{},"body":{"classes/CreateDatumDto.html":{},"coverage.html":{}}}],["src/data/dto/update",{"_index":1295,"title":{},"body":{"classes/UpdateDatumDto.html":{},"coverage.html":{}}}],["src/data/entities/datum.entity.ts",{"_index":754,"title":{},"body":{"classes/Datum.html":{},"coverage.html":{}}}],["src/geolocation/geolocation.controller.ts",{"_index":795,"title":{},"body":{"controllers/GeolocationController.html":{},"coverage.html":{}}}],["src/geolocation/geolocation.controller.ts:14",{"_index":798,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["src/geolocation/geolocation.module.ts",{"_index":818,"title":{},"body":{"modules/GeolocationModule.html":{}}}],["src/geolocation/geolocation.service.ts",{"_index":821,"title":{},"body":{"injectables/GeolocationService.html":{},"coverage.html":{}}}],["src/geolocation/geolocation.service.ts:6",{"_index":824,"title":{},"body":{"injectables/GeolocationService.html":{}}}],["src/health/health.controller.ts",{"_index":834,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:13",{"_index":838,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":849,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/interfaces/repositorybase.interface.ts",{"_index":872,"title":{},"body":{"interfaces/IRepositoryBase.html":{},"interfaces/RepositoryInterface.html":{},"coverage.html":{}}}],["src/interfaces/repositorybase.interface.ts:11",{"_index":1270,"title":{},"body":{"interfaces/RepositoryInterface.html":{}}}],["src/interfaces/repositorybase.interface.ts:12",{"_index":1271,"title":{},"body":{"interfaces/RepositoryInterface.html":{}}}],["src/interfaces/repositorybase.interface.ts:13",{"_index":1268,"title":{},"body":{"interfaces/RepositoryInterface.html":{}}}],["src/interfaces/repositorybase.interface.ts:14",{"_index":1272,"title":{},"body":{"interfaces/RepositoryInterface.html":{}}}],["src/interfaces/repositorybase.interface.ts:15",{"_index":1269,"title":{},"body":{"interfaces/RepositoryInterface.html":{}}}],["src/interfaces/repositorybase.interface.ts:2",{"_index":877,"title":{},"body":{"interfaces/IRepositoryBase.html":{}}}],["src/interfaces/repositorybase.interface.ts:3",{"_index":876,"title":{},"body":{"interfaces/IRepositoryBase.html":{}}}],["src/interfaces/repositorybase.interface.ts:4",{"_index":874,"title":{},"body":{"interfaces/IRepositoryBase.html":{}}}],["src/interfaces/repositorybase.interface.ts:5",{"_index":879,"title":{},"body":{"interfaces/IRepositoryBase.html":{}}}],["src/interfaces/repositorybase.interface.ts:6",{"_index":878,"title":{},"body":{"interfaces/IRepositoryBase.html":{}}}],["src/location/dto/create",{"_index":432,"title":{},"body":{"classes/CreateLocationDto.html":{},"coverage.html":{}}}],["src/location/dto/update",{"_index":1304,"title":{},"body":{"classes/UpdateLocationDto.html":{},"coverage.html":{}}}],["src/location/entities/location.entity.ts",{"_index":917,"title":{},"body":{"classes/Location.html":{},"coverage.html":{}}}],["src/location/location.controller.ts",{"_index":919,"title":{},"body":{"controllers/LocationController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/location/location.module.ts",{"_index":933,"title":{},"body":{"modules/LocationModule.html":{}}}],["src/location/location.service.ts",{"_index":940,"title":{},"body":{"injectables/LocationService.html":{},"coverage.html":{}}}],["src/location/location.service.ts:10",{"_index":944,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/location/location.service.ts:14",{"_index":945,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/location/location.service.ts:18",{"_index":946,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/location/location.service.ts:22",{"_index":949,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/location/location.service.ts:26",{"_index":947,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/location/location.service.ts:7",{"_index":942,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/main.ts",{"_index":1335,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/pdf/dto/pdf.dto.ts",{"_index":991,"title":{},"body":{"classes/PdfDTO.html":{},"coverage.html":{}}}],["src/pdf/dto/pdf.dto.ts:8",{"_index":996,"title":{},"body":{"classes/PdfDTO.html":{}}}],["src/pdf/pdf.controller.ts",{"_index":965,"title":{},"body":{"controllers/PdfController.html":{},"coverage.html":{}}}],["src/pdf/pdf.controller.ts:17",{"_index":971,"title":{},"body":{"controllers/PdfController.html":{}}}],["src/pdf/pdf.module.ts",{"_index":1000,"title":{},"body":{"modules/PdfModule.html":{}}}],["src/pdf/pdf.service.ts",{"_index":1017,"title":{},"body":{"injectables/PdfService.html":{},"coverage.html":{}}}],["src/pdf/pdf.service.ts:10",{"_index":1022,"title":{},"body":{"injectables/PdfService.html":{}}}],["src/pdf/pdf.service.ts:16",{"_index":1046,"title":{},"body":{"injectables/PdfService.html":{}}}],["src/pdf/pdf.service.ts:31",{"_index":1024,"title":{},"body":{"injectables/PdfService.html":{}}}],["src/pdf/pdf.service.ts:57",{"_index":1026,"title":{},"body":{"injectables/PdfService.html":{}}}],["src/pdf/pdf.service.ts:72",{"_index":1028,"title":{},"body":{"injectables/PdfService.html":{}}}],["src/profiles/dto/create",{"_index":451,"title":{},"body":{"classes/CreateProfileDto.html":{},"coverage.html":{}}}],["src/profiles/dto/update",{"_index":1307,"title":{},"body":{"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["src/profiles/entities/profile.entity.ts",{"_index":1108,"title":{},"body":{"classes/Profile.html":{},"coverage.html":{}}}],["src/profiles/profiles.controller.ts",{"_index":1120,"title":{},"body":{"controllers/ProfilesController.html":{},"coverage.html":{}}}],["src/profiles/profiles.controller.ts:12",{"_index":1124,"title":{},"body":{"controllers/ProfilesController.html":{}}}],["src/profiles/profiles.module.ts",{"_index":1135,"title":{},"body":{"modules/ProfilesModule.html":{}}}],["src/profiles/profiles.service.ts",{"_index":1138,"title":{},"body":{"injectables/ProfilesService.html":{},"coverage.html":{}}}],["src/profiles/profiles.service.ts:6",{"_index":1140,"title":{},"body":{"injectables/ProfilesService.html":{}}}],["src/profiles/profiles.service.ts:8",{"_index":1142,"title":{},"body":{"injectables/ProfilesService.html":{}}}],["src/relay/relay.controller.ts",{"_index":1147,"title":{},"body":{"controllers/RelayController.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/relay/relay.controller.ts:28",{"_index":1159,"title":{},"body":{"controllers/RelayController.html":{}}}],["src/relay/relay.module.ts",{"_index":1176,"title":{},"body":{"modules/RelayModule.html":{}}}],["src/relay/relay.service.ts",{"_index":1178,"title":{},"body":{"injectables/RelayService.html":{},"coverage.html":{}}}],["src/relay/relay.service.ts:5",{"_index":1181,"title":{},"body":{"injectables/RelayService.html":{}}}],["src/relay/relay.service.ts:52",{"_index":1183,"title":{},"body":{"injectables/RelayService.html":{}}}],["src/relay/relay.service.ts:8",{"_index":1186,"title":{},"body":{"injectables/RelayService.html":{}}}],["src/reports_templates/dto/create",{"_index":482,"title":{},"body":{"classes/CreateReportTemplateDto.html":{},"coverage.html":{}}}],["src/reports_templates/dto/update",{"_index":1309,"title":{},"body":{"classes/UpdateReportDto.html":{},"coverage.html":{}}}],["src/reports_templates/reports_templates.controller.ts",{"_index":1241,"title":{},"body":{"controllers/ReportsTemplatesController.html":{},"coverage.html":{}}}],["src/reports_templates/reports_templates.controller.ts:11",{"_index":1245,"title":{},"body":{"controllers/ReportsTemplatesController.html":{}}}],["src/reports_templates/reports_templates.module",{"_index":1012,"title":{},"body":{"modules/PdfModule.html":{}}}],["src/reports_templates/reports_templates.module.ts",{"_index":1254,"title":{},"body":{"modules/ReportsTemplatesModule.html":{}}}],["src/reports_templates/reports_templates.service",{"_index":1011,"title":{},"body":{"modules/PdfModule.html":{},"injectables/PdfService.html":{}}}],["src/reports_templates/reports_templates.service.ts",{"_index":1257,"title":{},"body":{"injectables/ReportsTemplatesService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/reports_templates/reports_templates.service.ts:11",{"_index":1260,"title":{},"body":{"injectables/ReportsTemplatesService.html":{}}}],["src/reports_templates/reports_templates.service.ts:16",{"_index":1262,"title":{},"body":{"injectables/ReportsTemplatesService.html":{}}}],["src/repositories/base.repository",{"_index":384,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{}}}],["src/repositories/base.repository.ts",{"_index":343,"title":{},"body":{"classes/BaseRepository.html":{},"coverage.html":{}}}],["src/repositories/base.repository.ts:10",{"_index":358,"title":{},"body":{"classes/BaseRepository.html":{}}}],["src/repositories/base.repository.ts:21",{"_index":360,"title":{},"body":{"classes/BaseRepository.html":{}}}],["src/repositories/base.repository.ts:34",{"_index":353,"title":{},"body":{"classes/BaseRepository.html":{}}}],["src/repositories/base.repository.ts:4",{"_index":350,"title":{},"body":{"classes/BaseRepository.html":{}}}],["src/repositories/base.repository.ts:47",{"_index":362,"title":{},"body":{"classes/BaseRepository.html":{}}}],["src/repositories/base.repository.ts:61",{"_index":356,"title":{},"body":{"classes/BaseRepository.html":{}}}],["src/repositories/cw_device_locations.repository.ts",{"_index":756,"title":{},"body":{"injectables/DeviceLocationRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/repositories/cw_device_locations.repository.ts:9",{"_index":757,"title":{},"body":{"injectables/DeviceLocationRepository.html":{}}}],["src/repositories/cw_device_owners",{"_index":546,"title":{},"body":{"modules/CwDeviceOwnersModule.html":{},"injectables/CwDeviceOwnersService.html":{},"modules/DataModule.html":{}}}],["src/repositories/cw_device_owners.ts",{"_index":768,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/repositories/cw_device_owners.ts:10",{"_index":770,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{}}}],["src/repositories/cw_device_owners.ts:15",{"_index":772,"title":{},"body":{"injectables/DeviceOwnerRepository.html":{}}}],["src/repositories/cw_device_type.repository",{"_index":591,"title":{},"body":{"modules/CwDeviceTypeModule.html":{},"injectables/CwDeviceTypeService.html":{},"modules/DataModule.html":{}}}],["src/repositories/cw_device_type.repository.ts",{"_index":786,"title":{},"body":{"injectables/DeviceTypeRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/repositories/cw_device_type.repository.ts:14",{"_index":790,"title":{},"body":{"injectables/DeviceTypeRepository.html":{}}}],["src/repositories/cw_device_type.repository.ts:9",{"_index":788,"title":{},"body":{"injectables/DeviceTypeRepository.html":{}}}],["src/repositories/cw_devices.repository",{"_index":624,"title":{},"body":{"modules/CwDevicesModule.html":{},"injectables/CwDevicesService.html":{},"modules/DataModule.html":{}}}],["src/repositories/cw_devices.repository.ts",{"_index":777,"title":{},"body":{"injectables/DeviceRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/repositories/cw_devices.repository.ts:14",{"_index":782,"title":{},"body":{"injectables/DeviceRepository.html":{}}}],["src/repositories/cw_devices.repository.ts:9",{"_index":779,"title":{},"body":{"injectables/DeviceRepository.html":{}}}],["src/repositories/cw_location.repository",{"_index":935,"title":{},"body":{"modules/LocationModule.html":{},"injectables/LocationService.html":{}}}],["src/repositories/cw_location.repository.ts",{"_index":936,"title":{},"body":{"injectables/LocationRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/repositories/cw_location.repository.ts:9",{"_index":937,"title":{},"body":{"injectables/LocationRepository.html":{}}}],["src/repositories/data.repository",{"_index":693,"title":{},"body":{"modules/DataModule.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["src/repositories/data.repository.ts",{"_index":699,"title":{},"body":{"injectables/DataRepository.html":{},"coverage.html":{}}}],["src/repositories/data.repository.ts:25",{"_index":707,"title":{},"body":{"injectables/DataRepository.html":{}}}],["src/repositories/data.repository.ts:6",{"_index":702,"title":{},"body":{"injectables/DataRepository.html":{}}}],["src/repositories/data.repository.ts:9",{"_index":704,"title":{},"body":{"injectables/DataRepository.html":{}}}],["src/repositories/profiles.repositories",{"_index":1137,"title":{},"body":{"modules/ProfilesModule.html":{},"injectables/ProfilesService.html":{}}}],["src/repositories/profiles.repositories.ts",{"_index":1110,"title":{},"body":{"injectables/ProfileRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/repositories/profiles.repositories.ts:13",{"_index":1112,"title":{},"body":{"injectables/ProfileRepository.html":{}}}],["src/repositories/profiles.repositories.ts:9",{"_index":1111,"title":{},"body":{"injectables/ProfileRepository.html":{}}}],["src/repositories/reports_templates.repository",{"_index":1256,"title":{},"body":{"modules/ReportsTemplatesModule.html":{},"injectables/ReportsTemplatesService.html":{}}}],["src/repositories/reports_templates.repository.ts",{"_index":1234,"title":{},"body":{"injectables/ReportTemplatesRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/repositories/reports_templates.repository.ts:14",{"_index":1236,"title":{},"body":{"injectables/ReportTemplatesRepository.html":{}}}],["src/repositories/reports_templates.repository.ts:9",{"_index":1235,"title":{},"body":{"injectables/ReportTemplatesRepository.html":{}}}],["src/services/base.service.ts",{"_index":385,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{}}}],["src/supabase/supabase.module",{"_index":589,"title":{},"body":{"modules/CwDeviceTypeModule.html":{},"modules/LocationModule.html":{},"modules/ProfilesModule.html":{},"modules/ReportsTemplatesModule.html":{}}}],["src/supabase/supabase.module.ts",{"_index":1289,"title":{},"body":{"modules/SupabaseModule.html":{}}}],["src/supabase/supabase.service",{"_index":694,"title":{},"body":{"modules/DataModule.html":{},"modules/ProfilesModule.html":{}}}],["src/supabase/supabase.service.ts",{"_index":1292,"title":{},"body":{"injectables/SupabaseService.html":{},"coverage.html":{}}}],["src/supabase/supabase.service.ts:18",{"_index":1294,"title":{},"body":{"injectables/SupabaseService.html":{}}}],["src/supabase/supabase.service.ts:8",{"_index":1293,"title":{},"body":{"injectables/SupabaseService.html":{}}}],["started",{"_index":1376,"title":{"index.html":{}},"body":{}}],["state",{"_index":1152,"title":{},"body":{"controllers/RelayController.html":{},"injectables/RelayService.html":{}}}],["statements",{"_index":1316,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1004,"title":{},"body":{"modules/PdfModule.html":{},"dependencies.html":{}}}],["status",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/RelayController.html":{}}}],["string",{"_index":136,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/BaseRepository.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"injectables/GeolocationService.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"controllers/PdfController.html":{},"classes/PdfDTO.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"injectables/ProfilesService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"classes/UserAuthDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["subsequent",{"_index":1285,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["success",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["success'})@apiresponse({status",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["successful",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{}}}],["successfully",{"_index":1226,"title":{},"body":{"injectables/RelayService.html":{}}}],["summary",{"_index":336,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/CwDeviceOwnersController.html":{},"controllers/DataController.html":{}}}],["supabase",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["supabase.service",{"_index":1290,"title":{},"body":{"modules/SupabaseModule.html":{}}}],["supabase/supabase",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{},"dependencies.html":{}}}],["supabase/supabase.module",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDevicesModule.html":{}}}],["supabase/supabase.service",{"_index":363,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/DataRepository.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/ProfileRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["supabaseauthguard",{"_index":179,"title":{"guards/SupabaseAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"controllers/GeolocationController.html":{},"controllers/PdfController.html":{},"guards/SupabaseAuthGuard.html":{},"coverage.html":{}}}],["supabaseclient",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["supabasekey",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["supabasemodule",{"_index":75,"title":{"modules/SupabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/LocationModule.html":{},"modules/ProfilesModule.html":{},"modules/ReportsTemplatesModule.html":{},"modules/SupabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["supabaseservice",{"_index":348,"title":{"injectables/SupabaseService.html":{}},"body":{"classes/BaseRepository.html":{},"modules/DataModule.html":{},"injectables/DataRepository.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/ProfileRepository.html":{},"modules/ProfilesModule.html":{},"injectables/ReportTemplatesRepository.html":{},"modules/SupabaseModule.html":{},"injectables/SupabaseService.html":{},"coverage.html":{},"overview.html":{}}}],["supabaseurl",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["super(cwdevicesservice",{"_index":616,"title":{},"body":{"controllers/CwDevicesController.html":{}}}],["super(cwdevicetypeservice",{"_index":580,"title":{},"body":{"controllers/CwDeviceTypeController.html":{}}}],["super(deviceownerrepository",{"_index":566,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{}}}],["super(devicerepository",{"_index":632,"title":{},"body":{"injectables/CwDevicesService.html":{}}}],["super(devicetyperepository",{"_index":600,"title":{},"body":{"injectables/CwDeviceTypeService.html":{}}}],["super(locationservice",{"_index":927,"title":{},"body":{"controllers/LocationController.html":{}}}],["super(reporttemplatesrepository",{"_index":1266,"title":{},"body":{"injectables/ReportsTemplatesService.html":{}}}],["super(supabaseservice",{"_index":766,"title":{},"body":{"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["support",{"_index":1386,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1387,"title":{},"body":{"modules.html":{}}}],["t",{"_index":705,"title":{},"body":{"injectables/DataRepository.html":{},"interfaces/IRepositoryBase.html":{},"interfaces/RepositoryInterface.html":{}}}],["table",{"_index":714,"title":{},"body":{"injectables/DataRepository.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"injectables/PdfService.html":{},"coverage.html":{}}}],["tablename",{"_index":349,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/DataRepository.html":{}}}],["tables",{"_index":1323,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tablesinsert",{"_index":1324,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1338,"title":{},"body":{"coverage.html":{}}}],["tablesupdate",{"_index":1325,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["take",{"_index":640,"title":{},"body":{"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"injectables/PdfService.html":{}}}],["tdocumentdefinitions",{"_index":1049,"title":{},"body":{"injectables/PdfService.html":{}}}],["templates",{"_index":1243,"title":{},"body":{"controllers/ReportsTemplatesController.html":{}}}],["terminusmodule",{"_index":850,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":1192,"title":{},"body":{"injectables/RelayService.html":{}}}],["tfontdictionary",{"_index":1030,"title":{},"body":{"injectables/PdfService.html":{}}}],["this.authservice.signinwithemail(logindto.email",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateapikey(apikey",{"_index":903,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["this.authservice.validateuser(token",{"_index":910,"title":{},"body":{"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["this.configservice.get('supabase_key",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["this.configservice.get('supabase_url",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["this.cwdeviceownersservice.create(createdeviceownerdto",{"_index":532,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["this.cwdeviceownersservice.delete(id",{"_index":538,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["this.cwdeviceownersservice.findall",{"_index":528,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["this.cwdeviceownersservice.findbyid(id",{"_index":531,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["this.cwdeviceownersservice.update(id",{"_index":535,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["this.datarepository.findallbytable(data_table",{"_index":752,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["this.dataservice.create(createdatumdto",{"_index":675,"title":{},"body":{"controllers/DataController.html":{}}}],["this.dataservice.findall",{"_index":681,"title":{},"body":{"controllers/DataController.html":{},"injectables/PdfService.html":{}}}],["this.dataservice.findone(+id",{"_index":683,"title":{},"body":{"controllers/DataController.html":{}}}],["this.dataservice.remove(+id",{"_index":685,"title":{},"body":{"controllers/DataController.html":{}}}],["this.dataservice.update(+id",{"_index":684,"title":{},"body":{"controllers/DataController.html":{}}}],["this.deviceownerrepository.findbydeveuianduid(deveui",{"_index":567,"title":{},"body":{"injectables/CwDeviceOwnersService.html":{}}}],["this.deviceownerservice.getdeviceownerbydeveuianduid(deveui",{"_index":737,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["this.devicerepository.findbydeveui",{"_index":633,"title":{},"body":{"injectables/CwDevicesService.html":{}}}],["this.deviceservice.getdevicebydeveui(deveui",{"_index":740,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["this.devicetyperepository.findbydevicetype",{"_index":601,"title":{},"body":{"injectables/CwDeviceTypeService.html":{}}}],["this.devicetypeservice.findbyid(devicetype",{"_index":745,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FindAllParams.html":{}}}],["this.extracttokenfromheader(request",{"_index":908,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["this.fetchdataandreportfromdb(deveui",{"_index":1055,"title":{},"body":{"injectables/PdfService.html":{}}}],["this.geolocationservice.getgeolocation('africa",{"_index":806,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["this.health.check",{"_index":845,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.hextobase64(command",{"_index":1203,"title":{},"body":{"injectables/RelayService.html":{}}}],["this.http.pingcheck('nestjs",{"_index":846,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.httpadapterhost",{"_index":863,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["this.insertdataintoreport(reportstring",{"_index":1056,"title":{},"body":{"injectables/PdfService.html":{}}}],["this.jwtservice.sign(session",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.locationrepository.create(createlocationdto",{"_index":950,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.locationrepository.findall",{"_index":951,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.locationrepository.findbyid(id",{"_index":952,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.locationservice.create(createlocationdto",{"_index":928,"title":{},"body":{"controllers/LocationController.html":{}}}],["this.pdfservice.createpdfbinary(user_id",{"_index":981,"title":{},"body":{"controllers/PdfController.html":{}}}],["this.profilesrepository.findbyid(id",{"_index":1145,"title":{},"body":{"injectables/ProfilesService.html":{}}}],["this.profilesservice.findone(id",{"_index":1131,"title":{},"body":{"controllers/ProfilesController.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":894,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["this.relayservice.senddownlink(relayon",{"_index":1172,"title":{},"body":{"controllers/RelayController.html":{}}}],["this.reportstemplatesservice.getreporttemplatebydeveui(deveui",{"_index":1081,"title":{},"body":{"injectables/PdfService.html":{}}}],["this.reporttemplatesrepository.findbydeveui",{"_index":1267,"title":{},"body":{"injectables/ReportsTemplatesService.html":{}}}],["this.reporttemplatesservice.findall",{"_index":1249,"title":{},"body":{"controllers/ReportsTemplatesController.html":{}}}],["this.repository.create(dto",{"_index":390,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{}}}],["this.repository.delete(id",{"_index":392,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{}}}],["this.repository.findall",{"_index":388,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{}}}],["this.repository.findbyid(id",{"_index":389,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{}}}],["this.repository.update(id",{"_index":391,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{}}}],["this.service.create(createdto",{"_index":341,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{}}}],["this.service.findall",{"_index":337,"title":{},"body":{"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{}}}],["this.supabase",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SupabaseService.html":{}}}],["this.supabase.auth.getuser(token",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.supabase.auth.signinwithpassword",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.supabaseservice",{"_index":364,"title":{},"body":{"classes/BaseRepository.html":{},"injectables/DataRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/ProfileRepository.html":{},"injectables/ReportTemplatesRepository.html":{}}}],["this.supabaseservice.getsupabaseclient().auth.getuser(id",{"_index":1116,"title":{},"body":{"injectables/ProfileRepository.html":{}}}],["though",{"_index":1079,"title":{},"body":{"injectables/PdfService.html":{}}}],["throttle",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["throttlerguard",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseRepository.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"injectables/GeolocationService.html":{},"guards/JwtAuthGuard.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"guards/SupabaseAuthGuard.html":{}}}],["token",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"classes/LoginDto.html":{},"guards/SupabaseAuthGuard.html":{},"classes/UserAuthDto.html":{}}}],["token'})@isstring",{"_index":1311,"title":{},"body":{"classes/UserAuthDto.html":{}}}],["trackby",{"_index":857,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["trackby(context",{"_index":858,"title":{},"body":{"injectables/HttpCacheInterceptor.html":{}}}],["transformer",{"_index":1354,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"guards/JwtAuthGuard.html":{},"injectables/RelayService.html":{},"guards/SupabaseAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/RelayService.html":{}}}],["ttl",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["type",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseController.html":{},"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"interfaces/BaseServiceInterface-1.html":{},"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"controllers/CwDevicesController.html":{},"injectables/CwDevicesService.html":{},"controllers/DataController.html":{},"injectables/DataRepository.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"injectables/GeolocationService.html":{},"injectables/HttpCacheInterceptor.html":{},"interfaces/IRepositoryBase.html":{},"guards/JwtAuthGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"classes/LoginDto.html":{},"controllers/PdfController.html":{},"classes/PdfDTO.html":{},"injectables/PdfService.html":{},"injectables/ProfileRepository.html":{},"injectables/ProfilesService.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{},"guards/SupabaseAuthGuard.html":{},"injectables/SupabaseService.html":{},"classes/UserAuthDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.dto",{"_index":573,"title":{},"body":{"controllers/CwDeviceTypeController.html":{},"injectables/CwDeviceTypeService.html":{},"classes/UpdateDeviceTypeDto.html":{}}}],["type.dto.ts",{"_index":428,"title":{},"body":{"classes/CreateDeviceTypeDto.html":{},"classes/UpdateDeviceTypeDto.html":{},"coverage.html":{}}}],["type.dto.ts:11",{"_index":429,"title":{},"body":{"classes/CreateDeviceTypeDto.html":{}}}],["type.dto.ts:7",{"_index":430,"title":{},"body":{"classes/CreateDeviceTypeDto.html":{}}}],["typealiases",{"_index":1401,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["uint8array(hexstring.match(/.{1,2}/g).map(byte",{"_index":1229,"title":{},"body":{"injectables/RelayService.html":{}}}],["unauthorized",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{},"controllers/DataController.html":{},"controllers/RelayController.html":{}}}],["unauthorized'})@apiresponse({status",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseController.html":{},"controllers/CwDeviceTypeController.html":{},"controllers/CwDevicesController.html":{},"controllers/LocationController.html":{},"controllers/RelayController.html":{}}}],["unauthorizedexception",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["unauthorizedexception('api",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('authorization",{"_index":1281,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["unauthorizedexception('invalid",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"guards/SupabaseAuthGuard.html":{}}}],["unauthorizedexception('token",{"_index":909,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["unauthorizedexception('unable",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('user",{"_index":1283,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["unauthorizedexception(error",{"_index":912,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["unauthorizedexception(error.message",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/HttpCacheInterceptor.html":{}}}],["undefined})@apiresponse({status",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["united",{"_index":813,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["unknown",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/GeolocationController.html":{},"injectables/GeolocationService.html":{},"injectables/PdfService.html":{},"controllers/RelayController.html":{},"injectables/RelayService.html":{}}}],["unlicensed",{"_index":1399,"title":{},"body":{"properties.html":{}}}],["update",{"_index":346,"title":{},"body":{"classes/BaseRepository.html":{},"classes/BaseService.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/IRepositoryBase.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{}}}],["update(@param('id",{"_index":534,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{},"controllers/DataController.html":{}}}],["update(id",{"_index":361,"title":{},"body":{"classes/BaseRepository.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/DataService.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"interfaces/FindAllParams.html":{},"interfaces/IRepositoryBase.html":{},"injectables/LocationRepository.html":{},"injectables/LocationService.html":{},"injectables/ReportTemplatesRepository.html":{},"injectables/ReportsTemplatesService.html":{},"interfaces/RepositoryInterface.html":{}}}],["update(item",{"_index":370,"title":{},"body":{"classes/BaseRepository.html":{}}}],["updated",{"_index":1173,"title":{},"body":{"controllers/RelayController.html":{}}}],["updated_at",{"_index":459,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["updatedatumdto",{"_index":666,"title":{"classes/UpdateDatumDto.html":{}},"body":{"controllers/DataController.html":{},"injectables/DataService.html":{},"interfaces/FindAllParams.html":{},"classes/UpdateDatumDto.html":{},"coverage.html":{}}}],["updatedevicedto",{"_index":631,"title":{"classes/UpdateDeviceDto.html":{}},"body":{"injectables/CwDevicesService.html":{},"classes/UpdateDeviceDto.html":{},"coverage.html":{}}}],["updatedeviceownerdto",{"_index":508,"title":{"classes/UpdateDeviceOwnerDto.html":{}},"body":{"controllers/CwDeviceOwnersController.html":{},"injectables/CwDeviceOwnersService.html":{},"classes/UpdateDeviceOwnerDto.html":{},"coverage.html":{}}}],["updatedevicetypedto",{"_index":599,"title":{"classes/UpdateDeviceTypeDto.html":{}},"body":{"injectables/CwDeviceTypeService.html":{},"classes/UpdateDeviceTypeDto.html":{},"coverage.html":{}}}],["updatedto",{"_index":382,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface-1.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/CwDeviceTypeService.html":{},"injectables/CwDevicesService.html":{},"injectables/ReportsTemplatesService.html":{}}}],["updatelocationdto",{"_index":948,"title":{"classes/UpdateLocationDto.html":{}},"body":{"injectables/LocationService.html":{},"classes/UpdateLocationDto.html":{},"coverage.html":{}}}],["updateprofiledto",{"_index":1306,"title":{"classes/UpdateProfileDto.html":{}},"body":{"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["updatereportdto",{"_index":1263,"title":{"classes/UpdateReportDto.html":{}},"body":{"injectables/ReportsTemplatesService.html":{},"classes/UpdateReportDto.html":{},"coverage.html":{}}}],["updates",{"_index":954,"title":{},"body":{"injectables/LocationService.html":{}}}],["url",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RelayService.html":{}}}],["usage",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{}}}],["use",{"_index":1284,"title":{},"body":{"guards/SupabaseAuthGuard.html":{}}}],["useclass",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":1291,"title":{},"body":{"modules/SupabaseModule.html":{}}}],["useguards",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GeolocationController.html":{},"controllers/PdfController.html":{}}}],["useguards(supabaseauthguard",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GeolocationController.html":{},"controllers/PdfController.html":{}}}],["useinterceptors",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"classes/BaseController.html":{},"interfaces/BaseServiceInterface.html":{}}}],["useinterceptors(cacheinterceptor",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["user",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"classes/LoginDto.html":{},"injectables/ProfileRepository.html":{},"injectables/RelayService.html":{},"guards/SupabaseAuthGuard.html":{},"classes/UserAuthDto.html":{}}}],["user.user",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.user.id",{"_index":1118,"title":{},"body":{"injectables/ProfileRepository.html":{}}}],["user_api_keys",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_api_keys.owner_id",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_id",{"_index":404,"title":{},"body":{"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateReportTemplateDto.html":{},"injectables/CwDeviceOwnersService.html":{},"injectables/DeviceOwnerRepository.html":{},"controllers/PdfController.html":{},"injectables/PdfService.html":{}}}],["userauthdto",{"_index":963,"title":{"classes/UserAuthDto.html":{}},"body":{"classes/LoginDto.html":{},"classes/UserAuthDto.html":{},"coverage.html":{}}}],["usererror",{"_index":1115,"title":{},"body":{"injectables/ProfileRepository.html":{}}}],["userid",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{}}}],["username",{"_index":460,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["users",{"_index":524,"title":{},"body":{"controllers/CwDeviceOwnersController.html":{}}}],["using",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"guards/SupabaseAuthGuard.html":{}}}],["valid",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{}}}],["validate",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateapikey",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateapikey(apikey",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(token",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":415,"title":{},"body":{"classes/CreateDeviceDto.html":{},"classes/CreateDeviceOwnerDto.html":{},"classes/CreateDeviceTypeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateReportTemplateDto.html":{},"classes/LoginDto.html":{},"classes/PdfDTO.html":{},"classes/UserAuthDto.html":{},"dependencies.html":{}}}],["value",{"_index":357,"title":{},"body":{"classes/BaseRepository.html":{},"controllers/DataController.html":{},"injectables/DeviceLocationRepository.html":{},"injectables/DeviceOwnerRepository.html":{},"injectables/DeviceRepository.html":{},"injectables/DeviceTypeRepository.html":{},"injectables/LocationRepository.html":{},"injectables/PdfService.html":{},"injectables/ReportTemplatesRepository.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1331,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1417,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RelayService.html":{},"injectables/SupabaseService.html":{},"miscellaneous/functions.html":{},"properties.html":{}}}],["wc2b",{"_index":811,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["website",{"_index":461,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["world",{"_index":138,"title":{},"body":{"injectables/AppService.html":{}}}],["wtf",{"_index":698,"title":{},"body":{"modules/DataModule.html":{}}}],["x",{"_index":612,"title":{},"body":{"controllers/CwDevicesController.html":{},"controllers/PdfController.html":{}}}],["yes",{"_index":659,"title":{},"body":{"controllers/DataController.html":{}}}],["zoom",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CwDeviceOwnersModule.html":{},"modules/CwDeviceTypeModule.html":{},"modules/CwDevicesModule.html":{},"modules/DataModule.html":{},"modules/GeolocationModule.html":{},"modules/LocationModule.html":{},"modules/PdfModule.html":{},"modules/ProfilesModule.html":{},"modules/RelayModule.html":{},"modules/ReportsTemplatesModule.html":{},"modules/SupabaseModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('/')@Throttle({default: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseInterceptors } from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { CacheInterceptor, CacheTTL } from '@nestjs/cache-manager';\nimport { Throttle } from '@nestjs/throttler';\nimport { Public } from './auth/public.decorator';\n\n// @ApiBearerAuth('authorization')\n// @UseInterceptors(CacheInterceptor)\n// @CacheTTL(20)\n@ApiTags('app')\n@Controller()\nexport class AppController {\n  constructor() {}\n\n  // @UseInterceptors(CacheInterceptor)\n  @Public()\n  @Get('/')\n  @Throttle({ default: { limit: 1, ttl: 6000 } })\n  async getHello() {\n    return [{ id: 1, name: 'Nest' + Math.random() }];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCwDeviceOwnersModule\n\nCwDeviceOwnersModule\n\nAppModule -->\n\nCwDeviceOwnersModule->AppModule\n\n\n\n\n\nCwDevicesModule\n\nCwDevicesModule\n\nAppModule -->\n\nCwDevicesModule->AppModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nGeolocationModule\n\nGeolocationModule\n\nAppModule -->\n\nGeolocationModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nAppModule -->\n\nLocationModule->AppModule\n\n\n\n\n\nPdfModule\n\nPdfModule\n\nAppModule -->\n\nPdfModule->AppModule\n\n\n\n\n\nProfilesModule\n\nProfilesModule\n\nAppModule -->\n\nProfilesModule->AppModule\n\n\n\n\n\nRelayModule\n\nRelayModule\n\nAppModule -->\n\nRelayModule->AppModule\n\n\n\n\n\nReportsTemplatesModule\n\nReportsTemplatesModule\n\nAppModule -->\n\nReportsTemplatesModule->AppModule\n\n\n\n\n\nSupabaseModule\n\nSupabaseModule\n\nAppModule -->\n\nSupabaseModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CwDeviceOwnersModule\n                        \n                        \n                            CwDevicesModule\n                        \n                        \n                            DataModule\n                        \n                        \n                            GeolocationModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            LocationModule\n                        \n                        \n                            PdfModule\n                        \n                        \n                            ProfilesModule\n                        \n                        \n                            RelayModule\n                        \n                        \n                            ReportsTemplatesModule\n                        \n                        \n                            SupabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // src/app.module.ts\nimport { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { AuthModule } from './auth/auth.module';\nimport { DataModule } from './data/data.module';\nimport { LocationModule } from './location/location.module';\nimport { SupabaseModule } from './supabase/supabase.module';\nimport { ProfilesModule } from './profiles/profiles.module';\nimport { CwDeviceOwnersModule } from './cw_device_owners/cw_device_owners.module';\nimport { CwDevicesModule } from './cw_devices/cw_devices.module';\nimport { ThrottlerGuard, ThrottlerModule } from '@nestjs/throttler';\nimport { APP_GUARD } from '@nestjs/core';\nimport { AuthService } from './auth/auth.service';\nimport { JwtAuthGuard } from './auth/guards/jwt-auth.guard';\nimport { CacheModule } from '@nestjs/cache-manager';\nimport { RelayModule } from './relay/relay.module';\nimport { GeolocationModule } from './geolocation/geolocation.module';\nimport { AppController } from './app.controller';\nimport { HealthModule } from './health/health.module';\nimport { PdfModule } from './pdf/pdf.module';\nimport { ReportsTemplatesModule } from './reports_templates/reports_templates.module';\n\n@Module({\n  imports: [\n    AuthModule,\n    ConfigModule.forRoot({\n      envFilePath: ['.env.development.local', '.env.development', '.env'],\n      isGlobal: true,\n    }),\n    ThrottlerModule.forRoot([{\n      ttl: 60000,\n      limit: 3,\n    }]),\n    CacheModule.register({\n      ttl: 60 * 10, // seconds\n      max: 1000, // maximum number of items in cache\n      isGlobal: true,\n    }),\n    DataModule,\n    LocationModule,\n    SupabaseModule,\n    ProfilesModule,\n    CwDeviceOwnersModule,\n    CwDevicesModule,\n    RelayModule,\n    GeolocationModule,\n    HealthModule,\n    PdfModule,\n    ReportsTemplatesModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AuthService,\n    {\n      provide: APP_GUARD,\n      useClass: JwtAuthGuard,  // Register JwtAuthGuard as a global guard\n    },\n    {\n      provide: APP_GUARD,\n      useClass: ThrottlerGuard\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getProtectedRoute\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getProtectedRoute\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProtectedRoute(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('JWT')@Get('user')@UseGuards(SupabaseAuthGuard)@ApiResponse({status: 200, description: 'Login Success'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 402, description: 'Payment Required'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiResponse({status: 404, description: 'Login Not Found', type: LoginDto, links: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('login')@Throttle({default: undefined})@ApiResponse({status: 200, description: 'Login Success'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 402, description: 'Payment Required'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiResponse({status: 404, description: 'Login Not Found'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        // Usage Example in Controller\nimport { Controller, Get, UseGuards, Req, Body, Post } from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { SupabaseAuthGuard } from './guards/supabase.guard';\nimport { LoginDto } from './DTOs/userAuth.dto';\nimport { AuthService } from './auth.service';\nimport { Public } from './public.decorator';\nimport { Throttle } from '@nestjs/throttler';\n\n@ApiTags('Endpoints related to user authentication and authorization')\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) { }\n\n  @ApiBearerAuth('JWT')\n  @Get('user')\n  @UseGuards(SupabaseAuthGuard)\n  @ApiResponse({ status: 200, description: 'Login Success' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 402, description: 'Payment Required' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiResponse({ status: 404, description: 'Login Not Found', type: LoginDto, links: {\n    exampleLink: {\n      operationId: 'getUserById',\n        parameters: {\n          userId: '$request.path.id',\n        },\n        description: 'Link to get user by ID',\n        server: {\n          url: 'https://api.cropwatch.io/api/auth/user',\n        }\n    }\n  } })\n  async getProtectedRoute(@Req() req) {\n    return { message: 'This is a protected route', user: req.user };\n  }\n\n  @Public()\n  @Post('login')\n  @Throttle({ default: { limit: 1, ttl: 6000 } })\n  @ApiResponse({ status: 200, description: 'Login Success' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 402, description: 'Payment Required' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiResponse({ status: 404, description: 'Login Not Found' })\n  async login(@Body() loginDto: LoginDto) {\n    const session = await this.authService.signInWithEmail(loginDto.email, loginDto.password);\n    return { message: 'Login successful', token: session.session?.access_token };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\n\n@Module({\n  controllers: [AuthController],\n  exports: [AuthService],\n  providers: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                supabase\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signInWithEmail\n                            \n                            \n                                    Async\n                                validateApiKey\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signInWithEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    signInWithEmail(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateApiKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateApiKey(apiKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        supabase\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SupabaseClient\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, CanActivate, ExecutionContext, UnauthorizedException, Logger, HttpException, HttpStatus } from '@nestjs/common';\nimport { SupabaseClient, User, createClient } from '@supabase/supabase-js';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class AuthService {\n  private supabase: SupabaseClient;\n\n  constructor(\n    private configService: ConfigService,\n    // private jwtService: JwtService,\n  ) {\n    const supabaseUrl = this.configService.get('SUPABASE_URL');\n    const supabaseKey = this.configService.get('SUPABASE_KEY');\n\n    // Initialize Supabase client with version 2 package\n    this.supabase = createClient(supabaseUrl, supabaseKey);\n  }\n\n  // Function to validate a JWT token using Supabase\n  async validateUser(token: string): Promise {\n    try {\n      const { data: user, error } = await this.supabase.auth.getUser(token);\n      if (error) {\n        throw new UnauthorizedException(error.message);\n      }\n      return user.user;\n    } catch (error) {\n      throw new UnauthorizedException(error.message);\n    }\n  }\n\n  async validateApiKey(apiKey: string): Promise {\n    // Here you would implement logic to validate the API key\n    // For now, we assume a hardcoded valid key for demonstration purposes\n\n    let { data: user_api_keys, error } = await this.supabase\n      .from('api_keys')\n      .select('*')\n      .eq('api_key', apiKey)\n      .gt('expires_at', new Date().toISOString())\n      .single();\n\n    if (error) {\n      throw new UnauthorizedException('Invalid API key');\n    }\n\n    if (!user_api_keys) {\n      throw new UnauthorizedException('API key not found');\n    }\n\n    return user_api_keys.owner_id;\n  }\n\n  // Function to sign in with email and password\n  async signInWithEmail(email: string, password: string): Promise {\n    try {\n      const { data: session, error } = await this.supabase.auth.signInWithPassword({ email, password });\n      if (error) {\n        throw new UnauthorizedException('Invalid credentials');\n      }\n      // this.jwtService.sign(session);\n      return session;\n    } catch (error) {\n      throw new UnauthorizedException('Unable to sign in with email and password');\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseController.html":{"url":"classes/BaseController.html","title":"class - BaseController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bases/base.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: BaseServiceInterface)\n                    \n                \n                        \n                            \n                                Defined in src/bases/base.controller.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        BaseServiceInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 201, description: 'Content Created'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 402, description: 'Payment Required'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiOperation({summary: 'Create a new item'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/bases/base.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'OK'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 402, description: 'Payment Required'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiOperation({summary: 'Get all items'})@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/bases/base.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Get, Post, Body, UseInterceptors } from '@nestjs/common';\nimport { ApiOperation, ApiResponse } from '@nestjs/swagger';\n\nexport interface BaseServiceInterface {\n  findAll: () => Promise;\n  create: (dto: CreateDto) => Promise;\n}\n\nexport class BaseController {\n  constructor(private readonly service: BaseServiceInterface) {}\n\n  @ApiResponse({ status: 200, description: 'OK' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 402, description: 'Payment Required' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiOperation({ summary: 'Get all items' })\n  @Get()\n  async findAll(): Promise {\n    return this.service.findAll();\n  }\n\n  @ApiResponse({ status: 201, description: 'Content Created' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 402, description: 'Payment Required' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiOperation({ summary: 'Create a new item' })\n  @Post()\n  async create(@Body() createDto: CreateDto): Promise {\n    return this.service.create(createDto);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseRepository.html":{"url":"classes/BaseRepository.html","title":"class - BaseRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repositories/base.repository.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(supabaseService: SupabaseService, tableName: string)\n                    \n                \n                        \n                            \n                                Defined in src/repositories/base.repository.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        supabaseService\n                                                  \n                                                        \n                                                                        SupabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tableName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(item: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositories/base.repository.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositories/base.repository.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositories/base.repository.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositories/base.repository.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number | string, item: Partial, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositories/base.repository.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SupabaseService } from '../supabase/supabase.service';\n\nexport class BaseRepository {\n  constructor(\n    protected readonly supabaseService: SupabaseService,\n    private readonly tableName: string\n  ) {}\n\n  async findAll(): Promise {\n    const { data, error } = await this.supabaseService\n      .getSupabaseClient()\n      .from(this.tableName)\n      .select('*');\n    if (error) {\n      throw error;\n    }\n    return data || [];\n  }\n\n  async findById(id: number | string, idColumn = 'id'): Promise {\n    const { data, error } = await this.supabaseService\n      .getSupabaseClient()\n      .from(this.tableName)\n      .select('*')\n      .eq(idColumn, id)\n      .single();\n    if (error) {\n      throw error;\n    }\n    return data || null;\n  }\n\n  async create(item: Partial): Promise {\n    const { data, error } = await this.supabaseService\n      .getSupabaseClient()\n      .from(this.tableName)\n      .insert(item)\n      .select('*')\n      .single();\n    if (error) {\n      throw error;\n    }\n    return data;\n  }\n\n  async update(id: number | string, item: Partial, idColumn = 'id'): Promise {\n    const { data, error } = await this.supabaseService\n      .getSupabaseClient()\n      .from(this.tableName)\n      .update(item)\n      .eq(idColumn, id)\n      .select('*')\n      .single();\n    if (error) {\n      throw error;\n    }\n    return data;\n  }\n\n  async delete(id: number | string, idColumn = 'id'): Promise {\n    const { error } = await this.supabaseService\n      .getSupabaseClient()\n      .from(this.tableName)\n      .delete()\n      .eq(idColumn, id);\n    if (error) {\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseService.html":{"url":"classes/BaseService.html","title":"class - BaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bases/base.service.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            BaseServiceInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: BaseRepository)\n                    \n                \n                        \n                            \n                                Defined in src/bases/base.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        BaseRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bases/base.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bases/base.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/bases/base.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bases/base.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, dto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bases/base.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseRepository } from \"src/repositories/base.repository\";\n\n// src/services/base.service.ts\nexport interface BaseServiceInterface {\n  findAll(): Promise;\n  create(dto: CreateDto): Promise;\n}\n\nexport class BaseService, UpdateDto extends Partial> implements BaseServiceInterface {\n  constructor(protected readonly repository: BaseRepository) {}\n\n  async findAll(): Promise {\n    return this.repository.findAll();\n  }\n\n  async findById(id: number): Promise {\n    return this.repository.findById(id);\n  }\n\n  async create(dto: CreateDto): Promise {\n    return this.repository.create(dto);\n  }\n\n  async update(id: number, dto: UpdateDto): Promise {\n    return this.repository.update(id, dto);\n  }\n\n  async delete(id: number): Promise {\n    return this.repository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseServiceInterface.html":{"url":"interfaces/BaseServiceInterface.html","title":"interface - BaseServiceInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseServiceInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bases/base.controller.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            create\n                                        \n                                \n                                \n                                        \n                                            findAll\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        create:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        findAll\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        findAll:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Get, Post, Body, UseInterceptors } from '@nestjs/common';\nimport { ApiOperation, ApiResponse } from '@nestjs/swagger';\n\nexport interface BaseServiceInterface {\n  findAll: () => Promise;\n  create: (dto: CreateDto) => Promise;\n}\n\nexport class BaseController {\n  constructor(private readonly service: BaseServiceInterface) {}\n\n  @ApiResponse({ status: 200, description: 'OK' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 402, description: 'Payment Required' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiOperation({ summary: 'Get all items' })\n  @Get()\n  async findAll(): Promise {\n    return this.service.findAll();\n  }\n\n  @ApiResponse({ status: 201, description: 'Content Created' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiResponse({ status: 402, description: 'Payment Required' })\n  @ApiResponse({ status: 403, description: 'Forbidden' })\n  @ApiOperation({ summary: 'Create a new item' })\n  @Post()\n  async create(@Body() createDto: CreateDto): Promise {\n    return this.service.create(createDto);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseServiceInterface-1.html":{"url":"interfaces/BaseServiceInterface-1.html","title":"interface - BaseServiceInterface-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseServiceInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bases/base.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        findAll\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bases/base.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/bases/base.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BaseRepository } from \"src/repositories/base.repository\";\n\n// src/services/base.service.ts\nexport interface BaseServiceInterface {\n  findAll(): Promise;\n  create(dto: CreateDto): Promise;\n}\n\nexport class BaseService, UpdateDto extends Partial> implements BaseServiceInterface {\n  constructor(protected readonly repository: BaseRepository) {}\n\n  async findAll(): Promise {\n    return this.repository.findAll();\n  }\n\n  async findById(id: number): Promise {\n    return this.repository.findById(id);\n  }\n\n  async create(dto: CreateDto): Promise {\n    return this.repository.create(dto);\n  }\n\n  async update(id: number, dto: UpdateDto): Promise {\n    return this.repository.update(id, dto);\n  }\n\n  async delete(id: number): Promise {\n    return this.repository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDatumDto.html":{"url":"classes/CreateDatumDto.html","title":"class - CreateDatumDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDatumDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/dto/create-datum.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateDatumDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDeviceDto.html":{"url":"classes/CreateDeviceDto.html","title":"class - CreateDeviceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDeviceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_devices/dto/create-device.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                dev_eui\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                serial_number\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dev_eui\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cw_devices/dto/create-device.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cw_devices/dto/create-device.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        serial_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cw_devices/dto/create-device.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cw_devices/dto/create-device.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cw_devices/dto/create-device.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsString } from 'class-validator';\n\nexport class CreateDeviceDto {\n  @IsNotEmpty()\n  @IsString()\n  dev_eui: string;\n\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  type: number;\n\n  @IsNotEmpty()\n  @IsString()\n  serial_number: string;\n\n  @IsNotEmpty()\n  @IsString()\n  user_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDeviceOwnerDto.html":{"url":"classes/CreateDeviceOwnerDto.html","title":"class - CreateDeviceOwnerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDeviceOwnerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_device_owners/dto/create-device-owner.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                dev_eui\n                            \n                            \n                                    \n                                    \n                                owner_id\n                            \n                            \n                                    \n                                    \n                                permission_level\n                            \n                            \n                                    \n                                    \n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dev_eui\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cw_device_owners/dto/create-device-owner.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        owner_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cw_device_owners/dto/create-device-owner.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        permission_level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cw_device_owners/dto/create-device-owner.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cw_device_owners/dto/create-device-owner.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsString } from 'class-validator';\n\nexport class CreateDeviceOwnerDto {\n  @IsNotEmpty()\n  @IsString()\n  dev_eui: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  owner_id: number;\n\n  @IsNotEmpty()\n  @IsNumber()\n  permission_level: number;\n\n  @IsNotEmpty()\n  @IsString()\n  user_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDeviceTypeDto.html":{"url":"classes/CreateDeviceTypeDto.html","title":"class - CreateDeviceTypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDeviceTypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_device_type/dto/create-device-type.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cw_device_type/dto/create-device-type.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cw_device_type/dto/create-device-type.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateDeviceTypeDto {\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @IsNotEmpty()\n  @IsString()\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLocationDto.html":{"url":"classes/CreateLocationDto.html","title":"class - CreateLocationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLocationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/dto/create-location.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                lat\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                long\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                map_zoom\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                owner_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        lat\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsLatitude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        long\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsLongitude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        map_zoom\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        owner_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsOptional, IsString, IsLatitude, IsLongitude } from 'class-validator';\n\nexport class CreateLocationDto {\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @IsOptional()\n  @IsString()\n  description?: string | null;\n\n  @IsOptional()\n  @IsLatitude()\n  lat?: number | null;\n\n  @IsOptional()\n  @IsLongitude()\n  long?: number | null;\n\n  @IsOptional()\n  @IsNumber()\n  map_zoom?: number | null;\n\n  @IsOptional()\n  @IsString()\n  owner_id?: string | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileDto.html":{"url":"classes/CreateProfileDto.html","title":"class - CreateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profiles/dto/create-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                accepted_agreements\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                avatar_url\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                employer\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                full_name\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                last_login\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                line_notify_token\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                updated_at\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                username\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                website\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        accepted_agreements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profiles/dto/create-profile.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        avatar_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsUrl()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profiles/dto/create-profile.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profiles/dto/create-profile.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        employer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profiles/dto/create-profile.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        full_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profiles/dto/create-profile.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profiles/dto/create-profile.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        last_login\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profiles/dto/create-profile.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        line_notify_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profiles/dto/create-profile.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profiles/dto/create-profile.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profiles/dto/create-profile.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        website\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsUrl()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profiles/dto/create-profile.dto.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsBoolean, IsEmail, IsNotEmpty, IsOptional, IsString, IsUrl } from 'class-validator';\n\nexport class CreateProfileDto {\n  @IsNotEmpty()\n  @IsString()\n  id: string;\n\n  @IsOptional()\n  @IsBoolean()\n  accepted_agreements?: boolean;\n\n  @IsOptional()\n  @IsString()\n  @IsUrl()\n  avatar_url?: string | null;\n\n  @IsOptional()\n  @IsEmail()\n  email?: string | null;\n\n  @IsOptional()\n  @IsString()\n  employer?: string | null;\n\n  @IsOptional()\n  @IsString()\n  full_name?: string | null;\n\n  @IsOptional()\n  @IsString()\n  last_login?: string | null;\n\n  @IsOptional()\n  @IsString()\n  line_notify_token?: string | null;\n\n  @IsOptional()\n  @IsString()\n  updated_at?: string | null;\n\n  @IsOptional()\n  @IsString()\n  username?: string | null;\n\n  @IsOptional()\n  @IsUrl()\n  website?: string | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateReportTemplateDto.html":{"url":"classes/CreateReportTemplateDto.html","title":"class - CreateReportTemplateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateReportTemplateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reports_templates/dto/create-report_template.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                dev_eui\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                serial_number\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dev_eui\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reports_templates/dto/create-report_template.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reports_templates/dto/create-report_template.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        serial_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reports_templates/dto/create-report_template.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reports_templates/dto/create-report_template.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reports_templates/dto/create-report_template.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsString } from 'class-validator';\n\nexport class CreateReportTemplateDto {\n  @IsNotEmpty()\n  @IsString()\n  dev_eui: string;\n\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  type: number;\n\n  @IsNotEmpty()\n  @IsString()\n  serial_number: string;\n\n  @IsNotEmpty()\n  @IsString()\n  user_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CwDeviceOwnersController.html":{"url":"controllers/CwDeviceOwnersController.html","title":"controller - CwDeviceOwnersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CwDeviceOwnersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_device_owners/cw_device_owners.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cw-device-owners\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDeviceOwnerDto: CreateDeviceOwnerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create a new device owner'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/cw_device_owners/cw_device_owners.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDeviceOwnerDto\n                                            \n                                                            CreateDeviceOwnerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get all device owners'})@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/cw_device_owners/cw_device_owners.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get a device owner by ID'})@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/cw_device_owners/cw_device_owners.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete a device owner by ID'})@Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/cw_device_owners/cw_device_owners.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateDeviceOwnerDto: UpdateDeviceOwnerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Update a device owner by ID'})@Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/cw_device_owners/cw_device_owners.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDeviceOwnerDto\n                                            \n                                                            UpdateDeviceOwnerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        // src/cw_device_owners/cw_device_owners.controller.ts\nimport { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { CwDeviceOwnersService } from './cw_device_owners.service';\nimport { ApiTags, ApiOperation } from '@nestjs/swagger';\nimport { CreateDeviceOwnerDto } from './dto/create-device-owner.dto';\nimport { UpdateDeviceOwnerDto } from './dto/update-device-owner.dto';\n\n@ApiTags('🔒Device-Owners - CRUD operations for linkages between current JWT users profile and devices')\n@Controller('cw-device-owners')\nexport class CwDeviceOwnersController {\n  constructor(private readonly cwDeviceOwnersService: CwDeviceOwnersService) {}\n\n  @ApiOperation({ summary: 'Get all device owners' })\n  @Get()\n  findAll() {\n    return this.cwDeviceOwnersService.findAll();\n  }\n\n  @ApiOperation({ summary: 'Get a device owner by ID' })\n  @Get(':id')\n  findOne(@Param('id') id: number) {\n    return this.cwDeviceOwnersService.findById(id);\n  }\n\n  @ApiOperation({ summary: 'Create a new device owner' })\n  @Post()\n  create(@Body() createDeviceOwnerDto: CreateDeviceOwnerDto) {\n    return this.cwDeviceOwnersService.create(createDeviceOwnerDto);\n  }\n\n  @ApiOperation({ summary: 'Update a device owner by ID' })\n  @Patch(':id')\n  update(@Param('id') id: number, @Body() updateDeviceOwnerDto: UpdateDeviceOwnerDto) {\n    return this.cwDeviceOwnersService.update(id, updateDeviceOwnerDto);\n  }\n\n  @ApiOperation({ summary: 'Delete a device owner by ID' })\n  @Delete(':id')\n  remove(@Param('id') id: number) {\n    return this.cwDeviceOwnersService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CwDeviceOwnersModule.html":{"url":"modules/CwDeviceOwnersModule.html","title":"module - CwDeviceOwnersModule","body":"\n                   \n\n\n\n\n    Modules\n    CwDeviceOwnersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CwDeviceOwnersModule\n\n\n\ncluster_CwDeviceOwnersModule_providers\n\n\n\ncluster_CwDeviceOwnersModule_exports\n\n\n\ncluster_CwDeviceOwnersModule_imports\n\n\n\n\nSupabaseModule\n\nSupabaseModule\n\n\n\nCwDeviceOwnersModule\n\nCwDeviceOwnersModule\n\nCwDeviceOwnersModule -->\n\nSupabaseModule->CwDeviceOwnersModule\n\n\n\n\n\nCwDeviceOwnersService \n\nCwDeviceOwnersService \n\nCwDeviceOwnersService  -->\n\nCwDeviceOwnersModule->CwDeviceOwnersService \n\n\n\n\n\nCwDeviceOwnersService\n\nCwDeviceOwnersService\n\nCwDeviceOwnersModule -->\n\nCwDeviceOwnersService->CwDeviceOwnersModule\n\n\n\n\n\nDeviceOwnerRepository\n\nDeviceOwnerRepository\n\nCwDeviceOwnersModule -->\n\nDeviceOwnerRepository->CwDeviceOwnersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cw_device_owners/cw_device_owners.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CwDeviceOwnersService\n                        \n                        \n                            DeviceOwnerRepository\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CwDeviceOwnersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SupabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CwDeviceOwnersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // src/cw_device_owners/cw_device_owners.module.ts\nimport { Module } from '@nestjs/common';\nimport { CwDeviceOwnersService } from './cw_device_owners.service';\nimport { CwDeviceOwnersController } from './cw_device_owners.controller';\nimport { SupabaseModule } from '../supabase/supabase.module';\nimport { DeviceOwnerRepository } from 'src/repositories/cw_device_owners';\n\n@Module({\n  imports: [SupabaseModule],\n  providers: [CwDeviceOwnersService, DeviceOwnerRepository], // Add repository and service\n  controllers: [CwDeviceOwnersController],\n  exports: [CwDeviceOwnersService],\n})\nexport class CwDeviceOwnersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CwDeviceOwnersService.html":{"url":"injectables/CwDeviceOwnersService.html","title":"injectable - CwDeviceOwnersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CwDeviceOwnersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_device_owners/cw_device_owners.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getDeviceOwnerByDevEuiAndUID\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deviceOwnerRepository: DeviceOwnerRepository)\n                    \n                \n                        \n                            \n                                Defined in src/cw_device_owners/cw_device_owners.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deviceOwnerRepository\n                                                  \n                                                        \n                                                                        DeviceOwnerRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getDeviceOwnerByDevEuiAndUID\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDeviceOwnerByDevEuiAndUID(devEui: string, user_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cw_device_owners/cw_device_owners.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                devEui\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:20\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:28\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:12\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:16\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, dto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:24\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateDeviceOwnerDto } from './dto/create-device-owner.dto';\nimport { UpdateDeviceOwnerDto } from './dto/update-device-owner.dto';\nimport { DeviceOwnerRepository } from 'src/repositories/cw_device_owners';\nimport { Database } from 'database.types';\nimport { BaseService } from 'src/bases/base.service';\n\ntype DeviceOwnerRow = Database['public']['Tables']['cw_device_owners']['Row'];\n\n@Injectable()\nexport class CwDeviceOwnersService extends BaseService {\n  constructor(private readonly deviceOwnerRepository: DeviceOwnerRepository) {\n    super(deviceOwnerRepository);\n  }\n\n  public async getDeviceOwnerByDevEuiAndUID(devEui: string, user_id: string): Promise {\n    return this.deviceOwnerRepository.findByDevEuiAndUID(devEui, user_id);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CwDeviceTypeController.html":{"url":"controllers/CwDeviceTypeController.html","title":"controller - CwDeviceTypeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CwDeviceTypeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_device_type/cw_device_type.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cw-device-type\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 201, description: 'Content Created'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 402, description: 'Payment Required'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiOperation({summary: 'Create a new item'})@Post()\n                \n            \n\n                    \n                        \n                            Inherited from         BaseController\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseController:30\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'OK'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 402, description: 'Payment Required'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiOperation({summary: 'Get all items'})@Get()\n                \n            \n\n                    \n                        \n                            Inherited from         BaseController\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseController:19\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { Database } from 'database.types';\nimport { BaseController } from 'src/bases/base.controller';\nimport { CreateDeviceTypeDto } from './dto/create-device-type.dto';\nimport { CwDeviceTypeService } from './cw_device_type.service';\nimport { ApiTags } from '@nestjs/swagger';\n\ntype DeviceTypeRow = Database['public']['Tables']['cw_device_type']['Row'];\n\n@ApiTags('Device Type')\n@Controller('cw-device-type')\nexport class CwDeviceTypeController extends BaseController {\n    constructor(cwDeviceTypeService: CwDeviceTypeService) {\n        super(cwDeviceTypeService);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CwDeviceTypeModule.html":{"url":"modules/CwDeviceTypeModule.html","title":"module - CwDeviceTypeModule","body":"\n                   \n\n\n\n\n    Modules\n    CwDeviceTypeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CwDeviceTypeModule\n\n\n\ncluster_CwDeviceTypeModule_imports\n\n\n\ncluster_CwDeviceTypeModule_exports\n\n\n\ncluster_CwDeviceTypeModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nCwDeviceTypeModule\n\nCwDeviceTypeModule\n\nCwDeviceTypeModule -->\n\nAuthModule->CwDeviceTypeModule\n\n\n\n\n\nSupabaseModule\n\nSupabaseModule\n\nCwDeviceTypeModule -->\n\nSupabaseModule->CwDeviceTypeModule\n\n\n\n\n\nCwDeviceTypeService \n\nCwDeviceTypeService \n\nCwDeviceTypeService  -->\n\nCwDeviceTypeModule->CwDeviceTypeService \n\n\n\n\n\nCwDeviceTypeService\n\nCwDeviceTypeService\n\nCwDeviceTypeModule -->\n\nCwDeviceTypeService->CwDeviceTypeModule\n\n\n\n\n\nDeviceTypeRepository\n\nDeviceTypeRepository\n\nCwDeviceTypeModule -->\n\nDeviceTypeRepository->CwDeviceTypeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cw_device_type/cw_device_type.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CwDeviceTypeService\n                        \n                        \n                            DeviceTypeRepository\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CwDeviceTypeController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            SupabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CwDeviceTypeService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CwDeviceTypeService } from './cw_device_type.service';\nimport { CwDeviceTypeController } from './cw_device_type.controller';\nimport { SupabaseModule } from 'src/supabase/supabase.module';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { DeviceTypeRepository } from 'src/repositories/cw_device_type.repository';\n\n@Module({\n  imports: [SupabaseModule, AuthModule],\n  providers: [\n    CwDeviceTypeService,\n    DeviceTypeRepository,\n    \n  ],\n  controllers: [CwDeviceTypeController],\n  exports: [CwDeviceTypeService],\n})\nexport class CwDeviceTypeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CwDeviceTypeService.html":{"url":"injectables/CwDeviceTypeService.html","title":"injectable - CwDeviceTypeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CwDeviceTypeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_device_type/cw_device_type.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getDeviceTypeByDevType\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deviceTypeRepository: DeviceTypeRepository)\n                    \n                \n                        \n                            \n                                Defined in src/cw_device_type/cw_device_type.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deviceTypeRepository\n                                                  \n                                                        \n                                                                        DeviceTypeRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getDeviceTypeByDevType\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDeviceTypeByDevType(devType: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cw_device_type/cw_device_type.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                devType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:20\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:28\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:12\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:16\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, dto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:24\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Database } from 'database.types';\nimport { BaseService } from 'src/bases/base.service';\nimport { CreateDeviceTypeDto } from './dto/create-device-type.dto';\nimport { UpdateDeviceTypeDto } from './dto/update-device-type.dto';\nimport { DeviceTypeRepository } from 'src/repositories/cw_device_type.repository';\n\ntype DeviceTypeRow = Database['public']['Tables']['cw_device_type']['Row'];\n\n@Injectable()\nexport class CwDeviceTypeService extends BaseService {\n  constructor(private readonly deviceTypeRepository: DeviceTypeRepository) {\n    super(deviceTypeRepository);\n  }\n\n    public async getDeviceTypeByDevType(devType: string): Promise {\n        return this.deviceTypeRepository.findByDeviceType({ dev_type: devType });\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CwDevicesController.html":{"url":"controllers/CwDevicesController.html","title":"controller - CwDevicesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CwDevicesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_devices/cw_devices.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cw-devices\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 201, description: 'Content Created'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 402, description: 'Payment Required'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiOperation({summary: 'Create a new item'})@Post()\n                \n            \n\n                    \n                        \n                            Inherited from         BaseController\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseController:30\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'OK'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 402, description: 'Payment Required'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiOperation({summary: 'Get all items'})@Get()\n                \n            \n\n                    \n                        \n                            Inherited from         BaseController\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseController:19\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Get, Post, Body, Patch, Param, Delete, Controller } from '@nestjs/common';\nimport { CwDevicesService } from './cw_devices.service';\nimport { ApiBearerAuth, ApiSecurity, ApiTags } from '@nestjs/swagger';\nimport { Database } from 'database.types';\nimport { BaseController } from 'src/bases/base.controller';\nimport { CreateDeviceDto } from './dto/create-device.dto';\n\ntype DevicesRow = Database['public']['Tables']['cw_devices']['Row'];\n\n@ApiBearerAuth('JWT')\n@ApiSecurity('x-api-key', ['x-api-key'])\n@ApiTags('Devices', 'Operations related to current JWT device management')\n@Controller('cw-devices')\nexport class CwDevicesController extends BaseController {\n  constructor(cwDevicesService: CwDevicesService) {\n    super(cwDevicesService);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CwDevicesModule.html":{"url":"modules/CwDevicesModule.html","title":"module - CwDevicesModule","body":"\n                   \n\n\n\n\n    Modules\n    CwDevicesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CwDevicesModule\n\n\n\ncluster_CwDevicesModule_imports\n\n\n\ncluster_CwDevicesModule_providers\n\n\n\ncluster_CwDevicesModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nCwDevicesModule\n\nCwDevicesModule\n\nCwDevicesModule -->\n\nAuthModule->CwDevicesModule\n\n\n\n\n\nSupabaseModule\n\nSupabaseModule\n\nCwDevicesModule -->\n\nSupabaseModule->CwDevicesModule\n\n\n\n\n\nCwDevicesService \n\nCwDevicesService \n\nCwDevicesService  -->\n\nCwDevicesModule->CwDevicesService \n\n\n\n\n\nCwDevicesService\n\nCwDevicesService\n\nCwDevicesModule -->\n\nCwDevicesService->CwDevicesModule\n\n\n\n\n\nDeviceRepository\n\nDeviceRepository\n\nCwDevicesModule -->\n\nDeviceRepository->CwDevicesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cw_devices/cw_devices.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CwDevicesService\n                        \n                        \n                            DeviceRepository\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CwDevicesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            SupabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CwDevicesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // src/cw_devices/cw_devices.module.ts\nimport { Module } from '@nestjs/common';\nimport { CwDevicesService } from './cw_devices.service';\nimport { CwDevicesController } from './cw_devices.controller';\nimport { SupabaseModule } from '../supabase/supabase.module';\nimport { AuthModule } from '../auth/auth.module';\nimport { DeviceRepository } from 'src/repositories/cw_devices.repository';\n\n@Module({\n  imports: [SupabaseModule, AuthModule],\n  providers: [CwDevicesService, DeviceRepository],\n  controllers: [CwDevicesController],\n  exports: [CwDevicesService],\n})\nexport class CwDevicesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CwDevicesService.html":{"url":"injectables/CwDevicesService.html","title":"injectable - CwDevicesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CwDevicesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_devices/cw_devices.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getDeviceByDevEui\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deviceRepository: DeviceRepository)\n                    \n                \n                        \n                            \n                                Defined in src/cw_devices/cw_devices.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deviceRepository\n                                                  \n                                                        \n                                                                        DeviceRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getDeviceByDevEui\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDeviceByDevEui(devEui: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cw_devices/cw_devices.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                devEui\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:20\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:28\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:12\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:16\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, dto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:24\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Database } from 'database.types';\nimport { BaseService } from 'src/bases/base.service';\nimport { DeviceRepository } from 'src/repositories/cw_devices.repository';\nimport { UpdateDeviceDto } from './dto/update-device.dto';\nimport { CreateDeviceDto } from './dto/create-device.dto';\n\ntype DevicesRow = Database['public']['Tables']['cw_devices']['Row'];\n\n@Injectable()\nexport class CwDevicesService extends BaseService {\n  constructor(private readonly deviceRepository: DeviceRepository) {\n    super(deviceRepository);\n  }\n\n  public async getDeviceByDevEui(devEui: string): Promise {\n    return this.deviceRepository.findByDevEui({ dev_eui: devEui });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DataController.html":{"url":"controllers/DataController.html","title":"controller - DataController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DataController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/data.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                data\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDatumDto: CreateDatumDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/data/data.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDatumDto\n                                            \n                                                            CreateDatumDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(req, devEui?: string, skip: number, take: number, order: \"ASC\" | \"DESC\")\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Retrieve data with filters and pagination'})@ApiQuery({name: 'DevEui', required: false, type: String, description: 'Device EUI to filter data by specific device.'})@ApiQuery({name: 'Skip', required: false, type: Number, description: 'Number of records to skip. (default: 0)'})@ApiQuery({name: 'Take', required: false, type: Number, description: 'Number of records to retrieve. (default: 10)'})@ApiQuery({name: 'Order', required: false, type: String, description: 'Created_At Order direction, either ASC or DESC.'})@ApiBearerAuth('JWT')@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/data/data.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                devEui\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                skip\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                        \n                                                take\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                        \n                                                order\n                                            \n                                                        \"ASC\" | \"DESC\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'ASC'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/data/data.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query, Req } from '@nestjs/common';\nimport { DataService } from './data.service';\nimport { CreateDatumDto } from './dto/create-datum.dto';\nimport { UpdateDatumDto } from './dto/update-datum.dto';\nimport { ApiOperation, ApiQuery, ApiTags } from '@nestjs/swagger';\nimport { CwDeviceTypeService } from 'src/cw_device_type/cw_device_type.service';\nimport { CwDevicesService } from 'src/cw_devices/cw_devices.service';\nimport { ApiBearerAuth } from '@nestjs/swagger';\n\n\n@Controller('data')\n@ApiTags('CRUD operations for data related to devices rigistered to current JWT')\nexport class DataController {\n  constructor(\n    private readonly dataService: DataService,\n    private readonly deviceService: CwDevicesService,\n    private readonly deviceTypeService: CwDeviceTypeService,\n  ) { }\n\n  @Post()\n  create(@Body() createDatumDto: CreateDatumDto) {\n    return this.dataService.create(createDatumDto);\n  }\n\n  @ApiOperation({ summary: 'Retrieve data with filters and pagination' })\n  @ApiQuery({ name: 'DevEui', required: false, type: String, description: 'Device EUI to filter data by specific device.' })\n  @ApiQuery({ name: 'Skip', required: false, type: Number, description: 'Number of records to skip. (default: 0)' })\n  @ApiQuery({ name: 'Take', required: false, type: Number, description: 'Number of records to retrieve. (default: 10)' })\n  @ApiQuery({ name: 'Order', required: false, type: String, description: 'Created_At Order direction, either ASC or DESC.' })\n  @ApiBearerAuth('JWT')\n  @Get()\n  findAll(\n    @Req() req,\n    @Query('DevEui') devEui?: string,\n    @Query('Skip') skip = 0,\n    @Query('Take') take = 10,\n    @Query('Order') order: 'ASC' | 'DESC' = 'ASC'\n  ) {\n    if (!req.user) {\n      return 'Unauthorized';\n    }\n    return this.dataService.findAll({ devEui, skip, take, order }, req.user.email);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.dataService.findOne(+id);\n  }\n\n  // @Patch(':id')\n  // update(@Param('id') id: string, @Body() updateDatumDto: UpdateDatumDto) {\n  //   return this.dataService.update(+id, updateDatumDto);\n  // }\n\n  // @Delete(':id')\n  // remove(@Param('id') id: string) {\n  //   return this.dataService.remove(+id);\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n    Modules\n    DataModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataModule\n\n\n\ncluster_DataModule_imports\n\n\n\ncluster_DataModule_providers\n\n\n\ncluster_DataModule_exports\n\n\n\n\nCwDeviceTypeModule\n\nCwDeviceTypeModule\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nCwDeviceTypeModule->DataModule\n\n\n\n\n\nCwDevicesModule\n\nCwDevicesModule\n\nDataModule -->\n\nCwDevicesModule->DataModule\n\n\n\n\n\nDataRepository \n\nDataRepository \n\nDataRepository  -->\n\nDataModule->DataRepository \n\n\n\n\n\nDataService \n\nDataService \n\nDataService  -->\n\nDataModule->DataService \n\n\n\n\n\nCwDeviceOwnersService\n\nCwDeviceOwnersService\n\nDataModule -->\n\nCwDeviceOwnersService->DataModule\n\n\n\n\n\nCwDeviceTypeService\n\nCwDeviceTypeService\n\nDataModule -->\n\nCwDeviceTypeService->DataModule\n\n\n\n\n\nCwDevicesService\n\nCwDevicesService\n\nDataModule -->\n\nCwDevicesService->DataModule\n\n\n\n\n\nDataRepository\n\nDataRepository\n\nDataModule -->\n\nDataRepository->DataModule\n\n\n\n\n\nDataService\n\nDataService\n\nDataModule -->\n\nDataService->DataModule\n\n\n\n\n\nDeviceOwnerRepository\n\nDeviceOwnerRepository\n\nDataModule -->\n\nDeviceOwnerRepository->DataModule\n\n\n\n\n\nDeviceRepository\n\nDeviceRepository\n\nDataModule -->\n\nDeviceRepository->DataModule\n\n\n\n\n\nDeviceTypeRepository\n\nDeviceTypeRepository\n\nDataModule -->\n\nDeviceTypeRepository->DataModule\n\n\n\n\n\nSupabaseService\n\nSupabaseService\n\nDataModule -->\n\nSupabaseService->DataModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/data/data.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CwDeviceOwnersService\n                        \n                        \n                            CwDeviceTypeService\n                        \n                        \n                            CwDevicesService\n                        \n                        \n                            DataRepository\n                        \n                        \n                            DataService\n                        \n                        \n                            DeviceOwnerRepository\n                        \n                        \n                            DeviceRepository\n                        \n                        \n                            DeviceTypeRepository\n                        \n                        \n                            SupabaseService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DataController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CwDeviceTypeModule\n                        \n                        \n                            CwDevicesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DataRepository\n                        \n                        \n                            DataService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DataService } from './data.service';\nimport { DataController } from './data.controller';\nimport { CwDeviceTypeService } from 'src/cw_device_type/cw_device_type.service';\nimport { CwDevicesService } from 'src/cw_devices/cw_devices.service';\nimport { DataRepository } from 'src/repositories/data.repository';\nimport { DeviceRepository } from 'src/repositories/cw_devices.repository';\nimport { DeviceTypeRepository } from 'src/repositories/cw_device_type.repository';\nimport { SupabaseService } from 'src/supabase/supabase.service';\nimport { CwDeviceOwnersService } from 'src/cw_device_owners/cw_device_owners.service';\nimport { DeviceOwnerRepository } from 'src/repositories/cw_device_owners';\nimport { CwDevicesModule } from 'src/cw_devices/cw_devices.module';\nimport { CwDeviceTypeModule } from 'src/cw_device_type/cw_device_type.module';\n\n@Module({\n  imports: [\n    CwDevicesModule,\n    CwDeviceTypeModule,\n  ],\n  controllers: [DataController],\n  providers: [\n    DataService,\n    DeviceOwnerRepository, //WTF IS THIS???\n    CwDevicesService,\n    CwDeviceTypeService,\n    CwDeviceOwnersService,\n    DataRepository,\n    DeviceRepository,\n    DeviceTypeRepository,\n    SupabaseService,\n  ],\n  exports: [\n    DataService,\n    DataRepository,\n  ]\n})\nexport class DataModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataRepository.html":{"url":"injectables/DataRepository.html","title":"injectable - DataRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repositories/data.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findAllByTable\n                            \n                            \n                                    Public\n                                    Async\n                                findByIdInTable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(supabaseService: SupabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/repositories/data.repository.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        supabaseService\n                                                  \n                                                        \n                                                                        SupabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAllByTable\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByTable(tableName: string, devEui: string, skip: number, take: number, order: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositories/data.repository.ts:9\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                devEui\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                skip\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                take\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                order\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findByIdInTable\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByIdInTable(tableName: string, id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositories/data.repository.ts:25\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tableName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SupabaseService } from '../supabase/supabase.service';\n\n@Injectable()\nexport class DataRepository {\n  constructor(private readonly supabaseService: SupabaseService) {}\n\n  public async findAllByTable(tableName: string, devEui: string, skip: number, take: number, order: boolean): Promise {\n    const { data, error } = await this.supabaseService\n      .getSupabaseClient()\n      .from(tableName)\n      .select('*')\n      .eq('dev_eui', devEui)\n      .range(skip, skip + take - 1)\n      .order('created_at', { ascending: order });\n\n    if (error) {\n      throw new Error(`Failed to retrieve data from table ${tableName}: ${error.message}`);\n    }\n\n    return data || [];\n  }\n\n  public async findByIdInTable(tableName: string, id: number): Promise {\n    const { data, error } = await this.supabaseService\n      .getSupabaseClient()\n      .from(tableName)\n      .select('*')\n      .eq('id', id)\n      .single();\n\n    if (error) {\n      throw new Error(`Failed to find record with id ${id} in table ${tableName}: ${error.message}`);\n    }\n\n    return data || null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deviceService: CwDevicesService, deviceTypeService: CwDeviceTypeService, deviceOwnerService: CwDeviceOwnersService, dataRepository: DataRepository)\n                    \n                \n                        \n                            \n                                Defined in src/data/data.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deviceService\n                                                  \n                                                        \n                                                                        CwDevicesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deviceTypeService\n                                                  \n                                                        \n                                                                        CwDeviceTypeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deviceOwnerService\n                                                  \n                                                        \n                                                                        CwDeviceOwnersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataRepository\n                                                  \n                                                        \n                                                                        DataRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createDatumDto: CreateDatumDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/data.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDatumDto\n                                            \n                                                            CreateDatumDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(params: FindAllParams, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/data.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            FindAllParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/data.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/data.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateDatumDto: UpdateDatumDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/data/data.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDatumDto\n                                            \n                                                            UpdateDatumDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, NotAcceptableException, NotFoundException, NotImplementedException, Req } from '@nestjs/common';\nimport { CreateDatumDto } from './dto/create-datum.dto';\nimport { UpdateDatumDto } from './dto/update-datum.dto';\nimport { CwDevicesService } from 'src/cw_devices/cw_devices.service';\nimport { CwDeviceTypeService } from 'src/cw_device_type/cw_device_type.service';\nimport { Database } from 'database.types';\nimport { DataRepository } from 'src/repositories/data.repository';\nimport { CwDeviceOwnersService } from 'src/cw_device_owners/cw_device_owners.service';\n\n\nexport interface FindAllParams {\n  devEui?: string;\n  skip: number;\n  take: number;\n  order: 'ASC' | 'DESC';\n}\n\n@Injectable()\nexport class DataService {\n  constructor(\n    private readonly deviceService: CwDevicesService,\n    private readonly deviceTypeService: CwDeviceTypeService,\n    private readonly deviceOwnerService: CwDeviceOwnersService,\n    private readonly dataRepository: DataRepository,\n  ) { }\n\n  create(createDatumDto: CreateDatumDto) {\n    return new NotImplementedException();\n  }\n\n  async findAll(params: FindAllParams, email: string): Promise {\n    const { devEui, skip, take, order } = params;\n    if (!devEui) {\n      return new BadRequestException('DevEui is required');\n    }\n    const deviceOwner = await this.deviceOwnerService.getDeviceOwnerByDevEuiAndUID(devEui, email);\n    if (!deviceOwner) {\n      return new NotAcceptableException('Device does not exist OR Device Owner not found');\n    }\n    const device = await this.deviceService.getDeviceByDevEui(devEui);\n    if (!device) {\n      return new NotFoundException('Device not found');\n    }\n    const deviceType = device.type;\n    if (!deviceType) {\n      throw new NotFoundException('Device type not found');\n    }\n    const deviceTypeData = await this.deviceTypeService.findById(deviceType);\n    if (!deviceTypeData) {\n      throw new NotFoundException('Device type data not found');\n    }\n    const data_table: string = deviceTypeData.data_table;\n    if (!data_table) {\n      throw new NotFoundException('Data table not found');\n    }\n    //Data_table will contain the name of the datatable to query in the repo\n    const data = this.dataRepository.findAllByTable(data_table, devEui, skip, take, order == 'ASC' ? true : false);\n    return data;\n  }\n\n  findOne(id: number) {\n    return new NotImplementedException();\n  }\n\n  update(id: number, updateDatumDto: UpdateDatumDto) {\n    return new NotImplementedException();\n  }\n\n  remove(id: number) {\n    return new NotImplementedException();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Datum.html":{"url":"classes/Datum.html","title":"class - Datum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Datum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/entities/datum.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Datum {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeviceLocationRepository.html":{"url":"injectables/DeviceLocationRepository.html","title":"injectable - DeviceLocationRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeviceLocationRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repositories/cw_device_locations.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(supabaseService: SupabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/repositories/cw_device_locations.repository.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        supabaseService\n                                                  \n                                                        \n                                                                        SupabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(item: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:34\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:61\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:10\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:21\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number | string, item: Partial, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:47\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SupabaseService } from '../supabase/supabase.service';\nimport { Database } from 'database.types';\nimport { BaseRepository } from './base.repository';\n\ntype DeviceLocationRow = Database['public']['Tables']['cw_device_locations']['Row'];\n\n@Injectable()\nexport class DeviceLocationRepository extends BaseRepository {\n  constructor(supabaseService: SupabaseService) {\n    super(supabaseService, 'cw_device_locations');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeviceOwnerRepository.html":{"url":"injectables/DeviceOwnerRepository.html","title":"injectable - DeviceOwnerRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeviceOwnerRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repositories/cw_device_owners.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findByDevEuiAndUID\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(supabaseService: SupabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/repositories/cw_device_owners.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        supabaseService\n                                                  \n                                                        \n                                                                        SupabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findByDevEuiAndUID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByDevEuiAndUID(dev_eui: string, user_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositories/cw_device_owners.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dev_eui\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(item: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:34\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:61\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:10\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:21\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number | string, item: Partial, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:47\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SupabaseService } from '../supabase/supabase.service';\nimport { Database } from 'database.types';\nimport { BaseRepository } from './base.repository';\n\ntype DeviceOwnerRow = Database['public']['Tables']['cw_device_owners']['Row'];\n\n@Injectable()\nexport class DeviceOwnerRepository extends BaseRepository {\n  constructor(supabaseService: SupabaseService) {\n    super(supabaseService, 'cw_device_owners');\n  }\n\n  public async findByDevEuiAndUID(dev_eui: string, user_id: string): Promise {\n    const { data, error } = await this.supabaseService\n      .getSupabaseClient()\n      .from('cw_device_owners')\n      .select('*')\n      .eq('dev_eui', dev_eui)\n      .eq('user_id', user_id)\n      .single();\n    if (error) {\n      throw new Error(`Failed to find device owner with dev_eui ${dev_eui}: ${error.message}`);\n    }\n    if (!data) {\n      throw new Error(`Device owner with dev_eui ${dev_eui} not found.`);\n    }\n    return data as DeviceOwnerRow;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeviceRepository.html":{"url":"injectables/DeviceRepository.html","title":"injectable - DeviceRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeviceRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repositories/cw_devices.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findByDevEui\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(supabaseService: SupabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/repositories/cw_devices.repository.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        supabaseService\n                                                  \n                                                        \n                                                                        SupabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findByDevEui\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByDevEui(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositories/cw_devices.repository.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(item: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:34\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:61\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:10\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:21\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number | string, item: Partial, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:47\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SupabaseService } from '../supabase/supabase.service';\nimport { Database } from 'database.types';\nimport { BaseRepository } from './base.repository';\n\ntype DeviceRow = Database['public']['Tables']['cw_devices']['Row'];\n\n@Injectable()\nexport class DeviceRepository extends BaseRepository {\n    constructor(supabaseService: SupabaseService) {\n        super(supabaseService, 'cw_devices');\n    }\n\n    public async findByDevEui({ dev_eui }: { dev_eui: string }): Promise {\n        const { data, error } = await this.supabaseService\n            .getSupabaseClient()\n            .from('cw_devices')\n            .select('*')\n            .eq('dev_eui', dev_eui)\n            .single();\n        if (error) {\n            throw new Error(`Failed to find device with dev_eui ${dev_eui}: ${error.message}`);\n        }\n        if (!data) {\n            throw new Error(`Device with dev_eui ${dev_eui} not found.`);\n        }\n        return data as DeviceRow;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeviceTypeRepository.html":{"url":"injectables/DeviceTypeRepository.html","title":"injectable - DeviceTypeRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeviceTypeRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repositories/cw_device_type.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findByDeviceType\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(supabaseService: SupabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/repositories/cw_device_type.repository.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        supabaseService\n                                                  \n                                                        \n                                                                        SupabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findByDeviceType\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByDeviceType(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositories/cw_device_type.repository.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(item: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:34\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:61\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:10\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:21\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number | string, item: Partial, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:47\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SupabaseService } from '../supabase/supabase.service';\nimport { Database } from 'database.types';\nimport { BaseRepository } from './base.repository';\n\ntype DeviceTypeRow = Database['public']['Tables']['cw_device_type']['Row'];\n\n@Injectable()\nexport class DeviceTypeRepository extends BaseRepository {\n    constructor(supabaseService: SupabaseService) {\n        super(supabaseService, 'cw_device_type');\n    }\n\n    public async findByDeviceType({ dev_type }: { dev_type: string }): Promise {\n        const { data, error } = await this.supabaseService\n            .getSupabaseClient()\n            .from('cw_device_type')\n            .select('*')\n            .eq('dev_type', dev_type)\n            .single();\n        if (error) {\n            throw new Error(`Failed to find device type with dev_type ${dev_type}: ${error.message}`);\n        }\n        if (!data) {\n            throw new Error(`Device type with dev_type ${dev_type} not found.`);\n        }\n        return data as DeviceTypeRow;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FindAllParams.html":{"url":"interfaces/FindAllParams.html","title":"interface - FindAllParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FindAllParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/data.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            devEui\n                                        \n                                \n                                \n                                        \n                                            order\n                                        \n                                \n                                \n                                        \n                                            skip\n                                        \n                                \n                                \n                                        \n                                            take\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        devEui\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        devEui:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:     \"ASC\" | \"DESC\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"ASC\" | \"DESC\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        take\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        take:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BadRequestException, Injectable, NotAcceptableException, NotFoundException, NotImplementedException, Req } from '@nestjs/common';\nimport { CreateDatumDto } from './dto/create-datum.dto';\nimport { UpdateDatumDto } from './dto/update-datum.dto';\nimport { CwDevicesService } from 'src/cw_devices/cw_devices.service';\nimport { CwDeviceTypeService } from 'src/cw_device_type/cw_device_type.service';\nimport { Database } from 'database.types';\nimport { DataRepository } from 'src/repositories/data.repository';\nimport { CwDeviceOwnersService } from 'src/cw_device_owners/cw_device_owners.service';\n\n\nexport interface FindAllParams {\n  devEui?: string;\n  skip: number;\n  take: number;\n  order: 'ASC' | 'DESC';\n}\n\n@Injectable()\nexport class DataService {\n  constructor(\n    private readonly deviceService: CwDevicesService,\n    private readonly deviceTypeService: CwDeviceTypeService,\n    private readonly deviceOwnerService: CwDeviceOwnersService,\n    private readonly dataRepository: DataRepository,\n  ) { }\n\n  create(createDatumDto: CreateDatumDto) {\n    return new NotImplementedException();\n  }\n\n  async findAll(params: FindAllParams, email: string): Promise {\n    const { devEui, skip, take, order } = params;\n    if (!devEui) {\n      return new BadRequestException('DevEui is required');\n    }\n    const deviceOwner = await this.deviceOwnerService.getDeviceOwnerByDevEuiAndUID(devEui, email);\n    if (!deviceOwner) {\n      return new NotAcceptableException('Device does not exist OR Device Owner not found');\n    }\n    const device = await this.deviceService.getDeviceByDevEui(devEui);\n    if (!device) {\n      return new NotFoundException('Device not found');\n    }\n    const deviceType = device.type;\n    if (!deviceType) {\n      throw new NotFoundException('Device type not found');\n    }\n    const deviceTypeData = await this.deviceTypeService.findById(deviceType);\n    if (!deviceTypeData) {\n      throw new NotFoundException('Device type data not found');\n    }\n    const data_table: string = deviceTypeData.data_table;\n    if (!data_table) {\n      throw new NotFoundException('Data table not found');\n    }\n    //Data_table will contain the name of the datatable to query in the repo\n    const data = this.dataRepository.findAllByTable(data_table, devEui, skip, take, order == 'ASC' ? true : false);\n    return data;\n  }\n\n  findOne(id: number) {\n    return new NotImplementedException();\n  }\n\n  update(id: number, updateDatumDto: UpdateDatumDto) {\n    return new NotImplementedException();\n  }\n\n  remove(id: number) {\n    return new NotImplementedException();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GeolocationController.html":{"url":"controllers/GeolocationController.html","title":"controller - GeolocationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GeolocationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/geolocation/geolocation.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                geolocation\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getProtectedRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getProtectedRoute\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProtectedRoute()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('JWT')@Get('address')@UseGuards(SupabaseAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/geolocation/geolocation.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { SupabaseAuthGuard } from 'src/auth/guards/supabase.guard';\nimport { GeolocationService } from './geolocation.service';\n\n@ApiTags('Addresses')\n@Controller('geolocation')\nexport class GeolocationController {\n    constructor(private readonly geoLocationService: GeolocationService) { }\n\n    @ApiBearerAuth('JWT')\n    @Get('address')\n    @UseGuards(SupabaseAuthGuard)\n    async getProtectedRoute() {\n        const location = await this.geoLocationService.getGeolocation('Africa House, 70 Kingsway, London WC2B 6AH, United Kingdom');\n        return { message: 'Geolocation fetched', location };\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GeolocationModule.html":{"url":"modules/GeolocationModule.html","title":"module - GeolocationModule","body":"\n                   \n\n\n\n\n    Modules\n    GeolocationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GeolocationModule\n\n\n\ncluster_GeolocationModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nGeolocationModule\n\nGeolocationModule\n\nGeolocationModule -->\n\nAuthService->GeolocationModule\n\n\n\n\n\nGeolocationService\n\nGeolocationService\n\nGeolocationModule -->\n\nGeolocationService->GeolocationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/geolocation/geolocation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            GeolocationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GeolocationController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GeolocationController } from './geolocation.controller';\nimport { GeolocationService } from './geolocation.service';\nimport { AuthService } from 'src/auth/auth.service';\n\n@Module({\n  controllers: [GeolocationController],\n  providers: [GeolocationService, AuthService]\n})\nexport class GeolocationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeolocationService.html":{"url":"injectables/GeolocationService.html","title":"injectable - GeolocationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GeolocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/geolocation/geolocation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getGeolocation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getGeolocation\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGeolocation(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/geolocation/geolocation.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class GeolocationService {\n\n    public async getGeolocation(address: string) {\n        const response = await fetch(`https://geocode.maps.co/search?q=${address}&api_key=${process.env.GEOCODING_API_KEY}`);\n        \n        if (!response.ok) {\n            throw new Error(`Error fetching geolocation: ${response.statusText}`);\n        }\n\n        const data = await response.json();\n        return data;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n                    \n                        \n                            Defined in src/health/health.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { HealthCheckService, HttpHealthIndicator, HealthCheck } from '@nestjs/terminus';\n\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.health.check([\n      () => this.http.pingCheck('nestjs-docs', 'https://docs.nestjs.com'),\n    ]);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HttpModule } from '@nestjs/axios';\nimport { HealthController } from './health.controller';\n\n@Module({\n  imports: [TerminusModule, HttpModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpCacheInterceptor.html":{"url":"injectables/HttpCacheInterceptor.html","title":"injectable - HttpCacheInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpCacheInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/http-cache.interceptor.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CacheInterceptor\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                trackBy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        trackBy\n                        \n                    \n                \n            \n            \n                \ntrackBy(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/http-cache.interceptor.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CacheInterceptor } from '@nestjs/cache-manager';\nimport { ExecutionContext, Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class HttpCacheInterceptor extends CacheInterceptor {\n  trackBy(context: ExecutionContext): string | undefined {\n    const request = context.switchToHttp().getRequest();\n    const { httpAdapter } = this.httpAdapterHost;\n\n    const isGetRequest = httpAdapter.getRequestMethod(request) === 'GET';\n    const excludePaths = [\n      // Routes to be excluded\n    ];\n    if (\n      !isGetRequest ||\n      (isGetRequest &&\n        excludePaths.includes(httpAdapter.getRequestUrl(request)))\n    ) {\n      return undefined;\n    }\n    return httpAdapter.getRequestUrl(request);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRepositoryBase.html":{"url":"interfaces/IRepositoryBase.html","title":"interface - IRepositoryBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRepositoryBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/repositoryBase.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        findAll\n                                    \n                                \n                                \n                                    \n                                        findOne\n                                    \n                                \n                                \n                                    \n                                        remove\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interfaces/repositoryBase.interface.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/interfaces/repositoryBase.interface.ts:3\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interfaces/repositoryBase.interface.ts:2\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interfaces/repositoryBase.interface.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interfaces/repositoryBase.interface.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface IRepositoryBase {\n  findOne(id: number): Promise;\n  findAll(): Promise;\n  create(entity: T): Promise;\n  update(id: number, entity: T): Promise;\n  remove(id: number): Promise;\n}\n\n\nexport interface RepositoryInterface {\n  findAll(): Promise;\n  findById(id: string): Promise;\n  create(entity: T): Promise;\n  update(id: string, entity: Partial): Promise;\n  delete(id: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/JwtAuthGuard.html":{"url":"guards/JwtAuthGuard.html","title":"guard - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/jwt-auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractTokenFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/jwt-auth.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt-auth.guard.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractTokenFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractTokenFromHeader(request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt-auth.guard.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\nimport { IS_PUBLIC_KEY } from '../public.decorator';\nimport { Reflector } from '@nestjs/core';\n\n\n@Injectable()\nexport class JwtAuthGuard implements CanActivate {\n    constructor(\n        private reflector: Reflector,\n        private authService: AuthService\n    ) { }\n\n    async canActivate(context: ExecutionContext): Promise {\n        const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n            context.getHandler(),\n            context.getClass(),\n        ]);\n        if (isPublic) {\n            // Skip guard if the endpoint is marked as public\n            return true;\n        }\n        \n        const request = context.switchToHttp().getRequest();\n        request.user = {}; // Initialize user object on request\n        const apiKey = request.headers['x-api-key'];\n        if (apiKey) {\n            const isValidApiKey = await this.authService.validateApiKey(apiKey);\n            if (!isValidApiKey) {\n                throw new UnauthorizedException('Invalid API key');\n            }\n            request.user.id = isValidApiKey;\n            return true; // Allow access if API key is valid\n        }\n\n        // If no API key, check for Bearer token\n        const token = this.extractTokenFromHeader(request);\n        if (!token) {\n            throw new UnauthorizedException('Token not found');\n        }\n\n        try {\n            const user = await this.authService.validateUser(token);\n            request.user = user;  // Attach user to the request\n            return true;\n        } catch (error) {\n            throw new UnauthorizedException(error);\n        }\n    }\n\n    private extractTokenFromHeader(request): string | null {\n        const authHeader = request.headers.authorization;\n        if (!authHeader || !authHeader.startsWith('Bearer ')) {\n            return null;\n        }\n        return authHeader.split(' ')[1];\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Location.html":{"url":"classes/Location.html","title":"class - Location","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Location\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/entities/location.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Location {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LocationController.html":{"url":"controllers/LocationController.html","title":"controller - LocationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LocationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/location.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                location\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 201, description: 'Content Created'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 402, description: 'Payment Required'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiOperation({summary: 'Create a new item'})@Post()\n                \n            \n\n                    \n                        \n                            Inherited from         BaseController\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseController:30\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: 200, description: 'OK'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 402, description: 'Payment Required'})@ApiResponse({status: 403, description: 'Forbidden'})@ApiOperation({summary: 'Get all items'})@Get()\n                \n            \n\n                    \n                        \n                            Inherited from         BaseController\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseController:19\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { LocationService } from './location.service';\nimport { CreateLocationDto } from './dto/create-location.dto';\nimport { ApiTags } from '@nestjs/swagger';\nimport { BaseController } from 'src/bases/base.controller';\nimport { Database } from 'database.types';\n\ntype LocationsRow = Database['public']['Tables']['cw_locations']['Row'];\n\n@ApiTags('Locations')\n@Controller('location')\nexport class LocationController extends BaseController  {\n  constructor(private readonly locationService: LocationService) {\n    super(locationService);\n  }\n\n  // @Post()\n  // create(@Body() createLocationDto: CreateLocationDto) {\n  //   return this.locationService.create(createLocationDto);\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocationModule.html":{"url":"modules/LocationModule.html","title":"module - LocationModule","body":"\n                   \n\n\n\n\n    Modules\n    LocationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_LocationModule_imports\n\n\n\n\nSupabaseModule\n\nSupabaseModule\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nSupabaseModule->LocationModule\n\n\n\n\n\nLocationRepository\n\nLocationRepository\n\nLocationModule -->\n\nLocationRepository->LocationModule\n\n\n\n\n\nLocationService\n\nLocationService\n\nLocationModule -->\n\nLocationService->LocationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/location/location.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LocationRepository\n                        \n                        \n                            LocationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LocationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SupabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LocationController } from './location.controller';\nimport { LocationService } from './location.service';\nimport { LocationRepository } from 'src/repositories/cw_location.repository';\nimport { SupabaseModule } from 'src/supabase/supabase.module';\n\n@Module({\n  imports: [SupabaseModule],\n  controllers: [LocationController],\n  providers: [\n    LocationService,\n    LocationRepository,\n  ],\n})\nexport class LocationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocationRepository.html":{"url":"injectables/LocationRepository.html","title":"injectable - LocationRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocationRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repositories/cw_location.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(supabaseService: SupabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/repositories/cw_location.repository.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        supabaseService\n                                                  \n                                                        \n                                                                        SupabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(item: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:34\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:61\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:10\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:21\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number | string, item: Partial, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:47\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SupabaseService } from '../supabase/supabase.service';\nimport { Database } from 'database.types';\nimport { BaseRepository } from './base.repository';\n\ntype LocationRow = Database['public']['Tables']['cw_locations']['Row'];\n\n@Injectable()\nexport class LocationRepository extends BaseRepository {\n  constructor(supabaseService: SupabaseService) {\n    super(supabaseService, 'cw_locations');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocationService.html":{"url":"injectables/LocationService.html","title":"injectable - LocationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/location.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(locationRepository: LocationRepository)\n                    \n                \n                        \n                            \n                                Defined in src/location/location.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        locationRepository\n                                                  \n                                                        \n                                                                        LocationRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createLocationDto: CreateLocationDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/location/location.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createLocationDto\n                                            \n                                                            CreateLocationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/location/location.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/location/location.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/location/location.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateLocationDto: UpdateLocationDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/location/location.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateLocationDto\n                                            \n                                                            UpdateLocationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateLocationDto } from './dto/create-location.dto';\nimport { UpdateLocationDto } from './dto/update-location.dto';\nimport { LocationRepository } from 'src/repositories/cw_location.repository';\n\n@Injectable()\nexport class LocationService {\n  constructor(private readonly locationRepository: LocationRepository) {}\n\n  create(createLocationDto: CreateLocationDto) {\n    return this.locationRepository.create(createLocationDto);\n  }\n\n  findAll() {\n    return this.locationRepository.findAll();\n  }\n\n  findOne(id: number) {\n    return this.locationRepository.findById(id);\n  }\n\n  update(id: number, updateLocationDto: UpdateLocationDto) {\n    return `This action updates a #${id} location`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} location`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/DTOs/userAuth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User email address'})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/DTOs/userAuth.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User password'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/DTOs/userAuth.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsEmail } from 'class-validator';\n\nexport class UserAuthDto {\n  @ApiProperty({ description: 'JWT authentication token' })\n  @IsString()\n  token: string;\n}\n\nexport class LoginDto {\n  @ApiProperty({ description: 'User email address' })\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({ description: 'User password' })\n  @IsString()\n  password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PdfController.html":{"url":"controllers/PdfController.html","title":"controller - PdfController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PdfController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pdf/pdf.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                pdf\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        getFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFile(res: Response, req, devEui: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiSecurity('x-api-key', ['x-api-key'])@ApiBearerAuth('JWT')@UseGuards(SupabaseAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/pdf/pdf.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                devEui\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        // pdf.controller.ts\nimport { Controller, Get, Res, UseGuards, Req, Body, Query } from '@nestjs/common';\nimport { ApiBearerAuth, ApiSecurity, ApiTags } from '@nestjs/swagger';\nimport { Response } from 'express';\nimport { PdfService } from './pdf.service';\nimport { SupabaseAuthGuard } from 'src/auth/guards/supabase.guard';\n\n@ApiTags('📄 PDF - Serve a PDF file')\n@Controller('pdf')\nexport class PdfController {\n    constructor(private readonly pdfService: PdfService) {}\n\n    @Get()\n    @ApiSecurity('x-api-key', ['x-api-key'])\n    @ApiBearerAuth('JWT')\n    @UseGuards(SupabaseAuthGuard)\n    async getFile(\n        @Res() res: Response,\n        @Req() req,\n        @Query('devEui') devEui: string\n    ): Promise {\n        \n        const user_id = req.user.id;\n        \n        const pdfBuffer = await this.pdfService.createPdfBinary(user_id, devEui);\n        \n        res.set({\n            'Content-Type': 'application/pdf',\n            'Content-Disposition': 'attachment; filename=\"report.pdf\"',\n            'Content-Length': pdfBuffer.length,\n        });\n\n        res.send(pdfBuffer);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PdfDTO.html":{"url":"classes/PdfDTO.html","title":"class - PdfDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PdfDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pdf/dto/pdf.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                devEui\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        devEui\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Dev Eui of the device to generate a report for.'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pdf/dto/pdf.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class PdfDTO {\n  @ApiProperty({ description: 'Dev Eui of the device to generate a report for.' })\n  @IsString()\n  devEui: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PdfModule.html":{"url":"modules/PdfModule.html","title":"module - PdfModule","body":"\n                   \n\n\n\n\n    Modules\n    PdfModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PdfModule\n\n\n\ncluster_PdfModule_providers\n\n\n\ncluster_PdfModule_imports\n\n\n\n\nCwDeviceOwnersModule\n\nCwDeviceOwnersModule\n\n\n\nPdfModule\n\nPdfModule\n\nPdfModule -->\n\nCwDeviceOwnersModule->PdfModule\n\n\n\n\n\nCwDeviceTypeModule\n\nCwDeviceTypeModule\n\nPdfModule -->\n\nCwDeviceTypeModule->PdfModule\n\n\n\n\n\nCwDevicesModule\n\nCwDevicesModule\n\nPdfModule -->\n\nCwDevicesModule->PdfModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nPdfModule -->\n\nDataModule->PdfModule\n\n\n\n\n\nReportsTemplatesModule\n\nReportsTemplatesModule\n\nPdfModule -->\n\nReportsTemplatesModule->PdfModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nPdfModule -->\n\nAuthService->PdfModule\n\n\n\n\n\nDataService\n\nDataService\n\nPdfModule -->\n\nDataService->PdfModule\n\n\n\nPdfModule -->\n\nDataService->PdfModule\n\n\n\n\n\nPdfService\n\nPdfService\n\nPdfModule -->\n\nPdfService->PdfModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/pdf/pdf.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            DataService\n                        \n                        \n                            DataService\n                        \n                        \n                            PdfService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PdfController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CwDeviceOwnersModule\n                        \n                        \n                            CwDeviceTypeModule\n                        \n                        \n                            CwDevicesModule\n                        \n                        \n                            DataModule\n                        \n                        \n                            ReportsTemplatesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PdfController } from './pdf.controller';\nimport { PdfService } from './pdf.service';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport { DataService } from 'src/data/data.service';\nimport { CwDevicesService } from 'src/cw_devices/cw_devices.service';\nimport { DataModule } from 'src/data/data.module';\nimport { CwDevicesModule } from 'src/cw_devices/cw_devices.module';\nimport { CwDeviceTypeModule } from 'src/cw_device_type/cw_device_type.module';\nimport { CwDeviceOwnersModule } from 'src/cw_device_owners/cw_device_owners.module';\nimport { AuthService } from 'src/auth/auth.service';\nimport { ReportsTemplatesService } from 'src/reports_templates/reports_templates.service';\nimport { ReportsTemplatesModule } from 'src/reports_templates/reports_templates.module';\n\n@Module({\n  imports: [\n    DataModule,\n    CwDevicesModule,\n    CwDeviceTypeModule,\n    CwDeviceOwnersModule,\n    ReportsTemplatesModule,\n    // ServeStaticModule.forRoot({\n    //   rootPath: join(__dirname, './', 'fonts'),\n    // }),\n  ],\n  controllers: [PdfController],\n  providers: [\n    PdfService,\n    DataService,\n    DataService,\n    AuthService,\n  ]\n})\nexport class PdfModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PdfService.html":{"url":"injectables/PdfService.html","title":"injectable - PdfService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PdfService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pdf/pdf.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                fonts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createPdfBinary\n                            \n                            \n                                    Private\n                                    Async\n                                fetchDataAndReportFromDB\n                            \n                            \n                                    Private\n                                insertDataIntoReport\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, reportsTemplatesService: ReportsTemplatesService)\n                    \n                \n                        \n                            \n                                Defined in src/pdf/pdf.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reportsTemplatesService\n                                                  \n                                                        \n                                                                        ReportsTemplatesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createPdfBinary\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPdfBinary(user_id: string, devEui: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/pdf/pdf.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                devEui\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        fetchDataAndReportFromDB\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchDataAndReportFromDB(devEui: string, user_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/pdf/pdf.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                devEui\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        insertDataIntoReport\n                        \n                    \n                \n            \n            \n                \n                        \n                    insertDataIntoReport(reportJson: string, data: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/pdf/pdf.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reportJson\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fonts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TFontDictionary\n\n                    \n                \n                \n                    \n                        Default value : {\n        Roboto: {\n            normal: join(process.cwd(), 'dist', '', 'src/assets/fonts/Roboto/Roboto-Regular.ttf'),\n            bold: join(process.cwd(), 'dist', '', 'src/assets/fonts/Roboto/Roboto-Medium.ttf'),\n            italics: join(process.cwd(), 'dist', '', 'src/assets/fonts/Roboto/Roboto-Italic.ttf'),\n            bolditalics: join(process.cwd(), 'dist', '', 'src/assets/fonts/Roboto/Roboto-MediumItalic.ttf'),\n        },\n        Noto_Sans_JP: {\n            normal: join(process.cwd(), 'dist', '', 'src/assets/fonts/Noto_Sans_JP/static/NotoSansJP-Regular.ttf'),\n            bold: join(process.cwd(), 'dist', '', 'src/assets/fonts/Noto_Sans_JP/static/NotoSansJP-Medium.ttf'),\n            italics: join(process.cwd(), 'dist', '', 'src/assets/fonts/Noto_Sans_JP/static/NotoSansJP-Light.ttf'),\n            bolditalics: join(process.cwd(), 'dist', '', 'src/assets/fonts/Noto_Sans_JP/static/NotoSansJP-Light.ttf'),\n        },\n    }\n                    \n                \n                    \n                        \n                                Defined in src/pdf/pdf.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { join } from 'path';\nimport PdfPrinter from 'pdfmake';\nimport { TDocumentDefinitions, TFontDictionary } from 'pdfmake/build/pdfmake';\nimport { DataService } from 'src/data/data.service';\nimport { ReportsTemplatesService } from 'src/reports_templates/reports_templates.service';\n\n\n@Injectable()\nexport class PdfService {\n    constructor(\n        private readonly dataService: DataService,\n        private readonly reportsTemplatesService: ReportsTemplatesService\n    ) { }\n\n    private fonts: TFontDictionary = {\n        Roboto: {\n            normal: join(process.cwd(), 'dist', '', 'src/assets/fonts/Roboto/Roboto-Regular.ttf'),\n            bold: join(process.cwd(), 'dist', '', 'src/assets/fonts/Roboto/Roboto-Medium.ttf'),\n            italics: join(process.cwd(), 'dist', '', 'src/assets/fonts/Roboto/Roboto-Italic.ttf'),\n            bolditalics: join(process.cwd(), 'dist', '', 'src/assets/fonts/Roboto/Roboto-MediumItalic.ttf'),\n        },\n        Noto_Sans_JP: {\n            normal: join(process.cwd(), 'dist', '', 'src/assets/fonts/Noto_Sans_JP/static/NotoSansJP-Regular.ttf'),\n            bold: join(process.cwd(), 'dist', '', 'src/assets/fonts/Noto_Sans_JP/static/NotoSansJP-Medium.ttf'),\n            italics: join(process.cwd(), 'dist', '', 'src/assets/fonts/Noto_Sans_JP/static/NotoSansJP-Light.ttf'),\n            bolditalics: join(process.cwd(), 'dist', '', 'src/assets/fonts/Noto_Sans_JP/static/NotoSansJP-Light.ttf'),\n        },\n    };\n\n    public async createPdfBinary(user_id: string, devEui: string): Promise {\n        if (!user_id) {\n            throw new Error('User ID is required');\n        }\n        if (!devEui) {\n            throw new Error('DevEui is required');\n        }\n\n        const { reportString, reportData } = await this.fetchDataAndReportFromDB(devEui, user_id);\n        const reportJson = this.insertDataIntoReport(reportString, reportData);\n\n        const printer: PdfPrinter = new PdfPrinter(this.fonts);\n        const docDefinition: TDocumentDefinitions = reportJson; // `report` is already an object\n\n        return new Promise((resolve, reject) => {\n            const pdfDoc = printer.createPdfKitDocument(docDefinition);\n            const chunks: Buffer[] = [];\n\n            pdfDoc.on('data', (chunk) => chunks.push(chunk));\n            pdfDoc.on('end', () => resolve(Buffer.concat(chunks)));\n            pdfDoc.on('error', reject);\n\n            pdfDoc.end();\n        });\n    }\n\n    private async fetchDataAndReportFromDB(devEui: string, user_id: string) {\n        // Fetch data from correct type (no clue how to map it later though....)\n        const reportData: any[] = await this.dataService.findAll({\n            devEui,\n            skip: 0,\n            take: 10,\n            order: 'ASC',\n        }, user_id);\n\n\n        let reportJsonResponse = await this.reportsTemplatesService.getReportTemplateByDevEui(devEui);\n        let reportString = JSON.stringify(reportJsonResponse.template);\n        return { reportString, reportData };\n    }\n\n    private insertDataIntoReport(reportJson: string, data: any[]) {\n\n        // Prepare data rows for the table\n        const dataRows = data.map(item => [\n            item.id,\n            item.created_at,\n            item.dewPointC,\n            item.humidity,\n            item.temperatureC,\n            item.vpd,\n            item.dev_eui,\n            item.profile_id\n        ]);\n\n        // Parse JSON and directly insert `dataRows` as an array\n        reportJson = reportJson.replace(/{{dev_eui}}/g, data[0]?.dev_eui || '');\n        const report = JSON.parse(reportJson); // Parse to an object only once\n        report.content[2].table.body = [\n            report.content[2].table.body[0], // Header row\n            ...dataRows                      // Data rows\n        ];\n\n        return report;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Profile.html":{"url":"classes/Profile.html","title":"class - Profile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Profile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profiles/entities/profile.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Profile {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileRepository.html":{"url":"injectables/ProfileRepository.html","title":"injectable - ProfileRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProfileRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repositories/profiles.repositories.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(supabaseService: SupabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/repositories/profiles.repositories.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        supabaseService\n                                                  \n                                                        \n                                                                        SupabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('JWT')\n                \n            \n\n                    \n                        \n                            Defined in src/repositories/profiles.repositories.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Req } from '@nestjs/common';\nimport { SupabaseService } from '../supabase/supabase.service';\nimport { Database } from 'database.types';\nimport { ApiBearerAuth } from '@nestjs/swagger';\n\ntype ProfileRow = Database['public']['Tables']['profiles']['Row'];\n\n@Injectable()\nexport class ProfileRepository {\n  constructor(private readonly supabaseService: SupabaseService) {}\n\n  @ApiBearerAuth('JWT')\n  async findById(id: string): Promise {\n    const {data: user, error: userError } = await this.supabaseService.getSupabaseClient().auth.getUser(id);\n    if (userError) {\n      throw userError;\n    }\n    const { data, error } = await this.supabaseService\n      .getSupabaseClient()\n      .from('profiles')\n      .select('*')\n      .eq('id', user.user.id)\n      .single();\n    if (error) {\n      throw error;\n    }\n    return data || null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfilesController.html":{"url":"controllers/ProfilesController.html","title":"controller - ProfilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profiles/profiles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                profiles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiBearerAuth('JWT')\n                \n            \n\n                    \n                        \n                            Defined in src/profiles/profiles.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Req } from '@nestjs/common';\nimport { ProfilesService } from './profiles.service';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Profiles')\n@Controller('profiles')\nexport class ProfilesController {\n  constructor(private readonly profilesService: ProfilesService) {}\n  \n  @Get()\n  @ApiBearerAuth('JWT')\n  findOne(@Req() req) {\n    const id = req.headers['authorization'];\n    return this.profilesService.findOne(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfilesModule.html":{"url":"modules/ProfilesModule.html","title":"module - ProfilesModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfilesModule\n\n\n\ncluster_ProfilesModule_providers\n\n\n\ncluster_ProfilesModule_imports\n\n\n\n\nSupabaseModule\n\nSupabaseModule\n\n\n\nProfilesModule\n\nProfilesModule\n\nProfilesModule -->\n\nSupabaseModule->ProfilesModule\n\n\n\n\n\nProfileRepository\n\nProfileRepository\n\nProfilesModule -->\n\nProfileRepository->ProfilesModule\n\n\n\n\n\nProfilesService\n\nProfilesService\n\nProfilesModule -->\n\nProfilesService->ProfilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/profiles/profiles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProfileRepository\n                        \n                        \n                            ProfilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfilesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SupabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProfilesService } from './profiles.service';\nimport { ProfilesController } from './profiles.controller';\nimport { SupabaseService } from 'src/supabase/supabase.service';\nimport { ProfileRepository } from 'src/repositories/profiles.repositories';\nimport { SupabaseModule } from 'src/supabase/supabase.module';\n\n@Module({\n  imports: [SupabaseModule],\n  controllers: [ProfilesController],\n  providers: [ProfilesService, ProfileRepository],\n})\nexport class ProfilesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfilesService.html":{"url":"injectables/ProfilesService.html","title":"injectable - ProfilesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProfilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profiles/profiles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profilesRepository: ProfileRepository)\n                    \n                \n                        \n                            \n                                Defined in src/profiles/profiles.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profilesRepository\n                                                  \n                                                        \n                                                                        ProfileRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/profiles/profiles.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Req } from '@nestjs/common';\nimport { CreateProfileDto } from './dto/create-profile.dto';\nimport { ProfileRepository } from 'src/repositories/profiles.repositories';\n\n@Injectable()\nexport class ProfilesService {\n  constructor(private readonly profilesRepository: ProfileRepository) {}\n  findOne(id: string) {\n    id = id.replace('Bearer ', '');\n    return this.profilesRepository.findById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RelayController.html":{"url":"controllers/RelayController.html","title":"controller - RelayController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RelayController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/relay/relay.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                relay\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getProtectedRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getProtectedRoute\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProtectedRoute(state: RelayState, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('control')@ApiQuery({name: 'state', enum: RelayState, description: 'Set the relay state to Open or Close'})@ApiResponse({status: 202, description: 'Action Queued'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})@ApiResponse({status: 402, description: 'Payment Required'})@ApiResponse({status: 403, description: 'Forbidden'})\n                \n            \n\n                    \n                        \n                            Defined in src/relay/relay.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            RelayState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req, Query } from '@nestjs/common';\nimport { RelayService } from './relay.service';\nimport { ApiTags, ApiQuery, ApiResponse } from '@nestjs/swagger';\nimport { Public } from 'src/auth/public.decorator';\n\nenum RelayState {\n    Open = 'open (OFF)', // OFF\n    Close = 'close (ON)' // ON\n}\n\n@ApiTags('Relay - Automation')\n@Controller('relay')\nexport class RelayController {\n    constructor(private readonly relayService: RelayService) { }\n\n    @Public()\n    @Get('control')\n    @ApiQuery({\n        name: 'state',\n        enum: RelayState,\n        description: 'Set the relay state to Open or Close'\n    })\n    @ApiResponse({ status: 202, description: 'Action Queued' })\n    @ApiResponse({ status: 400, description: 'Bad Request' })\n    @ApiResponse({ status: 401, description: 'Unauthorized' })\n    @ApiResponse({ status: 402, description: 'Payment Required' })\n    @ApiResponse({ status: 403, description: 'Forbidden' })\n    async getProtectedRoute(@Query('state') state: RelayState, @Req() req) {\n        const relayOn = state === RelayState.Open;\n        const response = await this.relayService.sendDownlink(relayOn);\n        return { message: 'Relay state updated', response };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RelayModule.html":{"url":"modules/RelayModule.html","title":"module - RelayModule","body":"\n                   \n\n\n\n\n    Modules\n    RelayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RelayModule\n\n\n\ncluster_RelayModule_providers\n\n\n\n\nRelayService\n\nRelayService\n\n\n\nRelayModule\n\nRelayModule\n\nRelayModule -->\n\nRelayService->RelayModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/relay/relay.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RelayService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RelayController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RelayController } from './relay.controller';\nimport { RelayService } from './relay.service';\n\n@Module({\n  controllers: [RelayController],\n  providers: [RelayService]\n})\nexport class RelayModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RelayService.html":{"url":"injectables/RelayService.html","title":"injectable - RelayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RelayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/relay/relay.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hexToBase64\n                            \n                            \n                                    Public\n                                    Async\n                                sendDownlink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/relay/relay.service.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hexToBase64\n                        \n                    \n                \n            \n            \n                \n                        \n                    hexToBase64(hexString)\n                \n            \n\n\n                    \n                        \n                            Defined in src/relay/relay.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                hexString\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendDownlink\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendDownlink(state: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/relay/relay.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class RelayService {\n    constructor() {}\n    \n    public async sendDownlink(state: boolean) {\n        const appId = 'dragino-lt-22222';\n        const deviceId = 'dragino-test';\n        const accessKey = process.env.DRAGINO_API_KEY;\n    \n        const url = `${process.env.TTI_BASE_URL}/api/v3/as/applications/${appId}/devices/${deviceId}/down/replace`;\n        const onCommand = \"030011\";\n        const offCommand = \"030111\";\n        const command = state ? onCommand : offCommand;\n\n        const data = {\n            downlinks: [\n                {\n                    frm_payload: this.hexToBase64(command), // Base64-encoded payload\n                    f_port: 1, // Change as needed\n                    confirmed: true,\n                    priority: 'HIGH',\n                }\n            ]\n        };\n    \n        try {\n            const response = await fetch(url, {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${accessKey}`,\n                    'Content-Type': 'application/json',\n                    'User-Agent': 'my-integration/my-integration-version'\n                },\n                body: JSON.stringify(data)\n            });\n    \n            if (!response.ok) {\n                throw new Error(`Error sending downlink: ${response.statusText}`);\n            }\n    \n            const responseData = await response.json();\n            console.log('Downlink sent successfully:', responseData);\n            return responseData;\n        } catch (error) {\n            console.error('Error sending downlink:', error.message);\n        }\n    }\n\n    private hexToBase64(hexString) {\n        const bytes = new Uint8Array(hexString.match(/.{1,2}/g).map(byte => parseInt(byte, 16)));\n        return btoa(String.fromCharCode(...bytes));\n    }\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReportTemplatesRepository.html":{"url":"injectables/ReportTemplatesRepository.html","title":"injectable - ReportTemplatesRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReportTemplatesRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/repositories/reports_templates.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findByDevEui\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(supabaseService: SupabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/repositories/reports_templates.repository.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        supabaseService\n                                                  \n                                                        \n                                                                        SupabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findByDevEui\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByDevEui(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/repositories/reports_templates.repository.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(item: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:34\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:61\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:10\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number | string, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:21\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number | string, item: Partial, idColumn: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepository:47\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                item\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                idColumn\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'id'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SupabaseService } from '../supabase/supabase.service';\nimport { Database } from 'database.types';\nimport { BaseRepository } from './base.repository';\n\ntype DeviceRow = Database['public']['Tables']['reports_templates']['Row'];\n\n@Injectable()\nexport class ReportTemplatesRepository extends BaseRepository {\n    constructor(supabaseService: SupabaseService) {\n        super(supabaseService, 'reports_templates');\n    }\n\n    public async findByDevEui({ dev_eui }: { dev_eui: string }): Promise {\n        const { data, error } = await this.supabaseService\n            .getSupabaseClient()\n            .from('reports_templates')\n            .select('*')\n            .eq('dev_eui', dev_eui)\n            .single();\n        if (error) {\n            throw new Error(`Failed to find device with dev_eui ${dev_eui}: ${error.message}`);\n        }\n        if (!data) {\n            throw new Error(`Device with dev_eui ${dev_eui} not found.`);\n        }\n        return data as DeviceRow;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ReportsTemplatesController.html":{"url":"controllers/ReportsTemplatesController.html","title":"controller - ReportsTemplatesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ReportsTemplatesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reports_templates/reports_templates.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                reports-templates\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                GetReportTemplates\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        GetReportTemplates\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetReportTemplates()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/reports_templates/reports_templates.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ReportsTemplatesService } from './reports_templates.service';\n\n@Controller('reports-templates')\nexport class ReportsTemplatesController {\n    constructor(private readonly reportTemplatesService: ReportsTemplatesService) {\n\n    }\n\n    @Get()\n    GetReportTemplates() {\n        return this.reportTemplatesService.findAll();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReportsTemplatesModule.html":{"url":"modules/ReportsTemplatesModule.html","title":"module - ReportsTemplatesModule","body":"\n                   \n\n\n\n\n    Modules\n    ReportsTemplatesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReportsTemplatesModule\n\n\n\ncluster_ReportsTemplatesModule_exports\n\n\n\ncluster_ReportsTemplatesModule_providers\n\n\n\ncluster_ReportsTemplatesModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nReportsTemplatesModule\n\nReportsTemplatesModule\n\nReportsTemplatesModule -->\n\nAuthModule->ReportsTemplatesModule\n\n\n\n\n\nSupabaseModule\n\nSupabaseModule\n\nReportsTemplatesModule -->\n\nSupabaseModule->ReportsTemplatesModule\n\n\n\n\n\nReportsTemplatesService \n\nReportsTemplatesService \n\nReportsTemplatesService  -->\n\nReportsTemplatesModule->ReportsTemplatesService \n\n\n\n\n\nReportTemplatesRepository\n\nReportTemplatesRepository\n\nReportsTemplatesModule -->\n\nReportTemplatesRepository->ReportsTemplatesModule\n\n\n\n\n\nReportsTemplatesService\n\nReportsTemplatesService\n\nReportsTemplatesModule -->\n\nReportsTemplatesService->ReportsTemplatesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/reports_templates/reports_templates.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ReportTemplatesRepository\n                        \n                        \n                            ReportsTemplatesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ReportsTemplatesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            SupabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ReportsTemplatesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ReportsTemplatesController } from './reports_templates.controller';\nimport { ReportsTemplatesService } from './reports_templates.service';\nimport { ReportTemplatesRepository } from 'src/repositories/reports_templates.repository';\nimport { SupabaseModule } from 'src/supabase/supabase.module';\nimport { AuthModule } from 'src/auth/auth.module';\n\n@Module({\n  imports: [SupabaseModule, AuthModule],\n  controllers: [ReportsTemplatesController],\n  providers: [ReportsTemplatesService, ReportTemplatesRepository],\n  exports: [ReportsTemplatesService],\n})\nexport class ReportsTemplatesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReportsTemplatesService.html":{"url":"injectables/ReportsTemplatesService.html","title":"injectable - ReportsTemplatesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReportsTemplatesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reports_templates/reports_templates.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getReportTemplateByDevEui\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reportTemplatesRepository: ReportTemplatesRepository)\n                    \n                \n                        \n                            \n                                Defined in src/reports_templates/reports_templates.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reportTemplatesRepository\n                                                  \n                                                        \n                                                                        ReportTemplatesRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getReportTemplateByDevEui\n                        \n                    \n                \n            \n            \n                \ngetReportTemplateByDevEui(devEui: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/reports_templates/reports_templates.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                devEui\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:20\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                        CreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:28\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:12\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:16\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, dto: UpdateDto)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:24\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                        UpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Database } from 'database.types';\nimport { BaseService } from 'src/bases/base.service';\nimport { UpdateReportDto } from './dto/update-report_template.dto';\nimport { ReportTemplatesRepository } from 'src/repositories/reports_templates.repository';\nimport { CreateReportTemplateDto } from './dto/create-report_template.dto';\n\ntype ReportsTemplatesRow = Database['public']['Tables']['reports_templates']['Row'];\n\n@Injectable()\nexport class ReportsTemplatesService extends BaseService {\n    constructor(private readonly reportTemplatesRepository: ReportTemplatesRepository) {\n        super(reportTemplatesRepository);\n    }\n\n    getReportTemplateByDevEui(devEui: string): Promise {\n        return this.reportTemplatesRepository.findByDevEui({ dev_eui: devEui });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RepositoryInterface.html":{"url":"interfaces/RepositoryInterface.html","title":"interface - RepositoryInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RepositoryInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/repositoryBase.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        findAll\n                                    \n                                \n                                \n                                    \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interfaces/repositoryBase.interface.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interfaces/repositoryBase.interface.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/interfaces/repositoryBase.interface.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interfaces/repositoryBase.interface.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/interfaces/repositoryBase.interface.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface IRepositoryBase {\n  findOne(id: number): Promise;\n  findAll(): Promise;\n  create(entity: T): Promise;\n  update(id: number, entity: T): Promise;\n  remove(id: number): Promise;\n}\n\n\nexport interface RepositoryInterface {\n  findAll(): Promise;\n  findById(id: string): Promise;\n  create(entity: T): Promise;\n  update(id: string, entity: Partial): Promise;\n  delete(id: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/SupabaseAuthGuard.html":{"url":"guards/SupabaseAuthGuard.html","title":"guard - SupabaseAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    SupabaseAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/supabase.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/supabase.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/supabase.guard.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { AuthService } from \"../auth.service\";\n\n// AuthGuard implementation using the AuthService\n// AuthGuard implementation using the AuthService\n@Injectable()\nexport class SupabaseAuthGuard implements CanActivate {\n  constructor(private authService: AuthService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const apiKey = request.headers['x-api-key'];\n    const authHeader = request.headers['authorization'];\n\n    // Check if API key is provided\n    if (apiKey) {\n      const isValidApiKey = await this.authService.validateApiKey(apiKey);\n      if (!isValidApiKey) {\n        throw new UnauthorizedException('Invalid API key');\n      }\n      return true;\n    }\n\n    // If no API key, check for Bearer token\n    if (!authHeader) {\n      throw new UnauthorizedException('Authorization header not found');\n    }\n\n    const token = authHeader.split(' ')[1];\n    if (!token) {\n      throw new UnauthorizedException('Invalid authorization token format');\n    }\n\n    const user = await this.authService.validateUser(token);\n    if (!user) {\n      throw new UnauthorizedException('User not found');\n    }\n\n    // Attach user to request object for use in subsequent controllers\n    request.user = user;\n    return true;\n  }\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SupabaseModule.html":{"url":"modules/SupabaseModule.html","title":"module - SupabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    SupabaseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SupabaseModule\n\n\n\ncluster_SupabaseModule_providers\n\n\n\ncluster_SupabaseModule_exports\n\n\n\n\nSupabaseService \n\nSupabaseService \n\n\n\nSupabaseModule\n\nSupabaseModule\n\nSupabaseService  -->\n\nSupabaseModule->SupabaseService \n\n\n\n\n\nSupabaseService\n\nSupabaseService\n\nSupabaseModule -->\n\nSupabaseService->SupabaseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/supabase/supabase.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SupabaseService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SupabaseService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // src/supabase/supabase.module.ts\nimport { Module } from '@nestjs/common';\nimport { SupabaseService } from './supabase.service';\n\n@Module({\n  providers: [SupabaseService],\n  exports: [SupabaseService], // Export so it can be used in other modules\n})\nexport class SupabaseModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SupabaseService.html":{"url":"injectables/SupabaseService.html","title":"injectable - SupabaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SupabaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/supabase/supabase.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                supabase\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSupabaseClient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/supabase/supabase.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSupabaseClient\n                        \n                    \n                \n            \n            \n                \ngetSupabaseClient()\n                \n            \n\n\n                    \n                        \n                            Defined in src/supabase/supabase.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     SupabaseClient\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        supabase\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SupabaseClient\n\n                    \n                \n                    \n                        \n                                Defined in src/supabase/supabase.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { createClient, SupabaseClient } from '@supabase/supabase-js';\nimport { Database } from 'database.types';\n\n@Injectable()\nexport class SupabaseService {\n    private supabase: SupabaseClient;\n\n    constructor(private configService: ConfigService) {\n        const supabaseUrl = this.configService.get('SUPABASE_URL');\n        const supabaseKey = this.configService.get('SUPABASE_KEY');\n\n        // Initialize Supabase client with version 2 package\n        this.supabase = createClient(supabaseUrl, supabaseKey);\n    }\n\n    getSupabaseClient(): SupabaseClient {\n        return this.supabase;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDatumDto.html":{"url":"classes/UpdateDatumDto.html","title":"class - UpdateDatumDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDatumDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/data/dto/update-datum.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateDatumDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateDatumDto } from './create-datum.dto';\n\nexport class UpdateDatumDto extends PartialType(CreateDatumDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDeviceDto.html":{"url":"classes/UpdateDeviceDto.html","title":"class - UpdateDeviceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDeviceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_devices/dto/update-device.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateDeviceDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateDeviceDto } from './create-device.dto';\n\nexport class UpdateDeviceDto extends PartialType(CreateDeviceDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDeviceOwnerDto.html":{"url":"classes/UpdateDeviceOwnerDto.html","title":"class - UpdateDeviceOwnerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDeviceOwnerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_device_owners/dto/update-device-owner.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateDeviceOwnerDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateDeviceOwnerDto } from './create-device-owner.dto';\n\nexport class UpdateDeviceOwnerDto extends PartialType(CreateDeviceOwnerDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDeviceTypeDto.html":{"url":"classes/UpdateDeviceTypeDto.html","title":"class - UpdateDeviceTypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDeviceTypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cw_device_type/dto/update-device-type.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateDeviceTypeDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateDeviceTypeDto } from './create-device-type.dto';\n\nexport class UpdateDeviceTypeDto extends PartialType(CreateDeviceTypeDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateLocationDto.html":{"url":"classes/UpdateLocationDto.html","title":"class - UpdateLocationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateLocationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/dto/update-location.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateLocationDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateLocationDto } from './create-location.dto';\n\nexport class UpdateLocationDto extends PartialType(CreateLocationDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileDto.html":{"url":"classes/UpdateProfileDto.html","title":"class - UpdateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profiles/dto/update-profile.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateProfileDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateProfileDto } from './create-profile.dto';\n\nexport class UpdateProfileDto extends PartialType(CreateProfileDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateReportDto.html":{"url":"classes/UpdateReportDto.html","title":"class - UpdateReportDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateReportDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reports_templates/dto/update-report_template.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateReportTemplateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateReportTemplateDto } from './create-report_template.dto';\n\nexport class UpdateReportDto extends PartialType(CreateReportTemplateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserAuthDto.html":{"url":"classes/UserAuthDto.html","title":"class - UserAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/DTOs/userAuth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'JWT authentication token'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/DTOs/userAuth.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsEmail } from 'class-validator';\n\nexport class UserAuthDto {\n  @ApiProperty({ description: 'JWT authentication token' })\n  @IsString()\n  token: string;\n}\n\nexport class LoginDto {\n  @ApiProperty({ description: 'User email address' })\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({ description: 'User password' })\n  @IsString()\n  password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        database.types.ts\n            \n            type alias\n            CompositeTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        database.types.ts\n            \n            type alias\n            Database\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        database.types.ts\n            \n            type alias\n            Enums\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        database.types.ts\n            \n            type alias\n            Json\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        database.types.ts\n            \n            type alias\n            PublicSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        database.types.ts\n            \n            type alias\n            Tables\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        database.types.ts\n            \n            type alias\n            TablesInsert\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        database.types.ts\n            \n            type alias\n            TablesUpdate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/DTOs/userAuth.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/DTOs/userAuth.dto.ts\n            \n            class\n            UserAuthDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            guard\n            JwtAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/guards/supabase.guard.ts\n            \n            guard\n            SupabaseAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/auth/public.decorator.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/public.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/bases/base.controller.ts\n            \n            class\n            BaseController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/bases/base.controller.ts\n            \n            interface\n            BaseServiceInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/bases/base.service.ts\n            \n            class\n            BaseService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/bases/base.service.ts\n            \n            interface\n            BaseServiceInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/http-cache.interceptor.ts\n            \n            injectable\n            HttpCacheInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cw_device_owners/cw_device_owners.controller.ts\n            \n            controller\n            CwDeviceOwnersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cw_device_owners/cw_device_owners.service.ts\n            \n            injectable\n            CwDeviceOwnersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/cw_device_owners/cw_device_owners.service.ts\n            \n            type alias\n            DeviceOwnerRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cw_device_owners/dto/create-device-owner.dto.ts\n            \n            class\n            CreateDeviceOwnerDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/cw_device_owners/dto/update-device-owner.dto.ts\n            \n            class\n            UpdateDeviceOwnerDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cw_device_type/cw_device_type.controller.ts\n            \n            controller\n            CwDeviceTypeController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/cw_device_type/cw_device_type.controller.ts\n            \n            type alias\n            DeviceTypeRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cw_device_type/cw_device_type.service.ts\n            \n            injectable\n            CwDeviceTypeService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/cw_device_type/cw_device_type.service.ts\n            \n            type alias\n            DeviceTypeRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cw_device_type/dto/create-device-type.dto.ts\n            \n            class\n            CreateDeviceTypeDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cw_device_type/dto/update-device-type.dto.ts\n            \n            class\n            UpdateDeviceTypeDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cw_devices/cw_devices.controller.ts\n            \n            controller\n            CwDevicesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/cw_devices/cw_devices.controller.ts\n            \n            type alias\n            DevicesRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cw_devices/cw_devices.service.ts\n            \n            injectable\n            CwDevicesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/cw_devices/cw_devices.service.ts\n            \n            type alias\n            DevicesRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cw_devices/dto/create-device.dto.ts\n            \n            class\n            CreateDeviceDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cw_devices/dto/update-device.dto.ts\n            \n            class\n            UpdateDeviceDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/data/data.controller.ts\n            \n            controller\n            DataController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/data/data.service.ts\n            \n            injectable\n            DataService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/data/data.service.ts\n            \n            interface\n            FindAllParams\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/data/dto/create-datum.dto.ts\n            \n            class\n            CreateDatumDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/data/dto/update-datum.dto.ts\n            \n            class\n            UpdateDatumDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/data/entities/datum.entity.ts\n            \n            class\n            Datum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/geolocation/geolocation.controller.ts\n            \n            controller\n            GeolocationController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/geolocation/geolocation.service.ts\n            \n            injectable\n            GeolocationService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interfaces/repositoryBase.interface.ts\n            \n            interface\n            IRepositoryBase\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/interfaces/repositoryBase.interface.ts\n            \n            interface\n            RepositoryInterface\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/location/dto/create-location.dto.ts\n            \n            class\n            CreateLocationDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/location/dto/update-location.dto.ts\n            \n            class\n            UpdateLocationDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/location/entities/location.entity.ts\n            \n            class\n            Location\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/location/location.controller.ts\n            \n            controller\n            LocationController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/location/location.controller.ts\n            \n            type alias\n            LocationsRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/location/location.service.ts\n            \n            injectable\n            LocationService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            getSwaggerConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/pdf/dto/pdf.dto.ts\n            \n            class\n            PdfDTO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/pdf/pdf.controller.ts\n            \n            controller\n            PdfController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/pdf/pdf.service.ts\n            \n            injectable\n            PdfService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/profiles/dto/create-profile.dto.ts\n            \n            class\n            CreateProfileDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/profiles/dto/update-profile.dto.ts\n            \n            class\n            UpdateProfileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profiles/entities/profile.entity.ts\n            \n            class\n            Profile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profiles/profiles.controller.ts\n            \n            controller\n            ProfilesController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/profiles/profiles.service.ts\n            \n            injectable\n            ProfilesService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/relay/relay.controller.ts\n            \n            controller\n            RelayController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/relay/relay.service.ts\n            \n            injectable\n            RelayService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/reports_templates/dto/create-report_template.dto.ts\n            \n            class\n            CreateReportTemplateDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/reports_templates/dto/update-report_template.dto.ts\n            \n            class\n            UpdateReportDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/reports_templates/reports_templates.controller.ts\n            \n            controller\n            ReportsTemplatesController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/reports_templates/reports_templates.service.ts\n            \n            injectable\n            ReportsTemplatesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/reports_templates/reports_templates.service.ts\n            \n            type alias\n            ReportsTemplatesRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repositories/base.repository.ts\n            \n            class\n            BaseRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/repositories/cw_device_locations.repository.ts\n            \n            injectable\n            DeviceLocationRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/repositories/cw_device_locations.repository.ts\n            \n            type alias\n            DeviceLocationRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repositories/cw_device_owners.ts\n            \n            injectable\n            DeviceOwnerRepository\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/repositories/cw_device_owners.ts\n            \n            type alias\n            DeviceOwnerRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repositories/cw_device_type.repository.ts\n            \n            injectable\n            DeviceTypeRepository\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/repositories/cw_device_type.repository.ts\n            \n            type alias\n            DeviceTypeRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repositories/cw_devices.repository.ts\n            \n            injectable\n            DeviceRepository\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/repositories/cw_devices.repository.ts\n            \n            type alias\n            DeviceRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repositories/cw_location.repository.ts\n            \n            injectable\n            LocationRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/repositories/cw_location.repository.ts\n            \n            type alias\n            LocationRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repositories/data.repository.ts\n            \n            injectable\n            DataRepository\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/repositories/profiles.repositories.ts\n            \n            injectable\n            ProfileRepository\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/repositories/profiles.repositories.ts\n            \n            type alias\n            ProfileRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/repositories/reports_templates.repository.ts\n            \n            injectable\n            ReportTemplatesRepository\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/repositories/reports_templates.repository.ts\n            \n            type alias\n            DeviceRow\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/supabase/supabase.service.ts\n            \n            injectable\n            SupabaseService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^3.1.1\n        \n            @nestjs/cache-manager : ^2.3.0\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.3.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/serve-static : ^4.0.2\n        \n            @nestjs/swagger : ^7.4.2\n        \n            @nestjs/terminus : ^10.2.3\n        \n            @nestjs/throttler : ^6.2.1\n        \n            @supabase/supabase-js : ^2.45.6\n        \n            axios : ^1.7.7\n        \n            cache-manager : ^5.7.6\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            compression : ^1.7.5\n        \n            helmet : ^8.0.0\n        \n            passport-jwt : ^4.0.1\n        \n            pdfmake : ^0.2.15\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RelayState   (src/.../relay.controller.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/relay/relay.controller.ts\n    \n        \n            \n                \n                    \n                        \n                        RelayState\n                    \n                \n                        \n                            \n                                 Open\n                            \n                        \n                        \n                            \n                                Value : open (OFF)\n                            \n                        \n                        \n                            \n                                 Close\n                            \n                        \n                        \n                            \n                                Value : close (ON)\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            getSwaggerConfig   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSwaggerConfig\n                        \n                    \n                \n            \n            \n                \ngetSwaggerConfig(version: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                version\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CwDeviceOwnersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CwDevicesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CwDeviceTypeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GeolocationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PdfModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RelayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReportsTemplatesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SupabaseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_CwDeviceOwnersModule\n\n\n\ncluster_CwDeviceOwnersModule_exports\n\n\n\ncluster_CwDeviceOwnersModule_providers\n\n\n\ncluster_CwDevicesModule\n\n\n\ncluster_CwDevicesModule_exports\n\n\n\ncluster_CwDevicesModule_providers\n\n\n\ncluster_CwDeviceTypeModule\n\n\n\ncluster_CwDeviceTypeModule_exports\n\n\n\ncluster_CwDeviceTypeModule_providers\n\n\n\ncluster_DataModule\n\n\n\ncluster_DataModule_exports\n\n\n\ncluster_DataModule_providers\n\n\n\ncluster_GeolocationModule\n\n\n\ncluster_GeolocationModule_providers\n\n\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_PdfModule\n\n\n\ncluster_PdfModule_providers\n\n\n\ncluster_ProfilesModule\n\n\n\ncluster_ProfilesModule_providers\n\n\n\ncluster_RelayModule\n\n\n\ncluster_RelayModule_providers\n\n\n\ncluster_ReportsTemplatesModule\n\n\n\ncluster_ReportsTemplatesModule_exports\n\n\n\ncluster_ReportsTemplatesModule_providers\n\n\n\ncluster_SupabaseModule\n\n\n\ncluster_SupabaseModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nCwDevicesModule\n\nCwDevicesModule\n\nCwDevicesModule -->\n\nAuthModule->CwDevicesModule\n\n\n\n\n\nReportsTemplatesModule\n\nReportsTemplatesModule\n\nReportsTemplatesModule -->\n\nAuthModule->ReportsTemplatesModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCwDeviceTypeModule\n\nCwDeviceTypeModule\n\nCwDeviceTypeModule -->\n\nAuthModule->CwDeviceTypeModule\n\n\n\n\n\nCwDeviceOwnersModule\n\nCwDeviceOwnersModule\n\n\n\nPdfModule\n\nPdfModule\n\nPdfModule -->\n\nCwDeviceOwnersModule->PdfModule\n\n\n\nAppModule -->\n\nCwDeviceOwnersModule->AppModule\n\n\n\n\n\nCwDeviceOwnersService \n\nCwDeviceOwnersService \n\nCwDeviceOwnersService  -->\n\nCwDeviceOwnersModule->CwDeviceOwnersService \n\n\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nCwDevicesModule->DataModule\n\n\n\nPdfModule -->\n\nCwDevicesModule->PdfModule\n\n\n\nAppModule -->\n\nCwDevicesModule->AppModule\n\n\n\n\n\nCwDevicesService \n\nCwDevicesService \n\nCwDevicesService  -->\n\nCwDevicesModule->CwDevicesService \n\n\n\nPdfModule -->\n\nDataModule->PdfModule\n\n\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nDataRepository \n\nDataRepository \n\nDataRepository  -->\n\nDataModule->DataRepository \n\n\n\n\n\nDataService \n\nDataService \n\nDataService  -->\n\nDataModule->DataService \n\n\n\n\n\nGeolocationModule\n\nGeolocationModule\n\nAppModule -->\n\nGeolocationModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nAppModule -->\n\nLocationModule->AppModule\n\n\n\nAppModule -->\n\nPdfModule->AppModule\n\n\n\n\n\nProfilesModule\n\nProfilesModule\n\nAppModule -->\n\nProfilesModule->AppModule\n\n\n\n\n\nRelayModule\n\nRelayModule\n\nAppModule -->\n\nRelayModule->AppModule\n\n\n\nPdfModule -->\n\nReportsTemplatesModule->PdfModule\n\n\n\nAppModule -->\n\nReportsTemplatesModule->AppModule\n\n\n\n\n\nReportsTemplatesService \n\nReportsTemplatesService \n\nReportsTemplatesService  -->\n\nReportsTemplatesModule->ReportsTemplatesService \n\n\n\n\n\nSupabaseModule\n\nSupabaseModule\n\nCwDeviceOwnersModule -->\n\nSupabaseModule->CwDeviceOwnersModule\n\n\n\nCwDevicesModule -->\n\nSupabaseModule->CwDevicesModule\n\n\n\nLocationModule -->\n\nSupabaseModule->LocationModule\n\n\n\nProfilesModule -->\n\nSupabaseModule->ProfilesModule\n\n\n\nReportsTemplatesModule -->\n\nSupabaseModule->ReportsTemplatesModule\n\n\n\nAppModule -->\n\nSupabaseModule->AppModule\n\n\n\nCwDeviceTypeModule -->\n\nSupabaseModule->CwDeviceTypeModule\n\n\n\n\n\nSupabaseService \n\nSupabaseService \n\nSupabaseService  -->\n\nSupabaseModule->SupabaseService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\nGeolocationModule -->\n\nAuthService->GeolocationModule\n\n\n\nPdfModule -->\n\nAuthService->PdfModule\n\n\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nCwDeviceOwnersService\n\nCwDeviceOwnersService\n\nCwDeviceOwnersModule -->\n\nCwDeviceOwnersService->CwDeviceOwnersModule\n\n\n\nDataModule -->\n\nCwDeviceOwnersService->DataModule\n\n\n\n\n\nDeviceOwnerRepository\n\nDeviceOwnerRepository\n\nCwDeviceOwnersModule -->\n\nDeviceOwnerRepository->CwDeviceOwnersModule\n\n\n\nDataModule -->\n\nDeviceOwnerRepository->DataModule\n\n\n\n\n\nCwDevicesService\n\nCwDevicesService\n\nCwDevicesModule -->\n\nCwDevicesService->CwDevicesModule\n\n\n\nDataModule -->\n\nCwDevicesService->DataModule\n\n\n\n\n\nDeviceRepository\n\nDeviceRepository\n\nCwDevicesModule -->\n\nDeviceRepository->CwDevicesModule\n\n\n\nDataModule -->\n\nDeviceRepository->DataModule\n\n\n\nDataModule -->\n\nCwDeviceTypeModule->DataModule\n\n\n\nPdfModule -->\n\nCwDeviceTypeModule->PdfModule\n\n\n\n\n\nCwDeviceTypeService \n\nCwDeviceTypeService \n\nCwDeviceTypeService  -->\n\nCwDeviceTypeModule->CwDeviceTypeService \n\n\n\n\n\nCwDeviceTypeService\n\nCwDeviceTypeService\n\nDataModule -->\n\nCwDeviceTypeService->DataModule\n\n\n\nCwDeviceTypeModule -->\n\nCwDeviceTypeService->CwDeviceTypeModule\n\n\n\n\n\nDeviceTypeRepository\n\nDeviceTypeRepository\n\nDataModule -->\n\nDeviceTypeRepository->DataModule\n\n\n\nCwDeviceTypeModule -->\n\nDeviceTypeRepository->CwDeviceTypeModule\n\n\n\n\n\nDataRepository\n\nDataRepository\n\nDataModule -->\n\nDataRepository->DataModule\n\n\n\n\n\nDataService\n\nDataService\n\nDataModule -->\n\nDataService->DataModule\n\n\n\nPdfModule -->\n\nDataService->PdfModule\n\n\n\nPdfModule -->\n\nDataService->PdfModule\n\n\n\n\n\nSupabaseService\n\nSupabaseService\n\nDataModule -->\n\nSupabaseService->DataModule\n\n\n\nSupabaseModule -->\n\nSupabaseService->SupabaseModule\n\n\n\n\n\nGeolocationService\n\nGeolocationService\n\nGeolocationModule -->\n\nGeolocationService->GeolocationModule\n\n\n\n\n\nLocationRepository\n\nLocationRepository\n\nLocationModule -->\n\nLocationRepository->LocationModule\n\n\n\n\n\nLocationService\n\nLocationService\n\nLocationModule -->\n\nLocationService->LocationModule\n\n\n\n\n\nPdfService\n\nPdfService\n\nPdfModule -->\n\nPdfService->PdfModule\n\n\n\n\n\nProfileRepository\n\nProfileRepository\n\nProfilesModule -->\n\nProfileRepository->ProfilesModule\n\n\n\n\n\nProfilesService\n\nProfilesService\n\nProfilesModule -->\n\nProfilesService->ProfilesModule\n\n\n\n\n\nRelayService\n\nRelayService\n\nRelayModule -->\n\nRelayService->RelayModule\n\n\n\n\n\nReportTemplatesRepository\n\nReportTemplatesRepository\n\nReportsTemplatesModule -->\n\nReportTemplatesRepository->ReportsTemplatesModule\n\n\n\n\n\nReportsTemplatesService\n\nReportsTemplatesService\n\nReportsTemplatesModule -->\n\nReportsTemplatesService->ReportsTemplatesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    22 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    23 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CompositeTypes   (database.types.ts)\n                        \n                        \n                            Database   (database.types.ts)\n                        \n                        \n                            DeviceLocationRow   (src/.../cw_device_locations.repository.ts)\n                        \n                        \n                            DeviceOwnerRow   (src/.../cw_device_owners.service.ts)\n                        \n                        \n                            DeviceOwnerRow   (src/.../cw_device_owners.ts)\n                        \n                        \n                            DeviceRow   (src/.../cw_devices.repository.ts)\n                        \n                        \n                            DeviceRow   (src/.../reports_templates.repository.ts)\n                        \n                        \n                            DevicesRow   (src/.../cw_devices.controller.ts)\n                        \n                        \n                            DevicesRow   (src/.../cw_devices.service.ts)\n                        \n                        \n                            DeviceTypeRow   (src/.../cw_device_type.controller.ts)\n                        \n                        \n                            DeviceTypeRow   (src/.../cw_device_type.service.ts)\n                        \n                        \n                            DeviceTypeRow   (src/.../cw_device_type.repository.ts)\n                        \n                        \n                            Enums   (database.types.ts)\n                        \n                        \n                            Json   (database.types.ts)\n                        \n                        \n                            LocationRow   (src/.../cw_location.repository.ts)\n                        \n                        \n                            LocationsRow   (src/.../location.controller.ts)\n                        \n                        \n                            ProfileRow   (src/.../profiles.repositories.ts)\n                        \n                        \n                            PublicSchema   (database.types.ts)\n                        \n                        \n                            ReportsTemplatesRow   (src/.../reports_templates.service.ts)\n                        \n                        \n                            Tables   (database.types.ts)\n                        \n                        \n                            TablesInsert   (database.types.ts)\n                        \n                        \n                            TablesUpdate   (database.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    database.types.ts\n    \n    \n        \n            \n                \n                    \n                    CompositeTypes\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Database\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Enums\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Json\n                \n            \n            \n                \n                            string | number | boolean | null | literal type | Json[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PublicSchema\n                \n            \n            \n                \n                            Database\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Tables\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TablesInsert\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TablesUpdate\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/repositories/cw_device_locations.repository.ts\n    \n    \n        \n            \n                \n                    \n                    DeviceLocationRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/cw_device_owners/cw_device_owners.service.ts\n    \n    \n        \n            \n                \n                    \n                    DeviceOwnerRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/repositories/cw_device_owners.ts\n    \n    \n        \n            \n                \n                    \n                    DeviceOwnerRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/repositories/cw_devices.repository.ts\n    \n    \n        \n            \n                \n                    \n                    DeviceRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/repositories/reports_templates.repository.ts\n    \n    \n        \n            \n                \n                    \n                    DeviceRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/cw_devices/cw_devices.controller.ts\n    \n    \n        \n            \n                \n                    \n                    DevicesRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/cw_devices/cw_devices.service.ts\n    \n    \n        \n            \n                \n                    \n                    DevicesRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/cw_device_type/cw_device_type.controller.ts\n    \n    \n        \n            \n                \n                    \n                    DeviceTypeRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/cw_device_type/cw_device_type.service.ts\n    \n    \n        \n            \n                \n                    \n                    DeviceTypeRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/repositories/cw_device_type.repository.ts\n    \n    \n        \n            \n                \n                    \n                    DeviceTypeRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/repositories/cw_location.repository.ts\n    \n    \n        \n            \n                \n                    \n                    LocationRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/location/location.controller.ts\n    \n    \n        \n            \n                \n                    \n                    LocationsRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/repositories/profiles.repositories.ts\n    \n    \n        \n            \n                \n                    \n                    ProfileRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/reports_templates/reports_templates.service.ts\n    \n    \n        \n            \n                \n                    \n                    ReportsTemplatesRow\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            IS_PUBLIC_KEY   (src/.../public.decorator.ts)\n                        \n                        \n                            Public   (src/.../public.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
